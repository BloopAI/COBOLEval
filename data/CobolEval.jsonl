{"task_id":"HumanEval/0","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HAS-CLOSE-ELEMENTS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 L-THRESHOLD COMP-2.\n           05 RESULT PIC 9.\n\n      * Check if in given list of numbers, are any two numbers closer to each other than\n      * given threshold.\n      * >>> has_close_elements([1.0, 2.0, 3.0, 4.0, 5.0], 0.5)\n      * False\n      * >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0], 0.3)\n      * True\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"has_close_elements","canonical_solution":"    for idx, elem in enumerate(numbers):\n        for idx2, elem2 in enumerate(numbers):\n            if idx != idx2:\n                distance = abs(elem - elem2)\n                if distance < threshold:\n                    return True\n\n    return False\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HAS-CLOSE-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HAS-CLOSE-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 L-THRESHOLD COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.0 TO L-NUMBERS(1)\n       MOVE 2.0 TO L-NUMBERS(2)\n       MOVE 5.9 TO L-NUMBERS(3)\n       MOVE 4.0 TO L-NUMBERS(4)\n       MOVE 5.0 TO L-NUMBERS(5)\n       MOVE 0.95 TO L-THRESHOLD\n\n       CALL \"HAS-CLOSE-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HAS-CLOSE-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HAS-CLOSE-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 L-THRESHOLD COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.0 TO L-NUMBERS(1)\n       MOVE 2.0 TO L-NUMBERS(2)\n       MOVE 5.9 TO L-NUMBERS(3)\n       MOVE 4.0 TO L-NUMBERS(4)\n       MOVE 5.0 TO L-NUMBERS(5)\n       MOVE 0.8 TO L-THRESHOLD\n\n       CALL \"HAS-CLOSE-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HAS-CLOSE-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HAS-CLOSE-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 L-THRESHOLD COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.1 TO L-NUMBERS(1)\n       MOVE 2.2 TO L-NUMBERS(2)\n       MOVE 3.1 TO L-NUMBERS(3)\n       MOVE 4.1 TO L-NUMBERS(4)\n       MOVE 5.1 TO L-NUMBERS(5)\n       MOVE 1.0 TO L-THRESHOLD\n\n       CALL \"HAS-CLOSE-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HAS-CLOSE-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HAS-CLOSE-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 L-THRESHOLD COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.1 TO L-NUMBERS(1)\n       MOVE 2.2 TO L-NUMBERS(2)\n       MOVE 3.1 TO L-NUMBERS(3)\n       MOVE 4.1 TO L-NUMBERS(4)\n       MOVE 5.1 TO L-NUMBERS(5)\n       MOVE 0.5 TO L-THRESHOLD\n\n       CALL \"HAS-CLOSE-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/1","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SEPARATE-PAREN-GROUPS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-PAREN-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n      * Input to this function is a string containing multiple groups of nested parentheses. Your goal is to\n      * separate those group into separate strings and return the list of those.\n      * Separate groups are balanced (each open brace is properly closed) and not nested within each other\n      * Ignore any spaces in the input string.\n      * >>> separate_paren_groups('( ) (( )) (( )( ))')\n      * ['()', '(())', '(()())']\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"separate_paren_groups","canonical_solution":"    result = []\n    current_string = []\n    current_depth = 0\n\n    for c in paren_string:\n        if c == '(':\n            current_depth += 1\n            current_string.append(c)\n        elif c == ')':\n            current_depth -= 1\n            current_string.append(c)\n\n            if current_depth == 0:\n                result.append(''.join(current_string))\n                current_string.clear()\n\n    return result\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SEPARATE-PAREN-GROUPS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SEPARATE-PAREN-GROUPS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PAREN-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '(()()) ((())) () ((())()())' TO L-PAREN-STRING\n\n       CALL \"SEPARATE-PAREN-GROUPS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\n        '(()())', '((()))', '()', '((())()())'\n    ]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SEPARATE-PAREN-GROUPS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SEPARATE-PAREN-GROUPS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PAREN-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '() (()) ((())) (((())))' TO L-PAREN-STRING\n\n       CALL \"SEPARATE-PAREN-GROUPS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\n        '()', '(())', '((()))', '(((())))'\n    ]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SEPARATE-PAREN-GROUPS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SEPARATE-PAREN-GROUPS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PAREN-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '(()(())((())))' TO L-PAREN-STRING\n\n       CALL \"SEPARATE-PAREN-GROUPS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\n        '(()(())((())))'\n    ]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SEPARATE-PAREN-GROUPS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SEPARATE-PAREN-GROUPS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PAREN-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '( ) (( )) (( )( ))' TO L-PAREN-STRING\n\n       CALL \"SEPARATE-PAREN-GROUPS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['()', '(())', '(()())']","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/2","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRUNCATE-NUMBER.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER COMP-2.\n           05 RESULT COMP-2.\n\n      * Given a positive floating point number, it can be decomposed into\n      * and integer part (largest integer smaller than given number) and decimals\n      * (leftover part always smaller than 1).\n      * \n      * Return the decimal part of the number.\n      * >>> truncate_number(3.5)\n      * 0.5\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"truncate_number","canonical_solution":"    return number % 1.0\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRUNCATE-NUMBER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRUNCATE-NUMBER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER COMP-2.\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 3.5 TO L-NUMBER\n\n       CALL \"TRUNCATE-NUMBER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0.5","type_":"Float"}}]}
{"task_id":"HumanEval/3","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BELOW-ZERO.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-OPERATIONS OCCURS 8 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n      * You're given a list of deposit and withdrawal operations on a bank account that starts with\n      * zero balance. Your task is to detect if at any point the balance of account fallls below zero, and\n      * at that point function should return True. Otherwise it should return False.\n      * >>> below_zero([1, 2, 3, 4, 5, 6, 7, 8])\n      * False\n      * >>> below_zero([1, 2, -4, 5, 6, 7, 8, 9])\n      * True\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"below_zero","canonical_solution":"    balance = 0\n\n    for op in operations:\n        balance += op\n        if balance < 0:\n            return True\n\n    return False\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BELOW-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BELOW-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-OPERATIONS OCCURS 8 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-OPERATIONS(1)\n       MOVE -1 TO L-OPERATIONS(2)\n       MOVE 2 TO L-OPERATIONS(3)\n       MOVE -2 TO L-OPERATIONS(4)\n       MOVE 5 TO L-OPERATIONS(5)\n       MOVE -5 TO L-OPERATIONS(6)\n       MOVE 4 TO L-OPERATIONS(7)\n       MOVE -4 TO L-OPERATIONS(8)\n\n       CALL \"BELOW-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BELOW-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BELOW-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-OPERATIONS OCCURS 8 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-OPERATIONS(1)\n       MOVE -1 TO L-OPERATIONS(2)\n       MOVE 2 TO L-OPERATIONS(3)\n       MOVE -2 TO L-OPERATIONS(4)\n       MOVE 5 TO L-OPERATIONS(5)\n       MOVE -5 TO L-OPERATIONS(6)\n       MOVE 4 TO L-OPERATIONS(7)\n       MOVE -5 TO L-OPERATIONS(8)\n\n       CALL \"BELOW-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BELOW-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BELOW-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-OPERATIONS OCCURS 8 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-OPERATIONS(1)\n       MOVE -2 TO L-OPERATIONS(2)\n       MOVE 2 TO L-OPERATIONS(3)\n       MOVE -2 TO L-OPERATIONS(4)\n       MOVE 5 TO L-OPERATIONS(5)\n       MOVE -5 TO L-OPERATIONS(6)\n       MOVE 4 TO L-OPERATIONS(7)\n       MOVE -4 TO L-OPERATIONS(8)\n\n       CALL \"BELOW-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}}]}
{"task_id":"HumanEval/5","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSPERSE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-DELIMETER PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * Insert a number 'delimeter' between every two consecutive elements of input list `numbers'\n      * >>> intersperse([2, 2, 2], 4)\n      * [2, 4, 2, 4, 2]\n      * >>> intersperse([1, 2, 3], 4)\n      * [1, 4, 2, 4, 3]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"intersperse","canonical_solution":"    if not numbers:\n        return []\n\n    result = []\n\n    for n in numbers[:-1]:\n        result.append(n)\n        result.append(delimeter)\n\n    result.append(numbers[-1])\n\n    return result\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSPERSE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INTERSPERSE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-DELIMETER PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-NUMBERS(1)\n       MOVE 1 TO L-NUMBERS(2)\n       MOVE 1 TO L-NUMBERS(3)\n       MOVE 7 TO L-DELIMETER\n\n       CALL \"INTERSPERSE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 7, 1, 7, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSPERSE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INTERSPERSE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-DELIMETER PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-NUMBERS(1)\n       MOVE 6 TO L-NUMBERS(2)\n       MOVE 3 TO L-NUMBERS(3)\n       MOVE 8 TO L-DELIMETER\n\n       CALL \"INTERSPERSE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[5, 8, 6, 8, 3]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSPERSE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INTERSPERSE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-DELIMETER PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-NUMBERS(1)\n       MOVE 2 TO L-NUMBERS(2)\n       MOVE 2 TO L-NUMBERS(3)\n       MOVE 2 TO L-DELIMETER\n\n       CALL \"INTERSPERSE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 2, 2, 2, 2]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/6","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PARSE-NESTED-PARENS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-PAREN-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * Input to this function is a string represented multiple groups for nested parentheses separated by spaces.\n      * For each of the group, output the deepest level of nesting of parentheses.\n      * E.g. (()()) has maximum two levels of nesting while ((())) has three.\n      * \n      * >>> parse_nested_parens('(()()) ((())) () ((())()())')\n      * [2, 3, 1, 3]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"parse_nested_parens","canonical_solution":"    def parse_paren_group(s):\n        depth = 0\n        max_depth = 0\n        for c in s:\n            if c == '(':\n                depth += 1\n                max_depth = max(depth, max_depth)\n            else:\n                depth -= 1\n\n        return max_depth\n\n    return [parse_paren_group(x) for x in paren_string.split(' ') if x]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PARSE-NESTED-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PARSE-NESTED-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PAREN-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE '(()()) ((())) () ((())()())' TO L-PAREN-STRING\n\n       CALL \"PARSE-NESTED-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 3, 1, 3]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PARSE-NESTED-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PARSE-NESTED-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PAREN-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE '() (()) ((())) (((())))' TO L-PAREN-STRING\n\n       CALL \"PARSE-NESTED-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 2, 3, 4]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PARSE-NESTED-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PARSE-NESTED-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PAREN-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE '(()(())((())))' TO L-PAREN-STRING\n\n       CALL \"PARSE-NESTED-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/7","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILTER-BY-SUBSTRING.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 L-SUBSTRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n      * Filter an input list of strings only for ones that contain given substring\n      * >>> filter_by_substring(['abc', 'b', 'c'], 'a')\n      * ['abc']\n      * >>> filter_by_substring(['bacd', 'cde', 'array'], 'a')\n      * ['bacd', 'array']\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"filter_by_substring","canonical_solution":"    return [x for x in strings if substring in x]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILTER-BY-SUBSTRING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILTER-BY-SUBSTRING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 L-SUBSTRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'xxx' TO L-STRINGS(1)\n       MOVE 'asd' TO L-STRINGS(2)\n       MOVE 'xxy' TO L-STRINGS(3)\n       MOVE 'xxx' TO L-SUBSTRING\n\n       CALL \"FILTER-BY-SUBSTRING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['xxx']","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILTER-BY-SUBSTRING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILTER-BY-SUBSTRING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 L-SUBSTRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'xxx' TO L-STRINGS(1)\n       MOVE 'asd' TO L-STRINGS(2)\n       MOVE 'aaaxxy' TO L-STRINGS(3)\n       MOVE 'xx' TO L-SUBSTRING\n\n       CALL \"FILTER-BY-SUBSTRING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['xxx', 'aaaxxy']","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILTER-BY-SUBSTRING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILTER-BY-SUBSTRING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 L-SUBSTRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'grunt' TO L-STRINGS(1)\n       MOVE 'trumpet' TO L-STRINGS(2)\n       MOVE 'prune' TO L-STRINGS(3)\n       MOVE 'run' TO L-SUBSTRING\n\n       CALL \"FILTER-BY-SUBSTRING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['grunt', 'prune']","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/8","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-PRODUCT.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * For a given list of integers, return a tuple consisting of a sum and a product of all the integers in a list.\n      * >>> sum_product([0, 0, 0, 1])\n      * (1, 0)\n      * >>> sum_product([1, 2, 3, 4])\n      * (10, 24)\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"sum_product","canonical_solution":"    sum_value = 0\n    prod_value = 1\n\n    for n in numbers:\n        sum_value += n\n        prod_value *= n\n    return sum_value, prod_value\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-PRODUCT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-PRODUCT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-NUMBERS(1)\n       MOVE 1 TO L-NUMBERS(2)\n       MOVE 1 TO L-NUMBERS(3)\n       MOVE 1 TO L-NUMBERS(4)\n\n       CALL \"SUM-PRODUCT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-PRODUCT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-PRODUCT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 100 TO L-NUMBERS(1)\n       MOVE 0 TO L-NUMBERS(2)\n       MOVE 0 TO L-NUMBERS(3)\n       MOVE 0 TO L-NUMBERS(4)\n\n       CALL \"SUM-PRODUCT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[100, 0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-PRODUCT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-PRODUCT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-NUMBERS(1)\n       MOVE 5 TO L-NUMBERS(2)\n       MOVE 7 TO L-NUMBERS(3)\n       MOVE 1 TO L-NUMBERS(4)\n\n       CALL \"SUM-PRODUCT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[16, 105]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-PRODUCT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-PRODUCT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-NUMBERS(1)\n       MOVE 1 TO L-NUMBERS(2)\n       MOVE 1 TO L-NUMBERS(3)\n       MOVE 1 TO L-NUMBERS(4)\n\n       CALL \"SUM-PRODUCT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[13, 10]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/9","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROLLING-MAX.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * From a given list of integers, generate a list of rolling maximum element found until given moment\n      * in the sequence.\n      * >>> rolling_max([1, 2, 3, 2])\n      * [1, 2, 3, 3]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"rolling_max","canonical_solution":"    running_max = None\n    result = []\n\n    for n in numbers:\n        if running_max is None:\n            running_max = n\n        else:\n            running_max = max(running_max, n)\n\n        result.append(running_max)\n\n    return result\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROLLING-MAX-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROLLING-MAX.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-NUMBERS(1)\n       MOVE 2 TO L-NUMBERS(2)\n       MOVE 3 TO L-NUMBERS(3)\n       MOVE 4 TO L-NUMBERS(4)\n\n       CALL \"ROLLING-MAX\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 2, 3, 4]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROLLING-MAX-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROLLING-MAX.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-NUMBERS(1)\n       MOVE 3 TO L-NUMBERS(2)\n       MOVE 2 TO L-NUMBERS(3)\n       MOVE 1 TO L-NUMBERS(4)\n\n       CALL \"ROLLING-MAX\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4, 4, 4, 4]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROLLING-MAX-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROLLING-MAX.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-NUMBERS(1)\n       MOVE 2 TO L-NUMBERS(2)\n       MOVE 3 TO L-NUMBERS(3)\n       MOVE 100 TO L-NUMBERS(4)\n\n       CALL \"ROLLING-MAX\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[3, 3, 3, 100]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/11","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-XOR.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC X(100).\n           05 L-B PIC X(100).\n           05 RESULT PIC X(100).\n\n      * Input are two strings a and b consisting only of 1s and 0s.\n      * Perform binary XOR on these inputs and return result also as a string.\n      * >>> string_xor('010', '110')\n      * '100'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"string_xor","canonical_solution":"    def xor(i, j):\n        if i == j:\n            return '0'\n        else:\n            return '1'\n\n    return ''.join(xor(x, y) for x, y in zip(a, b))\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-XOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRING-XOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC X(100).\n           05 L-B PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '111000' TO L-A\n       MOVE '101010' TO L-B\n\n       CALL \"STRING-XOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'010010'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-XOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRING-XOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC X(100).\n           05 L-B PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '1' TO L-A\n       MOVE '1' TO L-B\n\n       CALL \"STRING-XOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'0'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-XOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRING-XOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC X(100).\n           05 L-B PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '0101' TO L-A\n       MOVE '0000' TO L-B\n\n       CALL \"STRING-XOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'0101'","type_":"String"}}]}
{"task_id":"HumanEval/12","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LONGEST.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 RESULT PIC X(100).\n\n      * Out of list of strings, return the longest one. Return the first one in case of multiple\n      * strings of the same length.\n      * >>> longest(['a', 'b', 'c'])\n      * 'a'\n      * >>> longest(['a', 'bb', 'ccc'])\n      * 'ccc'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"longest","canonical_solution":"    if not strings:\n        return None\n\n    maxlen = max(len(x) for x in strings)\n    for s in strings:\n        if len(s) == maxlen:\n            return s\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LONGEST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LONGEST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'x' TO L-STRINGS(1)\n       MOVE 'y' TO L-STRINGS(2)\n       MOVE 'z' TO L-STRINGS(3)\n\n       CALL \"LONGEST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'x'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LONGEST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LONGEST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'yyy' TO L-STRINGS(1)\n       MOVE 'zzzz' TO L-STRINGS(2)\n       MOVE 'kkkk' TO L-STRINGS(3)\n\n       CALL \"LONGEST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'zzzz'","type_":"String"}}]}
{"task_id":"HumanEval/13","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GREATEST-COMMON-DIVISOR.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Return a greatest common divisor of two integers a and b\n      * >>> greatest_common_divisor(3, 5)\n      * 1\n      * >>> greatest_common_divisor(25, 15)\n      * 5\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"greatest_common_divisor","canonical_solution":"    while b:\n        a, b = b, a % b\n    return a\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GREATEST-COMMON-DIVISOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GREATEST-COMMON-DIVISOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-A\n       MOVE 7 TO L-B\n\n       CALL \"GREATEST-COMMON-DIVISOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GREATEST-COMMON-DIVISOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GREATEST-COMMON-DIVISOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-A\n       MOVE 15 TO L-B\n\n       CALL \"GREATEST-COMMON-DIVISOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GREATEST-COMMON-DIVISOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GREATEST-COMMON-DIVISOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 49 TO L-A\n       MOVE 14 TO L-B\n\n       CALL \"GREATEST-COMMON-DIVISOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"7","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GREATEST-COMMON-DIVISOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GREATEST-COMMON-DIVISOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 144 TO L-A\n       MOVE 60 TO L-B\n\n       CALL \"GREATEST-COMMON-DIVISOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"12","type_":"Int"}}]}
{"task_id":"HumanEval/14","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ALL-PREFIXES.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n      * Return list of all prefixes from shortest to longest of the input string\n      * >>> all_prefixes('abc')\n      * ['a', 'ab', 'abc']\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"all_prefixes","canonical_solution":"    result = []\n\n    for i in range(len(string)):\n        result.append(string[:i+1])\n    return result\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ALL-PREFIXES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ALL-PREFIXES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-STRING\n\n       CALL \"ALL-PREFIXES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ALL-PREFIXES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ALL-PREFIXES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'asdfgh' TO L-STRING\n\n       CALL \"ALL-PREFIXES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ALL-PREFIXES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ALL-PREFIXES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'WWW' TO L-STRING\n\n       CALL \"ALL-PREFIXES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['W', 'WW', 'WWW']","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/15","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-SEQUENCE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC X(100).\n\n      * Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n      * >>> string_sequence(0)\n      * '0'\n      * >>> string_sequence(5)\n      * '0 1 2 3 4 5'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"string_sequence","canonical_solution":"    return ' '.join([str(x) for x in range(n + 1)])\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-SEQUENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRING-SEQUENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-N\n\n       CALL \"STRING-SEQUENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'0'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-SEQUENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRING-SEQUENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n\n       CALL \"STRING-SEQUENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'0 1 2 3'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-SEQUENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRING-SEQUENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-N\n\n       CALL \"STRING-SEQUENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'0 1 2 3 4 5 6 7 8 9 10'","type_":"String"}}]}
{"task_id":"HumanEval/16","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-DISTINCT-CHARACTERS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n      * Given a string, find out how many distinct characters (regardless of case) does it consist of\n      * >>> count_distinct_characters('xyzXYZ')\n      * 3\n      * >>> count_distinct_characters('Jerry')\n      * 4\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"count_distinct_characters","canonical_solution":"    return len(set(string.lower()))\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-DISTINCT-CHARACTERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-DISTINCT-CHARACTERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-STRING\n\n       CALL \"COUNT-DISTINCT-CHARACTERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-DISTINCT-CHARACTERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-DISTINCT-CHARACTERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'abcde' TO L-STRING\n\n       CALL \"COUNT-DISTINCT-CHARACTERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-DISTINCT-CHARACTERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-DISTINCT-CHARACTERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'aaaaAAAAaaaa' TO L-STRING\n\n       CALL \"COUNT-DISTINCT-CHARACTERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-DISTINCT-CHARACTERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-DISTINCT-CHARACTERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Jerry jERRY JeRRRY' TO L-STRING\n\n       CALL \"COUNT-DISTINCT-CHARACTERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5","type_":"Int"}}]}
{"task_id":"HumanEval/17","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PARSE-MUSIC.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-MUSIC-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * Input to this function is a string representing musical notes in a special ASCII format.\n      * Your task is to parse this string and return list of integers corresponding to how many beats does each\n      * not last.\n      * \n      * Here is a legend:\n      * 'o' - whole note, lasts four beats\n      * 'o|' - half note, lasts two beats\n      * '.|' - quater note, lasts one beat\n      * \n      * >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n      * [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"parse_music","canonical_solution":"    note_map = {'o': 4, 'o|': 2, '.|': 1}\n    return [note_map[x] for x in music_string.split(' ') if x]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PARSE-MUSIC-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PARSE-MUSIC.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-MUSIC-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-MUSIC-STRING\n\n       CALL \"PARSE-MUSIC\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PARSE-MUSIC-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PARSE-MUSIC.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-MUSIC-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'o o o o' TO L-MUSIC-STRING\n\n       CALL \"PARSE-MUSIC\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4, 4, 4, 4]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PARSE-MUSIC-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PARSE-MUSIC.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-MUSIC-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE '.| .| .| .|' TO L-MUSIC-STRING\n\n       CALL \"PARSE-MUSIC\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 1, 1, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PARSE-MUSIC-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PARSE-MUSIC.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-MUSIC-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'o| o| .| .| o o o o' TO L-MUSIC-STRING\n\n       CALL \"PARSE-MUSIC\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 2, 1, 1, 4, 4, 4, 4]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PARSE-MUSIC-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PARSE-MUSIC.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-MUSIC-STRING PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'o| .| o| .| o o| o o|' TO L-MUSIC-STRING\n\n       CALL \"PARSE-MUSIC\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 1, 2, 1, 4, 2, 4, 2]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/18","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HOW-MANY-TIMES.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 L-SUBSTRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n      * Find how many times a given substring can be found in the original string. Count overlaping cases.\n      * >>> how_many_times('', 'a')\n      * 0\n      * >>> how_many_times('aaa', 'a')\n      * 3\n      * >>> how_many_times('aaaa', 'aa')\n      * 3\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"how_many_times","canonical_solution":"    times = 0\n\n    for i in range(len(string) - len(substring) + 1):\n        if string[i:i+len(substring)] == substring:\n            times += 1\n\n    return times\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HOW-MANY-TIMES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HOW-MANY-TIMES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 L-SUBSTRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-STRING\n       MOVE 'x' TO L-SUBSTRING\n\n       CALL \"HOW-MANY-TIMES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HOW-MANY-TIMES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HOW-MANY-TIMES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 L-SUBSTRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'xyxyxyx' TO L-STRING\n       MOVE 'x' TO L-SUBSTRING\n\n       CALL \"HOW-MANY-TIMES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HOW-MANY-TIMES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HOW-MANY-TIMES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 L-SUBSTRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'cacacacac' TO L-STRING\n       MOVE 'cac' TO L-SUBSTRING\n\n       CALL \"HOW-MANY-TIMES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HOW-MANY-TIMES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HOW-MANY-TIMES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 L-SUBSTRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'john doe' TO L-STRING\n       MOVE 'john' TO L-SUBSTRING\n\n       CALL \"HOW-MANY-TIMES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}}]}
{"task_id":"HumanEval/19","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-NUMBERS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS PIC X(100).\n           05 RESULT PIC X(100).\n\n      * Input is a space-delimited string of numberals from 'zero' to 'nine'.\n      * Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n      * Return the string with numbers sorted from smallest to largest\n      * >>> sort_numbers('three one five')\n      * 'one three five'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"sort_numbers","canonical_solution":"    value_map = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    }\n    return ' '.join(sorted([x for x in numbers.split(' ') if x], key=lambda x: value_map[x]))\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-NUMBERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORT-NUMBERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-NUMBERS\n\n       CALL \"SORT-NUMBERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"''","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-NUMBERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORT-NUMBERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'three' TO L-NUMBERS\n\n       CALL \"SORT-NUMBERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'three'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-NUMBERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORT-NUMBERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'three five nine' TO L-NUMBERS\n\n       CALL \"SORT-NUMBERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'three five nine'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-NUMBERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORT-NUMBERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'five zero four seven nine eight' TO L-NUMBERS\n\n       CALL \"SORT-NUMBERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'zero four five seven eight nine'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-NUMBERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORT-NUMBERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'six five four three two one zero' TO L-NUMBERS\n\n       CALL \"SORT-NUMBERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'zero one two three four five six'","type_":"String"}}]}
{"task_id":"HumanEval/20","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIND-CLOSEST-ELEMENTS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 6 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n      * From a supplied list of numbers (of length at least two) select and return two that are the closest to each\n      * other and return them in order (smaller number, larger number).\n      * >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])\n      * (2.0, 2.2)\n      * >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])\n      * (2.0, 2.0)\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"find_closest_elements","canonical_solution":"    closest_pair = None\n    distance = None\n\n    for idx, elem in enumerate(numbers):\n        for idx2, elem2 in enumerate(numbers):\n            if idx != idx2:\n                if distance is None:\n                    distance = abs(elem - elem2)\n                    closest_pair = tuple(sorted([elem, elem2]))\n                else:\n                    new_distance = abs(elem - elem2)\n                    if new_distance < distance:\n                        distance = new_distance\n                        closest_pair = tuple(sorted([elem, elem2]))\n\n    return closest_pair\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIND-CLOSEST-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIND-CLOSEST-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 6 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.0 TO L-NUMBERS(1)\n       MOVE 2.0 TO L-NUMBERS(2)\n       MOVE 3.9 TO L-NUMBERS(3)\n       MOVE 4.0 TO L-NUMBERS(4)\n       MOVE 5.0 TO L-NUMBERS(5)\n       MOVE 2.2 TO L-NUMBERS(6)\n\n       CALL \"FIND-CLOSEST-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO FLOAT-REPR\n           STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"(3.9, 4.0)","type_":{"List":"Float"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIND-CLOSEST-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIND-CLOSEST-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 6 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.0 TO L-NUMBERS(1)\n       MOVE 2.0 TO L-NUMBERS(2)\n       MOVE 5.9 TO L-NUMBERS(3)\n       MOVE 4.0 TO L-NUMBERS(4)\n       MOVE 5.0 TO L-NUMBERS(5)\n       MOVE 7.0 TO L-NUMBERS(6)\n\n       CALL \"FIND-CLOSEST-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO FLOAT-REPR\n           STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"(5.0, 5.9)","type_":{"List":"Float"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIND-CLOSEST-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIND-CLOSEST-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 6 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.0 TO L-NUMBERS(1)\n       MOVE 2.0 TO L-NUMBERS(2)\n       MOVE 3.0 TO L-NUMBERS(3)\n       MOVE 4.0 TO L-NUMBERS(4)\n       MOVE 5.0 TO L-NUMBERS(5)\n       MOVE 2.2 TO L-NUMBERS(6)\n\n       CALL \"FIND-CLOSEST-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO FLOAT-REPR\n           STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"(2.0, 2.2)","type_":{"List":"Float"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIND-CLOSEST-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIND-CLOSEST-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 6 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.0 TO L-NUMBERS(1)\n       MOVE 2.0 TO L-NUMBERS(2)\n       MOVE 3.0 TO L-NUMBERS(3)\n       MOVE 4.0 TO L-NUMBERS(4)\n       MOVE 5.0 TO L-NUMBERS(5)\n       MOVE 2.0 TO L-NUMBERS(6)\n\n       CALL \"FIND-CLOSEST-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO FLOAT-REPR\n           STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"(2.0, 2.0)","type_":{"List":"Float"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIND-CLOSEST-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIND-CLOSEST-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 6 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.1 TO L-NUMBERS(1)\n       MOVE 2.2 TO L-NUMBERS(2)\n       MOVE 3.1 TO L-NUMBERS(3)\n       MOVE 4.1 TO L-NUMBERS(4)\n       MOVE 5.1 TO L-NUMBERS(5)\n       MOVE 7.0 TO L-NUMBERS(6)\n\n       CALL \"FIND-CLOSEST-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO FLOAT-REPR\n           STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"(2.2, 3.1)","type_":{"List":"Float"}}}]}
{"task_id":"HumanEval/21","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RESCALE-TO-UNIT.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n      * Given list of numbers (of at least two elements), apply a linear transform to that list,\n      * such that the smallest number will become 0 and the largest will become 1\n      * >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n      * [0.0, 0.25, 0.5, 0.75, 1.0]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"rescale_to_unit","canonical_solution":"    min_number = min(numbers)\n    max_number = max(numbers)\n    return [(x - min_number) / (max_number - min_number) for x in numbers]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RESCALE-TO-UNIT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RESCALE-TO-UNIT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2.0 TO L-NUMBERS(1)\n       MOVE 49.9 TO L-NUMBERS(2)\n       MOVE 2.0 TO L-NUMBERS(3)\n       MOVE 2.0 TO L-NUMBERS(4)\n       MOVE 2.0 TO L-NUMBERS(5)\n\n       CALL \"RESCALE-TO-UNIT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO FLOAT-REPR\n           STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0.0, 1.0, 0.0, 0.0]","type_":{"List":"Float"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RESCALE-TO-UNIT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RESCALE-TO-UNIT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 100.0 TO L-NUMBERS(1)\n       MOVE 49.9 TO L-NUMBERS(2)\n       MOVE 100.0 TO L-NUMBERS(3)\n       MOVE 100.0 TO L-NUMBERS(4)\n       MOVE 100.0 TO L-NUMBERS(5)\n\n       CALL \"RESCALE-TO-UNIT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO FLOAT-REPR\n           STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1.0, 0.0, 1.0, 1.0, 1.0]","type_":{"List":"Float"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RESCALE-TO-UNIT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RESCALE-TO-UNIT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.0 TO L-NUMBERS(1)\n       MOVE 2.0 TO L-NUMBERS(2)\n       MOVE 3.0 TO L-NUMBERS(3)\n       MOVE 4.0 TO L-NUMBERS(4)\n       MOVE 5.0 TO L-NUMBERS(5)\n\n       CALL \"RESCALE-TO-UNIT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO FLOAT-REPR\n           STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0.0, 0.25, 0.5, 0.75, 1.0]","type_":{"List":"Float"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RESCALE-TO-UNIT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RESCALE-TO-UNIT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2.0 TO L-NUMBERS(1)\n       MOVE 1.0 TO L-NUMBERS(2)\n       MOVE 5.0 TO L-NUMBERS(3)\n       MOVE 3.0 TO L-NUMBERS(4)\n       MOVE 4.0 TO L-NUMBERS(5)\n\n       CALL \"RESCALE-TO-UNIT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO FLOAT-REPR\n           STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0.25, 0.0, 1.0, 0.5, 0.75]","type_":{"List":"Float"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RESCALE-TO-UNIT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RESCALE-TO-UNIT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 12.0 TO L-NUMBERS(1)\n       MOVE 11.0 TO L-NUMBERS(2)\n       MOVE 15.0 TO L-NUMBERS(3)\n       MOVE 13.0 TO L-NUMBERS(4)\n       MOVE 14.0 TO L-NUMBERS(5)\n\n       CALL \"RESCALE-TO-UNIT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO FLOAT-REPR\n           STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0.25, 0.0, 1.0, 0.5, 0.75]","type_":{"List":"Float"}}}]}
{"task_id":"HumanEval/23","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRLEN.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n      * Return length of given string. Ignore leading and trailing spaces.\n      * >>> strlen('')\n      * 0\n      * >>> strlen('abc')\n      * 3\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"strlen","canonical_solution":"    return len(string)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRLEN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRLEN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-STRING\n\n       CALL \"STRLEN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRLEN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRLEN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'x' TO L-STRING\n\n       CALL \"STRLEN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRLEN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRLEN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'asdasnakj' TO L-STRING\n\n       CALL \"STRLEN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"9","type_":"Int"}}]}
{"task_id":"HumanEval/24","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-DIVISOR.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * For a given number n, find the largest number that divides n evenly, smaller than n\n      * >>> largest_divisor(15)\n      * 5\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"largest_divisor","canonical_solution":"    for i in reversed(range(n)):\n        if n % i == 0:\n            return i\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-DIVISOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LARGEST-DIVISOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n\n       CALL \"LARGEST-DIVISOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-DIVISOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LARGEST-DIVISOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-N\n\n       CALL \"LARGEST-DIVISOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-DIVISOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LARGEST-DIVISOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-N\n\n       CALL \"LARGEST-DIVISOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-DIVISOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LARGEST-DIVISOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 100 TO L-N\n\n       CALL \"LARGEST-DIVISOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"50","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-DIVISOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LARGEST-DIVISOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 49 TO L-N\n\n       CALL \"LARGEST-DIVISOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"7","type_":"Int"}}]}
{"task_id":"HumanEval/25","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FACTORIZE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * Return list of prime factors of given integer in the order from smallest to largest.\n      * Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n      * Input number should be equal to the product of all factors\n      * >>> factorize(8)\n      * [2, 2, 2]\n      * >>> factorize(25)\n      * [5, 5]\n      * >>> factorize(70)\n      * [2, 5, 7]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"factorize","canonical_solution":"    import math\n    fact = []\n    i = 2\n    while i <= int(math.sqrt(n) + 1):\n        if n % i == 0:\n            fact.append(i)\n            n //= i\n        else:\n            i += 1\n\n    if n > 1:\n        fact.append(n)\n    return fact\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FACTORIZE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FACTORIZE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-N\n\n       CALL \"FACTORIZE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FACTORIZE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FACTORIZE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-N\n\n       CALL \"FACTORIZE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 2]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FACTORIZE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FACTORIZE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-N\n\n       CALL \"FACTORIZE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 2, 2]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/26","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. REMOVE-DUPLICATES.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * From a list of integers, remove all elements that occur more than once.\n      * Keep order of elements left the same as in the input.\n      * >>> remove_duplicates([1, 2, 3, 2, 4])\n      * [1, 3, 4]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"remove_duplicates","canonical_solution":"    import collections\n    c = collections.Counter(numbers)\n    return [n for n in numbers if c[n] <= 1]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. REMOVE-DUPLICATES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"REMOVE-DUPLICATES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-NUMBERS(1)\n       MOVE 2 TO L-NUMBERS(2)\n       MOVE 3 TO L-NUMBERS(3)\n       MOVE 4 TO L-NUMBERS(4)\n       MOVE 5 TO L-NUMBERS(5)\n\n       CALL \"REMOVE-DUPLICATES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 2, 3, 4, 5]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. REMOVE-DUPLICATES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"REMOVE-DUPLICATES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBERS OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-NUMBERS(1)\n       MOVE 2 TO L-NUMBERS(2)\n       MOVE 2 TO L-NUMBERS(3)\n       MOVE 4 TO L-NUMBERS(4)\n       MOVE 5 TO L-NUMBERS(5)\n\n       CALL \"REMOVE-DUPLICATES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 4, 5]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/27","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FLIP-CASE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC X(100).\n\n      * For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n      * >>> flip_case('Hello')\n      * 'hELLO'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"flip_case","canonical_solution":"    return string.swapcase()\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FLIP-CASE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FLIP-CASE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-STRING\n\n       CALL \"FLIP-CASE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"''","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FLIP-CASE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FLIP-CASE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Hello!' TO L-STRING\n\n       CALL \"FLIP-CASE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'hELLO!'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FLIP-CASE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FLIP-CASE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'These violent delights have violent ends' TO L-STRING\n\n       CALL \"FLIP-CASE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'","type_":"String"}}]}
{"task_id":"HumanEval/28","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CONCATENATE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 RESULT PIC X(100).\n\n      * Concatenate list of strings into a single string\n      * >>> concatenate(['b', 'c', 'd'])\n      * 'bcd'\n      * >>> concatenate(['a', 'b', 'c'])\n      * 'abc'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"concatenate","canonical_solution":"    return ''.join(strings)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CONCATENATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CONCATENATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'x' TO L-STRINGS(1)\n       MOVE 'y' TO L-STRINGS(2)\n       MOVE 'z' TO L-STRINGS(3)\n\n       CALL \"CONCATENATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'xyz'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CONCATENATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CONCATENATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'x' TO L-STRINGS(1)\n       MOVE 'y' TO L-STRINGS(2)\n       MOVE 'w' TO L-STRINGS(3)\n\n       CALL \"CONCATENATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'xyw'","type_":"String"}}]}
{"task_id":"HumanEval/29","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILTER-BY-PREFIX.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 L-PREFIX PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n      * Filter an input list of strings only for ones that start with a given prefix.\n      * >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'ab')\n      * ['abc']\n      * >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n      * ['abc', 'array']\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"filter_by_prefix","canonical_solution":"    return [x for x in strings if x.startswith(prefix)]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILTER-BY-PREFIX-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILTER-BY-PREFIX.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 L-PREFIX PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'xxx' TO L-STRINGS(1)\n       MOVE 'asd' TO L-STRINGS(2)\n       MOVE 'xxy' TO L-STRINGS(3)\n       MOVE 'john doe' TO L-STRINGS(4)\n       MOVE 'john' TO L-PREFIX\n\n       CALL \"FILTER-BY-PREFIX\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['john doe']","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILTER-BY-PREFIX-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILTER-BY-PREFIX.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRINGS OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 L-PREFIX PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'xxx' TO L-STRINGS(1)\n       MOVE 'asd' TO L-STRINGS(2)\n       MOVE 'xxy' TO L-STRINGS(3)\n       MOVE 'john doe' TO L-STRINGS(4)\n       MOVE 'xxx' TO L-PREFIX\n\n       CALL \"FILTER-BY-PREFIX\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['xxx']","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/30","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-POSITIVE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * Return only positive numbers in the list.\n      * >>> get_positive([-1, 2, -4, 5, 6])\n      * [2, 5, 6]\n      * >>> get_positive([5, 3, -5, 2, -3])\n      * [5, 3, 2]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"get_positive","canonical_solution":"    return [e for e in l if e > 0]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-POSITIVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-POSITIVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -1 TO L-L(1)\n       MOVE -2 TO L-L(2)\n       MOVE 4 TO L-L(3)\n       MOVE 5 TO L-L(4)\n       MOVE 6 TO L-L(5)\n\n       CALL \"GET-POSITIVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4, 5, 6]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-POSITIVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-POSITIVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 9 TO L-L(1)\n       MOVE 0 TO L-L(2)\n       MOVE 123 TO L-L(3)\n       MOVE 1 TO L-L(4)\n       MOVE -10 TO L-L(5)\n\n       CALL \"GET-POSITIVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[9, 123, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-POSITIVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-POSITIVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -1 TO L-L(1)\n       MOVE -2 TO L-L(2)\n       MOVE 0 TO L-L(3)\n       MOVE 0 TO L-L(4)\n       MOVE 0 TO L-L(5)\n\n       CALL \"GET-POSITIVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-POSITIVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-POSITIVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 2 TO L-L(2)\n       MOVE 3 TO L-L(3)\n       MOVE 4 TO L-L(4)\n       MOVE 5 TO L-L(5)\n\n       CALL \"GET-POSITIVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 2, 3, 4, 5]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/31","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PRIME.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n      * Return true if a given number is prime, and false otherwise.\n      * >>> is_prime(6)\n      * False\n      * >>> is_prime(101)\n      * True\n      * >>> is_prime(11)\n      * True\n      * >>> is_prime(13441)\n      * True\n      * >>> is_prime(61)\n      * True\n      * >>> is_prime(4)\n      * False\n      * >>> is_prime(1)\n      * False\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"is_prime","canonical_solution":"    if n < 2:\n        return False\n    for k in range(2, n - 1):\n        if n % k == 0:\n            return False\n    return True\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 6 TO L-N\n\n       CALL \"IS-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 101 TO L-N\n\n       CALL \"IS-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 11 TO L-N\n\n       CALL \"IS-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 13441 TO L-N\n\n       CALL \"IS-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 61 TO L-N\n\n       CALL \"IS-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-N\n\n       CALL \"IS-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"IS-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"IS-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 11 TO L-N\n\n       CALL \"IS-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 17 TO L-N\n\n       CALL \"IS-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}}]}
{"task_id":"HumanEval/34","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. UNIQUE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 9 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * Return sorted unique elements in a list\n      * >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n      * [0, 2, 3, 5, 9, 123]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"unique","canonical_solution":"    return sorted(list(set(l)))\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. UNIQUE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"UNIQUE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 9 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-L(1)\n       MOVE 3 TO L-L(2)\n       MOVE 5 TO L-L(3)\n       MOVE 2 TO L-L(4)\n       MOVE 3 TO L-L(5)\n       MOVE 3 TO L-L(6)\n       MOVE 9 TO L-L(7)\n       MOVE 0 TO L-L(8)\n       MOVE 123 TO L-L(9)\n\n       CALL \"UNIQUE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0, 2, 3, 5, 9, 123]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. UNIQUE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"UNIQUE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 9 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-L(1)\n       MOVE 3 TO L-L(2)\n       MOVE 5 TO L-L(3)\n       MOVE 2 TO L-L(4)\n       MOVE 3 TO L-L(5)\n       MOVE 3 TO L-L(6)\n       MOVE 9 TO L-L(7)\n       MOVE 0 TO L-L(8)\n       MOVE 0 TO L-L(9)\n\n       CALL \"UNIQUE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0, 2, 3, 5, 9, 123]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. UNIQUE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"UNIQUE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 9 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-L(1)\n       MOVE 3 TO L-L(2)\n       MOVE 5 TO L-L(3)\n       MOVE 2 TO L-L(4)\n       MOVE 3 TO L-L(5)\n       MOVE 124 TO L-L(6)\n       MOVE 9 TO L-L(7)\n       MOVE 0 TO L-L(8)\n       MOVE 123 TO L-L(9)\n\n       CALL \"UNIQUE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0, 2, 3, 5, 9, 123, 124]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/35","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAX-ELEMENT.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Return maximum element in the list.\n      * >>> max_element([1, 2, 3])\n      * 3\n      * >>> max_element([5, 3, -5])\n      * 5\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"max_element","canonical_solution":"    m = l[0]\n    for e in l:\n        if e > m:\n            m = e\n    return m\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAX-ELEMENT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MAX-ELEMENT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-L(1)\n       MOVE 2 TO L-L(2)\n       MOVE 3 TO L-L(3)\n\n       CALL \"MAX-ELEMENT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"10","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAX-ELEMENT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MAX-ELEMENT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 124 TO L-L(1)\n       MOVE 1 TO L-L(2)\n       MOVE -10 TO L-L(3)\n\n       CALL \"MAX-ELEMENT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"124","type_":"Int"}}]}
{"task_id":"HumanEval/36","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIZZ-BUZZ.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n      * >>> fizz_buzz(50)\n      * 0\n      * >>> fizz_buzz(78)\n      * 2\n      * >>> fizz_buzz(79)\n      * 3\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"fizz_buzz","canonical_solution":"    ns = []\n    for i in range(n):\n        if i % 11 == 0 or i % 13 == 0:\n            ns.append(i)\n    s = ''.join(list(map(str, ns)))\n    ans = 0\n    for c in s:\n        ans += (c == '7')\n    return ans\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIZZ-BUZZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIZZ-BUZZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 50 TO L-N\n\n       CALL \"FIZZ-BUZZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIZZ-BUZZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIZZ-BUZZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 78 TO L-N\n\n       CALL \"FIZZ-BUZZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIZZ-BUZZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIZZ-BUZZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 79 TO L-N\n\n       CALL \"FIZZ-BUZZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIZZ-BUZZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIZZ-BUZZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 100 TO L-N\n\n       CALL \"FIZZ-BUZZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIZZ-BUZZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIZZ-BUZZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 200 TO L-N\n\n       CALL \"FIZZ-BUZZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"6","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIZZ-BUZZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIZZ-BUZZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4000 TO L-N\n\n       CALL \"FIZZ-BUZZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"192","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIZZ-BUZZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIZZ-BUZZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10000 TO L-N\n\n       CALL \"FIZZ-BUZZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"639","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIZZ-BUZZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIZZ-BUZZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 100000 TO L-N\n\n       CALL \"FIZZ-BUZZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"8026","type_":"Int"}}]}
{"task_id":"HumanEval/39","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-FIB.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n      * >>> prime_fib(1)\n      * 2\n      * >>> prime_fib(2)\n      * 3\n      * >>> prime_fib(3)\n      * 5\n      * >>> prime_fib(4)\n      * 13\n      * >>> prime_fib(5)\n      * 89\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"prime_fib","canonical_solution":"    import math\n\n    def is_prime(p):\n        if p < 2:\n            return False\n        for k in range(2, min(int(math.sqrt(p)) + 1, p - 1)):\n            if p % k == 0:\n                return False\n        return True\n    f = [0, 1]\n    while True:\n        f.append(f[-1] + f[-2])\n        if is_prime(f[-1]):\n            n -= 1\n        if n == 0:\n            return f[-1]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"PRIME-FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-N\n\n       CALL \"PRIME-FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n\n       CALL \"PRIME-FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-N\n\n       CALL \"PRIME-FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"13","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"PRIME-FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"89","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 6 TO L-N\n\n       CALL \"PRIME-FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"233","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-N\n\n       CALL \"PRIME-FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1597","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-N\n\n       CALL \"PRIME-FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"28657","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 9 TO L-N\n\n       CALL \"PRIME-FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"514229","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-N\n\n       CALL \"PRIME-FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"433494437","type_":"Int"}}]}
{"task_id":"HumanEval/40","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIPLES-SUM-TO-ZERO.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n      * \n      * triples_sum_to_zero takes a list of integers as an input.\n      * it returns True if there are three distinct elements in the list that\n      * sum to zero, and False otherwise.\n      * \n      * >>> triples_sum_to_zero([1, 3, 5, 0])\n      * False\n      * >>> triples_sum_to_zero([1, 3, -2, 1])\n      * True\n      * >>> triples_sum_to_zero([1, 2, 3, 7])\n      * False\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"triples_sum_to_zero","canonical_solution":"    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            for k in range(j + 1, len(l)):\n                if l[i] + l[j] + l[k] == 0:\n                    return True\n    return False\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIPLES-SUM-TO-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIPLES-SUM-TO-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 3 TO L-L(2)\n       MOVE 5 TO L-L(3)\n       MOVE 0 TO L-L(4)\n\n       CALL \"TRIPLES-SUM-TO-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIPLES-SUM-TO-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIPLES-SUM-TO-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 3 TO L-L(2)\n       MOVE 5 TO L-L(3)\n       MOVE -1 TO L-L(4)\n\n       CALL \"TRIPLES-SUM-TO-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIPLES-SUM-TO-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIPLES-SUM-TO-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 3 TO L-L(2)\n       MOVE -2 TO L-L(3)\n       MOVE 1 TO L-L(4)\n\n       CALL \"TRIPLES-SUM-TO-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIPLES-SUM-TO-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIPLES-SUM-TO-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 2 TO L-L(2)\n       MOVE 3 TO L-L(3)\n       MOVE 7 TO L-L(4)\n\n       CALL \"TRIPLES-SUM-TO-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIPLES-SUM-TO-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIPLES-SUM-TO-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 2 TO L-L(2)\n       MOVE 5 TO L-L(3)\n       MOVE 7 TO L-L(4)\n\n       CALL \"TRIPLES-SUM-TO-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIPLES-SUM-TO-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIPLES-SUM-TO-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 3 TO L-L(2)\n       MOVE 5 TO L-L(3)\n       MOVE -100 TO L-L(4)\n\n       CALL \"TRIPLES-SUM-TO-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIPLES-SUM-TO-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIPLES-SUM-TO-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 100 TO L-L(1)\n       MOVE 3 TO L-L(2)\n       MOVE 5 TO L-L(3)\n       MOVE -100 TO L-L(4)\n\n       CALL \"TRIPLES-SUM-TO-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/41","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CAR-RACE-COLLISION.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * Imagine a road that's a perfectly straight infinitely long line.\n      * n cars are driving left to right;  simultaneously, a different set of n cars\n      * are driving right to left.   The two sets of cars start out being very far from\n      * each other.  All cars move in the same speed.  Two cars are said to collide\n      * when a car that's moving left to right hits a car that's moving right to left.\n      * However, the cars are infinitely sturdy and strong; as a result, they continue moving\n      * in their trajectory as if they did not collide.\n      * \n      * This function outputs the number of such collisions.\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"car_race_collision","canonical_solution":"    return n**2\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CAR-RACE-COLLISION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CAR-RACE-COLLISION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-N\n\n       CALL \"CAR-RACE-COLLISION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CAR-RACE-COLLISION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CAR-RACE-COLLISION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n\n       CALL \"CAR-RACE-COLLISION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"9","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CAR-RACE-COLLISION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CAR-RACE-COLLISION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-N\n\n       CALL \"CAR-RACE-COLLISION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"16","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CAR-RACE-COLLISION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CAR-RACE-COLLISION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-N\n\n       CALL \"CAR-RACE-COLLISION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"64","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CAR-RACE-COLLISION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CAR-RACE-COLLISION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-N\n\n       CALL \"CAR-RACE-COLLISION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"100","type_":"Int"}}]}
{"task_id":"HumanEval/42","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INCR-LIST.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * Return list with elements incremented by 1.\n      * >>> incr_list([1, 2, 3])\n      * [2, 3, 4]\n      * >>> incr_list([5, 3, 5])\n      * [6, 4, 6]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"incr_list","canonical_solution":"    return [(e + 1) for e in l]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INCR-LIST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INCR-LIST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 1 TO L-L(2)\n       MOVE 1 TO L-L(3)\n\n       CALL \"INCR-LIST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 2, 2]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INCR-LIST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INCR-LIST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-L(1)\n       MOVE 2 TO L-L(2)\n       MOVE 1 TO L-L(3)\n\n       CALL \"INCR-LIST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4, 3, 2]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INCR-LIST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INCR-LIST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-L(1)\n       MOVE 2 TO L-L(2)\n       MOVE 5 TO L-L(3)\n\n       CALL \"INCR-LIST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[6, 3, 6]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/43","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PAIRS-SUM-TO-ZERO.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n      * \n      * pairs_sum_to_zero takes a list of integers as an input.\n      * it returns True if there are two distinct elements in the list that\n      * sum to zero, and False otherwise.\n      * >>> pairs_sum_to_zero([1, 3, 5, 0])\n      * False\n      * >>> pairs_sum_to_zero([1, 3, -2, 1])\n      * False\n      * >>> pairs_sum_to_zero([1, 2, 3, 7])\n      * False\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"pairs_sum_to_zero","canonical_solution":"    for i, l1 in enumerate(l):\n        for j in range(i + 1, len(l)):\n            if l1 + l[j] == 0:\n                return True\n    return False\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PAIRS-SUM-TO-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PAIRS-SUM-TO-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 3 TO L-L(2)\n       MOVE 5 TO L-L(3)\n       MOVE 0 TO L-L(4)\n\n       CALL \"PAIRS-SUM-TO-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PAIRS-SUM-TO-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PAIRS-SUM-TO-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 3 TO L-L(2)\n       MOVE -2 TO L-L(3)\n       MOVE 1 TO L-L(4)\n\n       CALL \"PAIRS-SUM-TO-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PAIRS-SUM-TO-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PAIRS-SUM-TO-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 2 TO L-L(2)\n       MOVE 3 TO L-L(3)\n       MOVE 7 TO L-L(4)\n\n       CALL \"PAIRS-SUM-TO-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PAIRS-SUM-TO-ZERO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PAIRS-SUM-TO-ZERO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE -3 TO L-L(1)\n       MOVE 9 TO L-L(2)\n       MOVE -1 TO L-L(3)\n       MOVE 3 TO L-L(4)\n\n       CALL \"PAIRS-SUM-TO-ZERO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}}]}
{"task_id":"HumanEval/44","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHANGE-BASE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-BASE PIC S9(10).\n           05 RESULT PIC X(100).\n\n      * Change numerical base of input number x to base.\n      * return string representation after the conversion.\n      * base numbers are less than 10.\n      * >>> change_base(8, 3)\n      * '22'\n      * >>> change_base(8, 2)\n      * '1000'\n      * >>> change_base(7, 2)\n      * '111'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"change_base","canonical_solution":"    ret = \"\"\n    while x > 0:\n        ret = str(x % base) + ret\n        x //= base\n    return ret\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHANGE-BASE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHANGE-BASE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-BASE PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-X\n       MOVE 3 TO L-BASE\n\n       CALL \"CHANGE-BASE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"22\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHANGE-BASE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHANGE-BASE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-BASE PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 9 TO L-X\n       MOVE 3 TO L-BASE\n\n       CALL \"CHANGE-BASE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"100\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHANGE-BASE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHANGE-BASE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-BASE PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 234 TO L-X\n       MOVE 2 TO L-BASE\n\n       CALL \"CHANGE-BASE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"11101010\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHANGE-BASE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHANGE-BASE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-BASE PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 16 TO L-X\n       MOVE 2 TO L-BASE\n\n       CALL \"CHANGE-BASE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"10000\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHANGE-BASE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHANGE-BASE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-BASE PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-X\n       MOVE 2 TO L-BASE\n\n       CALL \"CHANGE-BASE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"1000\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHANGE-BASE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHANGE-BASE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-BASE PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-X\n       MOVE 2 TO L-BASE\n\n       CALL \"CHANGE-BASE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"111\"","type_":"String"}}]}
{"task_id":"HumanEval/45","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-H PIC S9(10).\n           05 RESULT COMP-2.\n\n      * Given length of a side and high return area for a triangle.\n      * >>> triangle_area(5, 3)\n      * 7.5\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"triangle_area","canonical_solution":"    return a * h / 2.0\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-H PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-A\n       MOVE 3 TO L-H\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"7.5","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-H PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-A\n       MOVE 2 TO L-H\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2.0","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-H PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-A\n       MOVE 8 TO L-H\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"40.0","type_":"Float"}}]}
{"task_id":"HumanEval/46","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIB4.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n      * fib4(0) -> 0\n      * fib4(1) -> 0\n      * fib4(2) -> 2\n      * fib4(3) -> 0\n      * fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n      * Please write a function to efficiently compute the n-th element of the fib4 number sequence.  Do not use recursion.\n      * >>> fib4(5)\n      * 4\n      * >>> fib4(6)\n      * 8\n      * >>> fib4(7)\n      * 14\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"fib4","canonical_solution":"    results = [0, 0, 2, 0]\n    if n < 4:\n        return results[n]\n\n    for _ in range(4, n + 1):\n        results.append(results[-1] + results[-2] + results[-3] + results[-4])\n        results.pop(0)\n\n    return results[-1]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIB4-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIB4.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"FIB4\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIB4-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIB4.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-N\n\n       CALL \"FIB4\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"28","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIB4-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIB4.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-N\n\n       CALL \"FIB4\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"104","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIB4-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIB4.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 12 TO L-N\n\n       CALL \"FIB4\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"386","type_":"Int"}}]}
{"task_id":"HumanEval/47","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MEDIAN.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT COMP-2.\n\n      * Return median of elements in the list l.\n      * >>> median([3, 1, 2, 4, 5])\n      * 3\n      * >>> median([-10, 4, 6, 1000, 10])\n      * 6\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"median","canonical_solution":"    l = sorted(l)\n    if len(l) % 2 == 1:\n        return l[len(l) // 2]\n    else:\n        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2.0\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MEDIAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MEDIAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-L(1)\n       MOVE 1 TO L-L(2)\n       MOVE 2 TO L-L(3)\n       MOVE 4 TO L-L(4)\n       MOVE 5 TO L-L(5)\n\n       CALL \"MEDIAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MEDIAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MEDIAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE -10 TO L-L(1)\n       MOVE 4 TO L-L(2)\n       MOVE 6 TO L-L(3)\n       MOVE 1000 TO L-L(4)\n       MOVE 10 TO L-L(5)\n\n       CALL \"MEDIAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"6","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MEDIAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MEDIAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-L(1)\n       MOVE 1 TO L-L(2)\n       MOVE 3 TO L-L(3)\n       MOVE 9 TO L-L(4)\n       MOVE 9 TO L-L(5)\n\n       CALL \"MEDIAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"8","type_":"Float"}}]}
{"task_id":"HumanEval/48","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PALINDROME.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC 9.\n\n      * \n      * Checks if given string is a palindrome\n      * >>> is_palindrome('')\n      * True\n      * >>> is_palindrome('aba')\n      * True\n      * >>> is_palindrome('aaaaa')\n      * True\n      * >>> is_palindrome('zbcd')\n      * False\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"is_palindrome","canonical_solution":"    for i in range(len(text)):\n        if text[i] != text[len(text) - 1 - i]:\n            return False\n    return True\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-TEXT\n\n       CALL \"IS-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'aba' TO L-TEXT\n\n       CALL \"IS-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'aaaaa' TO L-TEXT\n\n       CALL \"IS-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'zbcd' TO L-TEXT\n\n       CALL \"IS-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'xywyx' TO L-TEXT\n\n       CALL \"IS-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'xywyz' TO L-TEXT\n\n       CALL \"IS-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'xywzx' TO L-TEXT\n\n       CALL \"IS-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/49","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MODP.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-P PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Return 2^n modulo p (be aware of numerics).\n      * >>> modp(3, 5)\n      * 3\n      * >>> modp(1101, 101)\n      * 2\n      * >>> modp(0, 101)\n      * 1\n      * >>> modp(3, 11)\n      * 8\n      * >>> modp(100, 101)\n      * 1\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"modp","canonical_solution":"    ret = 1\n    for i in range(n):\n        ret = (2 * ret) % p\n    return ret\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MODP-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MODP.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-P PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n       MOVE 5 TO L-P\n\n       CALL \"MODP\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MODP-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MODP.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-P PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1101 TO L-N\n       MOVE 101 TO L-P\n\n       CALL \"MODP\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MODP-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MODP.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-P PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-N\n       MOVE 101 TO L-P\n\n       CALL \"MODP\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MODP-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MODP.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-P PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n       MOVE 11 TO L-P\n\n       CALL \"MODP\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"8","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MODP-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MODP.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-P PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 100 TO L-N\n       MOVE 101 TO L-P\n\n       CALL \"MODP\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MODP-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MODP.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-P PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 30 TO L-N\n       MOVE 5 TO L-P\n\n       CALL \"MODP\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MODP-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MODP.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-P PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 31 TO L-N\n       MOVE 5 TO L-P\n\n       CALL \"MODP\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}}]}
{"task_id":"HumanEval/51","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. REMOVE-VOWELS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n      * \n      * remove_vowels is a function that takes string and returns string without vowels.\n      * >>> remove_vowels('')\n      * ''\n      * >>> remove_vowels(\"abcdef\\nghijklm\")\n      * 'bcdf\\nghjklm'\n      * >>> remove_vowels('abcdef')\n      * 'bcdf'\n      * >>> remove_vowels('aaaaa')\n      * ''\n      * >>> remove_vowels('aaBAA')\n      * 'B'\n      * >>> remove_vowels('zbcd')\n      * 'zbcd'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"remove_vowels","canonical_solution":"    return \"\".join([s for s in text if s.lower() not in [\"a\", \"e\", \"i\", \"o\", \"u\"]])\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. REMOVE-VOWELS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"REMOVE-VOWELS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-TEXT\n\n       CALL \"REMOVE-VOWELS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"''","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. REMOVE-VOWELS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"REMOVE-VOWELS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"abcdef\\nghijklm\" TO L-TEXT\n\n       CALL \"REMOVE-VOWELS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'bcdf\\nghjklm'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. REMOVE-VOWELS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"REMOVE-VOWELS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'fedcba' TO L-TEXT\n\n       CALL \"REMOVE-VOWELS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'fdcb'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. REMOVE-VOWELS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"REMOVE-VOWELS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'eeeee' TO L-TEXT\n\n       CALL \"REMOVE-VOWELS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"''","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. REMOVE-VOWELS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"REMOVE-VOWELS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'acBAA' TO L-TEXT\n\n       CALL \"REMOVE-VOWELS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'cB'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. REMOVE-VOWELS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"REMOVE-VOWELS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'EcBOO' TO L-TEXT\n\n       CALL \"REMOVE-VOWELS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'cB'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. REMOVE-VOWELS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"REMOVE-VOWELS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'ybcd' TO L-TEXT\n\n       CALL \"REMOVE-VOWELS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'ybcd'","type_":"String"}}]}
{"task_id":"HumanEval/52","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BELOW-THRESHOLD.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-T PIC S9(10).\n           05 RESULT PIC 9.\n\n      * Return True if all numbers in the list l are below threshold t.\n      * >>> below_threshold([1, 2, 4, 10], 100)\n      * True\n      * >>> below_threshold([1, 20, 4, 10], 5)\n      * False\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"below_threshold","canonical_solution":"    for e in l:\n        if e >= t:\n            return False\n    return True\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BELOW-THRESHOLD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BELOW-THRESHOLD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-T PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 2 TO L-L(2)\n       MOVE 4 TO L-L(3)\n       MOVE 10 TO L-L(4)\n       MOVE 100 TO L-T\n\n       CALL \"BELOW-THRESHOLD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BELOW-THRESHOLD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BELOW-THRESHOLD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-T PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 20 TO L-L(2)\n       MOVE 4 TO L-L(3)\n       MOVE 10 TO L-L(4)\n       MOVE 21 TO L-T\n\n       CALL \"BELOW-THRESHOLD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BELOW-THRESHOLD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BELOW-THRESHOLD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-T PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 20 TO L-L(2)\n       MOVE 4 TO L-L(3)\n       MOVE 10 TO L-L(4)\n       MOVE 22 TO L-T\n\n       CALL \"BELOW-THRESHOLD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BELOW-THRESHOLD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BELOW-THRESHOLD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-T PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 8 TO L-L(2)\n       MOVE 4 TO L-L(3)\n       MOVE 10 TO L-L(4)\n       MOVE 9 TO L-T\n\n       CALL \"BELOW-THRESHOLD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/53","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Add two numbers x and y\n      * >>> add(2, 3)\n      * 5\n      * >>> add(5, 7)\n      * 12\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"add","canonical_solution":"    return x + y\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ADD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-X\n       MOVE 1 TO L-Y\n\n       CALL \"ADD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ADD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-X\n       MOVE 0 TO L-Y\n\n       CALL \"ADD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ADD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-X\n       MOVE 3 TO L-Y\n\n       CALL \"ADD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ADD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-X\n       MOVE 7 TO L-Y\n\n       CALL \"ADD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"12","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ADD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-X\n       MOVE 5 TO L-Y\n\n       CALL \"ADD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"12","type_":"Int"}}]}
{"task_id":"HumanEval/54","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SAME-CHARS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S0 PIC X(100).\n           05 L-S1 PIC X(100).\n           05 RESULT PIC 9.\n\n      * \n      * Check if two words have the same characters.\n      * >>> same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc')\n      * True\n      * >>> same_chars('abcd', 'dddddddabc')\n      * True\n      * >>> same_chars('dddddddabc', 'abcd')\n      * True\n      * >>> same_chars('eabcd', 'dddddddabc')\n      * False\n      * >>> same_chars('abcd', 'dddddddabce')\n      * False\n      * >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n      * False\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"same_chars","canonical_solution":"    return set(s0) == set(s1)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SAME-CHARS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SAME-CHARS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S0 PIC X(100).\n           05 L-S1 PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'eabcdzzzz' TO L-S0\n       MOVE 'dddzzzzzzzddeddabc' TO L-S1\n\n       CALL \"SAME-CHARS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SAME-CHARS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SAME-CHARS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S0 PIC X(100).\n           05 L-S1 PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'abcd' TO L-S0\n       MOVE 'dddddddabc' TO L-S1\n\n       CALL \"SAME-CHARS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SAME-CHARS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SAME-CHARS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S0 PIC X(100).\n           05 L-S1 PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'dddddddabc' TO L-S0\n       MOVE 'abcd' TO L-S1\n\n       CALL \"SAME-CHARS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SAME-CHARS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SAME-CHARS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S0 PIC X(100).\n           05 L-S1 PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'eabcd' TO L-S0\n       MOVE 'dddddddabc' TO L-S1\n\n       CALL \"SAME-CHARS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SAME-CHARS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SAME-CHARS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S0 PIC X(100).\n           05 L-S1 PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'abcd' TO L-S0\n       MOVE 'dddddddabcf' TO L-S1\n\n       CALL \"SAME-CHARS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SAME-CHARS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SAME-CHARS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S0 PIC X(100).\n           05 L-S1 PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'eabcdzzzz' TO L-S0\n       MOVE 'dddzzzzzzzddddabc' TO L-S1\n\n       CALL \"SAME-CHARS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SAME-CHARS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SAME-CHARS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S0 PIC X(100).\n           05 L-S1 PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'aabb' TO L-S0\n       MOVE 'aaccc' TO L-S1\n\n       CALL \"SAME-CHARS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/55","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIB.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Return n-th Fibonacci number.\n      * >>> fib(10)\n      * 55\n      * >>> fib(1)\n      * 1\n      * >>> fib(8)\n      * 21\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"fib","canonical_solution":"    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-N\n\n       CALL \"FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"55","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-N\n\n       CALL \"FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"21","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 11 TO L-N\n\n       CALL \"FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"89","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 12 TO L-N\n\n       CALL \"FIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"144","type_":"Int"}}]}
{"task_id":"HumanEval/56","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n      * brackets is a string of \"<\" and \">\".\n      * return True if every opening bracket has a corresponding closing bracket.\n      * \n      * >>> correct_bracketing(\"<\")\n      * False\n      * >>> correct_bracketing(\"<>\")\n      * True\n      * >>> correct_bracketing(\"<<><>>\")\n      * True\n      * >>> correct_bracketing(\"><<>\")\n      * False\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"correct_bracketing","canonical_solution":"    depth = 0\n    for b in brackets:\n        if b == \"<\":\n            depth += 1\n        else:\n            depth -= 1\n        if depth < 0:\n            return False\n    return depth == 0\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"<>\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"<<><>>\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"<><><<><>><>\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"<><><<<><><>><>><<><><<>>>\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"<<<><>>>>\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"><<>\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"<\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"<<<<\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \">\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"<<>\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"<><><<><>><>><<>\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CORRECT-BRACKETING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CORRECT-BRACKETING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-BRACKETS PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"<><><<><>><>>><>\" TO L-BRACKETS\n\n       CALL \"CORRECT-BRACKETING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/57","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MONOTONIC.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n      * Return True is list elements are monotonically increasing or decreasing.\n      * >>> monotonic([1, 2, 4, 20])\n      * True\n      * >>> monotonic([1, 20, 4, 10])\n      * False\n      * >>> monotonic([4, 1, 0, -10])\n      * True\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"monotonic","canonical_solution":"    if l == sorted(l) or l == sorted(l, reverse=True):\n        return True\n    return False\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MONOTONIC-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MONOTONIC.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 2 TO L-L(2)\n       MOVE 4 TO L-L(3)\n       MOVE 10 TO L-L(4)\n\n       CALL \"MONOTONIC\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MONOTONIC-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MONOTONIC.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 2 TO L-L(2)\n       MOVE 4 TO L-L(3)\n       MOVE 20 TO L-L(4)\n\n       CALL \"MONOTONIC\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MONOTONIC-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MONOTONIC.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L(1)\n       MOVE 20 TO L-L(2)\n       MOVE 4 TO L-L(3)\n       MOVE 10 TO L-L(4)\n\n       CALL \"MONOTONIC\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MONOTONIC-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MONOTONIC.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-L(1)\n       MOVE 1 TO L-L(2)\n       MOVE 0 TO L-L(3)\n       MOVE -10 TO L-L(4)\n\n       CALL \"MONOTONIC\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MONOTONIC-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MONOTONIC.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-L(1)\n       MOVE 1 TO L-L(2)\n       MOVE 1 TO L-L(3)\n       MOVE 0 TO L-L(4)\n\n       CALL \"MONOTONIC\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MONOTONIC-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MONOTONIC.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 9 TO L-L(1)\n       MOVE 9 TO L-L(2)\n       MOVE 9 TO L-L(3)\n       MOVE 9 TO L-L(4)\n\n       CALL \"MONOTONIC\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}}]}
{"task_id":"HumanEval/58","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COMMON.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-L1 OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-L2 OCCURS 4 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NK PIC S9(10).\n\n      * Return sorted unique common elements for two lists.\n      * >>> common([1, 4, 3, 34], [5, 7])\n      * []\n      * >>> common([5, 3, 2, 8], [3, 2])\n      * [2, 3]\n      * \n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"common","canonical_solution":"    ret = set()\n    for e1 in l1:\n        for e2 in l2:\n            if e1 == e2:\n                ret.add(e1)\n    return sorted(list(ret))\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COMMON-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COMMON.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L1 OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-L2 OCCURS 4 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NK PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-L1(1)\n       MOVE 4 TO L-L1(2)\n       MOVE 3 TO L-L1(3)\n       MOVE 34 TO L-L1(4)\n       MOVE 36 TO L-L2(1)\n       MOVE 35 TO L-L2(2)\n\n       CALL \"COMMON\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NK FROM 1 BY 1 UNTIL NK > 100\n           MOVE RESULT (NK) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COMMON-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COMMON.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L1 OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-L2 OCCURS 4 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NK PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-L1(1)\n       MOVE 3 TO L-L1(2)\n       MOVE 2 TO L-L1(3)\n       MOVE 8 TO L-L1(4)\n       MOVE 3 TO L-L2(1)\n       MOVE 2 TO L-L2(2)\n\n       CALL \"COMMON\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NK FROM 1 BY 1 UNTIL NK > 100\n           MOVE RESULT (NK) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 3]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COMMON-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COMMON.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L1 OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-L2 OCCURS 4 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NK PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-L1(1)\n       MOVE 3 TO L-L1(2)\n       MOVE 2 TO L-L1(3)\n       MOVE 8 TO L-L1(4)\n       MOVE 2 TO L-L2(1)\n       MOVE 4 TO L-L2(2)\n\n       CALL \"COMMON\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NK FROM 1 BY 1 UNTIL NK > 100\n           MOVE RESULT (NK) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 4]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COMMON-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COMMON.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-L1 OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-L2 OCCURS 4 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NK PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-L1(1)\n       MOVE 3 TO L-L1(2)\n       MOVE 2 TO L-L1(3)\n       MOVE 8 TO L-L1(4)\n       MOVE 3 TO L-L2(1)\n       MOVE 9 TO L-L2(2)\n\n       CALL \"COMMON\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NK FROM 1 BY 1 UNTIL NK > 100\n           MOVE RESULT (NK) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[3]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/59","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-PRIME-FACTOR.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Return the largest prime factor of n. Assume n > 1 and is not a prime.\n      * >>> largest_prime_factor(13195)\n      * 29\n      * >>> largest_prime_factor(2048)\n      * 2\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"largest_prime_factor","canonical_solution":"    def is_prime(k):\n        if k < 2:\n            return False\n        for i in range(2, k - 1):\n            if k % i == 0:\n                return False\n        return True\n    largest = 1\n    for j in range(2, n + 1):\n        if n % j == 0 and is_prime(j):\n            largest = max(largest, j)\n    return largest\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-PRIME-FACTOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LARGEST-PRIME-FACTOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 15 TO L-N\n\n       CALL \"LARGEST-PRIME-FACTOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-PRIME-FACTOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LARGEST-PRIME-FACTOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 27 TO L-N\n\n       CALL \"LARGEST-PRIME-FACTOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-PRIME-FACTOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LARGEST-PRIME-FACTOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 63 TO L-N\n\n       CALL \"LARGEST-PRIME-FACTOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"7","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-PRIME-FACTOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LARGEST-PRIME-FACTOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 330 TO L-N\n\n       CALL \"LARGEST-PRIME-FACTOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"11","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. LARGEST-PRIME-FACTOR-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"LARGEST-PRIME-FACTOR.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 13195 TO L-N\n\n       CALL \"LARGEST-PRIME-FACTOR\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"29","type_":"Int"}}]}
{"task_id":"HumanEval/60","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-TO-N.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * sum_to_n is a function that sums numbers from 1 to n.\n      * >>> sum_to_n(30)\n      * 465\n      * >>> sum_to_n(100)\n      * 5050\n      * >>> sum_to_n(5)\n      * 15\n      * >>> sum_to_n(10)\n      * 55\n      * >>> sum_to_n(1)\n      * 1\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"sum_to_n","canonical_solution":"    return sum(range(n + 1))\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-TO-N-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-TO-N.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"SUM-TO-N\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-TO-N-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-TO-N.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 6 TO L-N\n\n       CALL \"SUM-TO-N\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"21","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-TO-N-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-TO-N.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 11 TO L-N\n\n       CALL \"SUM-TO-N\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"66","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-TO-N-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-TO-N.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 30 TO L-N\n\n       CALL \"SUM-TO-N\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"465","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-TO-N-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-TO-N.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 100 TO L-N\n\n       CALL \"SUM-TO-N\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5050","type_":"Int"}}]}
{"task_id":"HumanEval/62","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DERIVATIVE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-XS OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * xs represent coefficients of a polynomial.\n      * xs[0] + xs[1] * x + xs[2] * x^2 + ....\n      * Return derivative of this polynomial in the same form.\n      * >>> derivative([3, 1, 2])\n      * [1, 4]\n      * >>> derivative([1, 2, 3])\n      * [2, 6]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"derivative","canonical_solution":"    return [(i * x) for i, x in enumerate(xs)][1:]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DERIVATIVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DERIVATIVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-XS OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-XS(1)\n       MOVE 1 TO L-XS(2)\n       MOVE 2 TO L-XS(3)\n\n       CALL \"DERIVATIVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 4]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DERIVATIVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DERIVATIVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-XS OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-XS(1)\n       MOVE 2 TO L-XS(2)\n       MOVE 3 TO L-XS(3)\n\n       CALL \"DERIVATIVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 6]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DERIVATIVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DERIVATIVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-XS OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-XS(1)\n       MOVE 2 TO L-XS(2)\n       MOVE 1 TO L-XS(3)\n\n       CALL \"DERIVATIVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 2]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DERIVATIVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DERIVATIVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-XS OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-XS(1)\n       MOVE 1 TO L-XS(2)\n       MOVE 1 TO L-XS(3)\n\n       CALL \"DERIVATIVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 2]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/63","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIBFIB.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n      * fibfib(0) == 0\n      * fibfib(1) == 0\n      * fibfib(2) == 1\n      * fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n      * Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n      * >>> fibfib(1)\n      * 0\n      * >>> fibfib(5)\n      * 4\n      * >>> fibfib(8)\n      * 24\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"fibfib","canonical_solution":"    if n == 0:\n        return 0\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIBFIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIBFIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-N\n\n       CALL \"FIBFIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIBFIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIBFIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"FIBFIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIBFIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIBFIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"FIBFIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIBFIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIBFIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-N\n\n       CALL \"FIBFIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"24","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIBFIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIBFIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-N\n\n       CALL \"FIBFIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"81","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIBFIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIBFIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 12 TO L-N\n\n       CALL \"FIBFIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"274","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIBFIB-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIBFIB.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 14 TO L-N\n\n       CALL \"FIBFIB\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"927","type_":"Int"}}]}
{"task_id":"HumanEval/64","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VOWELS-COUNT.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n      * Write a function vowels_count which takes a string representing\n      * a word as input and returns the number of vowels in the string.\n      * Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n      * vowel, but only when it is at the end of the given word.\n      * \n      * Example:\n      * >>> vowels_count(\"abcde\")\n      * 2\n      * >>> vowels_count(\"ACEDY\")\n      * 3\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"vowels_count","canonical_solution":"    vowels = \"aeiouAEIOU\"\n    n_vowels = sum(c in vowels for c in s)\n    if s[-1] == 'y' or s[-1] == 'Y':\n        n_vowels += 1\n    return n_vowels\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VOWELS-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VOWELS-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"abcde\" TO L-S\n\n       CALL \"VOWELS-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VOWELS-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VOWELS-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Alone\" TO L-S\n\n       CALL \"VOWELS-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VOWELS-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VOWELS-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"key\" TO L-S\n\n       CALL \"VOWELS-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VOWELS-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VOWELS-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"bye\" TO L-S\n\n       CALL \"VOWELS-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VOWELS-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VOWELS-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"keY\" TO L-S\n\n       CALL \"VOWELS-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VOWELS-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VOWELS-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"bYe\" TO L-S\n\n       CALL \"VOWELS-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VOWELS-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VOWELS-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"ACEDY\" TO L-S\n\n       CALL \"VOWELS-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}}]}
{"task_id":"HumanEval/65","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CIRCULAR-SHIFT.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-SHIFT PIC S9(10).\n           05 RESULT PIC X(100).\n\n      * Circular shift the digits of the integer x, shift the digits right by shift\n      * and return the result as a string.\n      * If shift > number of digits, return digits reversed.\n      * >>> circular_shift(12, 1)\n      * \"21\"\n      * >>> circular_shift(12, 2)\n      * \"12\"\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"circular_shift","canonical_solution":"    s = str(x)\n    if shift > len(s):\n        return s[::-1]\n    else:\n        return s[len(s) - shift:] + s[:len(s) - shift]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CIRCULAR-SHIFT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CIRCULAR-SHIFT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-SHIFT PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 100 TO L-X\n       MOVE 2 TO L-SHIFT\n\n       CALL \"CIRCULAR-SHIFT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"001\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CIRCULAR-SHIFT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CIRCULAR-SHIFT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-SHIFT PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 12 TO L-X\n       MOVE 2 TO L-SHIFT\n\n       CALL \"CIRCULAR-SHIFT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"12\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CIRCULAR-SHIFT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CIRCULAR-SHIFT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-SHIFT PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 97 TO L-X\n       MOVE 8 TO L-SHIFT\n\n       CALL \"CIRCULAR-SHIFT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"79\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CIRCULAR-SHIFT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CIRCULAR-SHIFT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-SHIFT PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 12 TO L-X\n       MOVE 1 TO L-SHIFT\n\n       CALL \"CIRCULAR-SHIFT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"21\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CIRCULAR-SHIFT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CIRCULAR-SHIFT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-SHIFT PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 11 TO L-X\n       MOVE 101 TO L-SHIFT\n\n       CALL \"CIRCULAR-SHIFT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"11\"","type_":"String"}}]}
{"task_id":"HumanEval/66","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITSUM.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n      * Task\n      * Write a function that takes a string as input and returns the sum of the upper characters only'\n      * ASCII codes.\n      * \n      * Examples:\n      * digitSum(\"\") => 0\n      * digitSum(\"abAB\") => 131\n      * digitSum(\"abcCd\") => 67\n      * digitSum(\"helloE\") => 69\n      * digitSum(\"woArBld\") => 131\n      * digitSum(\"aAaaaXa\") => 153\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"digitSum","canonical_solution":"    if s == \"\": return 0\n    return sum(ord(char) if char.isupper() else 0 for char in s)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"\" TO L-S\n\n       CALL \"DIGITSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"abAB\" TO L-S\n\n       CALL \"DIGITSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"131","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"abcCd\" TO L-S\n\n       CALL \"DIGITSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"67","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"helloE\" TO L-S\n\n       CALL \"DIGITSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"69","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"woArBld\" TO L-S\n\n       CALL \"DIGITSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"131","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"aAaaaXa\" TO L-S\n\n       CALL \"DIGITSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"153","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \" How are yOu?\" TO L-S\n\n       CALL \"DIGITSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"151","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"You arE Very Smart\" TO L-S\n\n       CALL \"DIGITSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"327","type_":"Int"}}]}
{"task_id":"HumanEval/67","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FRUIT-DISTRIBUTION.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * In this task, you will be given a string that represents a number of apples and oranges\n      * that are distributed in a basket of fruit this basket contains\n      * apples, oranges, and mango fruits. Given the string that represents the total number of\n      * the oranges and apples and an integer that represent the total number of the fruits\n      * in the basket return the number of the mango fruits in the basket.\n      * for examble:\n      * fruit_distribution(\"5 apples and 6 oranges\", 19) ->19 - 5 - 6 = 8\n      * fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 - 1 = 2\n      * fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 - 3 = 95\n      * fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100 - 1 = 19\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"fruit_distribution","canonical_solution":"    lis = list()\n    for i in s.split(' '):\n        if i.isdigit():\n            lis.append(int(i))\n    return n - sum(lis)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FRUIT-DISTRIBUTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FRUIT-DISTRIBUTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"5 apples and 6 oranges\" TO L-S\n       MOVE 19 TO L-N\n\n       CALL \"FRUIT-DISTRIBUTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"8","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FRUIT-DISTRIBUTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FRUIT-DISTRIBUTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"5 apples and 6 oranges\" TO L-S\n       MOVE 21 TO L-N\n\n       CALL \"FRUIT-DISTRIBUTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"10","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FRUIT-DISTRIBUTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FRUIT-DISTRIBUTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"0 apples and 1 oranges\" TO L-S\n       MOVE 3 TO L-N\n\n       CALL \"FRUIT-DISTRIBUTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FRUIT-DISTRIBUTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FRUIT-DISTRIBUTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"1 apples and 0 oranges\" TO L-S\n       MOVE 3 TO L-N\n\n       CALL \"FRUIT-DISTRIBUTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FRUIT-DISTRIBUTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FRUIT-DISTRIBUTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"2 apples and 3 oranges\" TO L-S\n       MOVE 100 TO L-N\n\n       CALL \"FRUIT-DISTRIBUTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"95","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FRUIT-DISTRIBUTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FRUIT-DISTRIBUTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"2 apples and 3 oranges\" TO L-S\n       MOVE 5 TO L-N\n\n       CALL \"FRUIT-DISTRIBUTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FRUIT-DISTRIBUTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FRUIT-DISTRIBUTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"1 apples and 100 oranges\" TO L-S\n       MOVE 120 TO L-N\n\n       CALL \"FRUIT-DISTRIBUTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"19","type_":"Int"}}]}
{"task_id":"HumanEval/68","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PLUCK.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * \n      * \"Given an array representing a branch of a tree that has non-negative integer nodes\n      * your task is to pluck one of the nodes and return it.\n      * The plucked node should be the node with the smallest even value.\n      * If multiple nodes with the same smallest even value are found return the node that has smallest index.\n      * \n      * The plucked node should be returned in a list, [ smalest_value, its index ],\n      * If there are no even values or the given array is empty, return [].\n      * \n      * Example 1:\n      * Input: [4,2,3]\n      * Output: [2, 1]\n      * Explanation: 2 has the smallest even value, and 2 has the smallest index.\n      * \n      * Example 2:\n      * Input: [1,2,3]\n      * Output: [2, 1]\n      * Explanation: 2 has the smallest even value, and 2 has the smallest index.\n      * \n      * Example 3:\n      * Input: []\n      * Output: []\n      * \n      * Example 4:\n      * Input: [5, 0, 3, 0, 4, 2]\n      * Output: [0, 1]\n      * Explanation: 0 is the smallest value, but  there are two zeros,\n      * so we will choose the first zero, which has the smallest index.\n      * \n      * Constraints:\n      * * 1 <= nodes.length <= 10000\n      * * 0 <= node.value\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"pluck","canonical_solution":"    if(len(arr) == 0): return []\n    evens = list(filter(lambda x: x%2 == 0, arr))\n    if(evens == []): return []\n    return [min(evens), arr.index(min(evens))]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PLUCK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PLUCK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-ARR(1)\n       MOVE 2 TO L-ARR(2)\n       MOVE 3 TO L-ARR(3)\n\n       CALL \"PLUCK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PLUCK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PLUCK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE 2 TO L-ARR(2)\n       MOVE 3 TO L-ARR(3)\n\n       CALL \"PLUCK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PLUCK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PLUCK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-ARR(1)\n       MOVE 0 TO L-ARR(2)\n       MOVE 3 TO L-ARR(3)\n       MOVE 0 TO L-ARR(4)\n       MOVE 4 TO L-ARR(5)\n       MOVE 2 TO L-ARR(6)\n\n       CALL \"PLUCK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PLUCK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PLUCK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE 2 TO L-ARR(2)\n       MOVE 3 TO L-ARR(3)\n       MOVE 0 TO L-ARR(4)\n       MOVE 5 TO L-ARR(5)\n       MOVE 3 TO L-ARR(6)\n\n       CALL \"PLUCK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0, 3]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PLUCK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PLUCK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-ARR(1)\n       MOVE 4 TO L-ARR(2)\n       MOVE 8 TO L-ARR(3)\n       MOVE 4  TO L-ARR(4)\n       MOVE 8 TO L-ARR(5)\n\n       CALL \"PLUCK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PLUCK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PLUCK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-ARR(1)\n       MOVE 6 TO L-ARR(2)\n       MOVE 7 TO L-ARR(3)\n       MOVE 1 TO L-ARR(4)\n\n       CALL \"PLUCK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[6, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PLUCK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PLUCK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-ARR(1)\n       MOVE 9 TO L-ARR(2)\n       MOVE 7 TO L-ARR(3)\n       MOVE 1 TO L-ARR(4)\n\n       CALL \"PLUCK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/69","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SEARCH.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * '''\n      * You are given a non-empty list of positive integers. Return the greatest integer that is greater than\n      * zero, and has a frequency greater than or equal to the value of the integer itself.\n      * The frequency of an integer is the number of times it appears in the list.\n      * If no such a value exist, return -1.\n      * Examples:\n      * search([4, 1, 2, 2, 1]) == 2\n      * search([5, 5, 4, 4, 4]) == -1\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"search","canonical_solution":"    frq = [0] * (max(lst) + 1)\n    for i in lst:\n        frq[i] += 1;\n\n    ans = -1\n    for i in range(1, len(frq)):\n        if frq[i] >= i:\n            ans = i\n    \n    return ans\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SEARCH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SEARCH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-LST(1)\n       MOVE 5 TO L-LST(2)\n       MOVE 5 TO L-LST(3)\n       MOVE 5 TO L-LST(4)\n       MOVE 1 TO L-LST(5)\n\n       CALL \"SEARCH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SEARCH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SEARCH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-LST(1)\n       MOVE 1 TO L-LST(2)\n       MOVE 4 TO L-LST(3)\n       MOVE 4 TO L-LST(4)\n       MOVE 4 TO L-LST(5)\n\n       CALL \"SEARCH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SEARCH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SEARCH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-LST(1)\n       MOVE 8 TO L-LST(2)\n       MOVE 8 TO L-LST(3)\n       MOVE 8 TO L-LST(4)\n       MOVE 8 TO L-LST(5)\n\n       CALL \"SEARCH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SEARCH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SEARCH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-LST(1)\n       MOVE 3 TO L-LST(2)\n       MOVE 3 TO L-LST(3)\n       MOVE 2 TO L-LST(4)\n       MOVE 2 TO L-LST(5)\n\n       CALL \"SEARCH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SEARCH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SEARCH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-LST(1)\n       MOVE 10 TO L-LST(2)\n       MOVE 10 TO L-LST(3)\n       MOVE 9 TO L-LST(4)\n       MOVE 2 TO L-LST(5)\n\n       CALL \"SEARCH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"Int"}}]}
{"task_id":"HumanEval/70","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRANGE-SORT-LIST.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * '''\n      * Given list of integers, return list in strange order.\n      * Strange sorting, is when you start with the minimum value,\n      * then maximum of the remaining integers, then minimum and so on.\n      * \n      * Examples:\n      * strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n      * strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"strange_sort_list","canonical_solution":"    res, switch = [], True\n    while lst:\n        res.append(min(lst) if switch else max(lst))\n        lst.remove(res[-1])\n        switch = not switch\n    return res\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRANGE-SORT-LIST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRANGE-SORT-LIST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST(1)\n       MOVE 2 TO L-LST(2)\n       MOVE 3 TO L-LST(3)\n       MOVE 4 TO L-LST(4)\n\n       CALL \"STRANGE-SORT-LIST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 4, 2, 3]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRANGE-SORT-LIST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRANGE-SORT-LIST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-LST(1)\n       MOVE 6 TO L-LST(2)\n       MOVE 8 TO L-LST(3)\n       MOVE 9 TO L-LST(4)\n\n       CALL \"STRANGE-SORT-LIST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[5, 9, 6, 8]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRANGE-SORT-LIST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRANGE-SORT-LIST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST(1)\n       MOVE 2 TO L-LST(2)\n       MOVE 4 TO L-LST(3)\n       MOVE 5 TO L-LST(4)\n\n       CALL \"STRANGE-SORT-LIST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 5, 2, 4]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRANGE-SORT-LIST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRANGE-SORT-LIST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-LST(1)\n       MOVE 8 TO L-LST(2)\n       MOVE 9 TO L-LST(3)\n       MOVE 1 TO L-LST(4)\n\n       CALL \"STRANGE-SORT-LIST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 9, 5, 8]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRANGE-SORT-LIST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRANGE-SORT-LIST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-LST(1)\n       MOVE 5 TO L-LST(2)\n       MOVE 5 TO L-LST(3)\n       MOVE 5 TO L-LST(4)\n\n       CALL \"STRANGE-SORT-LIST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[5, 5, 5, 5]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/71","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT COMP-2.\n\n      * '''\n      * Given the lengths of the three sides of a triangle. Return the area of\n      * the triangle rounded to 2 decimal points if the three sides form a valid triangle.\n      * Otherwise return -1\n      * Three sides make a valid triangle when the sum of any two sides is greater\n      * than the third side.\n      * Example:\n      * triangle_area(3, 4, 5) == 6.00\n      * triangle_area(1, 2, 10) == -1\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"triangle_area","canonical_solution":"    if a + b <= c or a + c <= b or b + c <= a:\n        return -1 \n    s = (a + b + c)/2    \n    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    area = round(area, 2)\n    return area\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-A\n       MOVE 4 TO L-B\n       MOVE 5 TO L-C\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"6.00","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-A\n       MOVE 2 TO L-B\n       MOVE 10 TO L-C\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-A\n       MOVE 8 TO L-B\n       MOVE 5 TO L-C\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"8.18","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-A\n       MOVE 2 TO L-B\n       MOVE 2 TO L-C\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1.73","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-A\n       MOVE 2 TO L-B\n       MOVE 3 TO L-C\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-A\n       MOVE 5 TO L-B\n       MOVE 7 TO L-C\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"16.25","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-A\n       MOVE 6 TO L-B\n       MOVE 3 TO L-C\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-A\n       MOVE 1 TO L-B\n       MOVE 1 TO L-C\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0.43","type_":"Float"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRIANGLE-AREA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRIANGLE-AREA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(15).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n       01 PARTS-REPR.\n           05 DECIMAL-PART PIC X(9).\n           05 FRACTIONAL-PART PIC X(5).\n       01 FLOAT-REPR REDEFINES PARTS-REPR PIC S9(9)V9(5) SIGN LEADING.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT COMP-2.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-A\n       MOVE 2 TO L-B\n       MOVE 10 TO L-C\n\n       CALL \"TRIANGLE-AREA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO FLOAT-REPR\n       STRING DECIMAL-PART \".\" FRACTIONAL-PART INTO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"Float"}}]}
{"task_id":"HumanEval/72","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WILL-IT-FLY.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-Q OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-W PIC S9(10).\n           05 RESULT PIC 9.\n\n      * '''\n      * Write a function that returns True if the object q will fly, and False otherwise.\n      * The object q will fly if it's balanced (it is a palindromic list) and the sum of its elements is less than or equal the maximum possible weight w.\n      * \n      * Example:\n      * will_it_fly([1, 2], 5) ➞ False\n      * # 1+2 is less than the maximum possible weight, but it's unbalanced.\n      * \n      * will_it_fly([3, 2, 3], 1) ➞ False\n      * # it's balanced, but 3+2+3 is more than the maximum possible weight.\n      * \n      * will_it_fly([3, 2, 3], 9) ➞ True\n      * # 3+2+3 is less than the maximum possible weight, and it's balanced.\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"will_it_fly","canonical_solution":"    if sum(q) > w:\n        return False\n\n    i, j = 0, len(q)-1\n    while i<j:\n        if q[i] != q[j]:\n            return False\n        i+=1\n        j-=1\n    return True\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WILL-IT-FLY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WILL-IT-FLY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-Q OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-W PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-Q(1)\n       MOVE 2 TO L-Q(2)\n       MOVE 3 TO L-Q(3)\n       MOVE 9 TO L-W\n\n       CALL \"WILL-IT-FLY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WILL-IT-FLY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WILL-IT-FLY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-Q OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-W PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-Q(1)\n       MOVE 2 TO L-Q(2)\n       MOVE 3 TO L-Q(3)\n       MOVE 1 TO L-W\n\n       CALL \"WILL-IT-FLY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WILL-IT-FLY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WILL-IT-FLY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-Q OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-W PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-Q(1)\n       MOVE 2 TO L-Q(2)\n       MOVE 3 TO L-Q(3)\n       MOVE 6 TO L-W\n\n       CALL \"WILL-IT-FLY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/73","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SMALLEST-CHANGE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 7 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * Given an array arr of integers, find the minimum number of elements that\n      * need to be changed to make the array palindromic. A palindromic array is an array that\n      * is read the same backwards and forwards. In one change, you can change one element to any other element.\n      * \n      * For example:\n      * smallest_change([1, 2, 3, 4, 3, 2, 2]) == 1\n      * smallest_change([1, 2, 3, 4, 3, 2, 1]) == 0\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"smallest_change","canonical_solution":"    ans = 0\n    for i in range(len(arr) // 2):\n        if arr[i] != arr[len(arr) - i - 1]:\n            ans += 1\n    return ans\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SMALLEST-CHANGE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SMALLEST-CHANGE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 7 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE 2 TO L-ARR(2)\n       MOVE 2 TO L-ARR(3)\n       MOVE 4 TO L-ARR(4)\n       MOVE 3 TO L-ARR(5)\n       MOVE 2 TO L-ARR(6)\n       MOVE 2 TO L-ARR(7)\n\n       CALL \"SMALLEST-CHANGE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SMALLEST-CHANGE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SMALLEST-CHANGE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 7 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE 2 TO L-ARR(2)\n       MOVE 3 TO L-ARR(3)\n       MOVE 3 TO L-ARR(4)\n       MOVE 3 TO L-ARR(5)\n       MOVE 2 TO L-ARR(6)\n       MOVE 1 TO L-ARR(7)\n\n       CALL \"SMALLEST-CHANGE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}}]}
{"task_id":"HumanEval/74","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TOTAL-MATCH.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST1 OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 L-LST2 OCCURS 2 TIMES INDEXED BY NJ PIC X(2).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NK PIC X(100).\n\n      * '''\n      * Write a function that accepts two lists of strings and returns the list that has\n      * total number of chars in the all strings of the list less than the other list.\n      * \n      * if the two lists have the same number of chars, return the first list.\n      * \n      * Examples\n      * total_match(['hi', 'admin'], ['hI', 'Hi', 'hi', 'hi']) ➞ ['hI', 'Hi', 'hi', 'hi']\n      * total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) ➞ ['hi', 'admin']\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"total_match","canonical_solution":"    l1 = 0\n    for st in lst1:\n        l1 += len(st)\n    \n    l2 = 0\n    for st in lst2:\n        l2 += len(st)\n    \n    if l1 <= l2:\n        return lst1\n    else:\n        return lst2\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TOTAL-MATCH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TOTAL-MATCH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST1 OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 L-LST2 OCCURS 2 TIMES INDEXED BY NJ PIC X(2).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NK PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'hi' TO L-LST1(1)\n       MOVE 'admin' TO L-LST1(2)\n       MOVE 'hi' TO L-LST2(1)\n       MOVE 'hi' TO L-LST2(2)\n       MOVE 'admin' TO L-LST2(3)\n       MOVE 'project' TO L-LST2(4)\n\n       CALL \"TOTAL-MATCH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NK FROM 1 BY 1 UNTIL NK > 100\n           MOVE RESULT (NK) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['hi', 'admin']","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TOTAL-MATCH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TOTAL-MATCH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST1 OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 L-LST2 OCCURS 2 TIMES INDEXED BY NJ PIC X(2).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NK PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '4' TO L-LST1(1)\n       MOVE '5' TO L-LST1(2)\n       MOVE '1' TO L-LST2(1)\n       MOVE '2' TO L-LST2(2)\n       MOVE '3' TO L-LST2(3)\n       MOVE '4' TO L-LST2(4)\n\n       CALL \"TOTAL-MATCH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NK FROM 1 BY 1 UNTIL NK > 100\n           MOVE RESULT (NK) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['4', '5']","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/75","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-MULTIPLY-PRIME.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n      * Write a function that returns true if the given number is the multiplication of 3 prime numbers\n      * and false otherwise.\n      * Knowing that (a) is less then 100.\n      * Example:\n      * is_multiply_prime(30) == True\n      * 30 = 2 * 3 * 5\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"is_multiply_prime","canonical_solution":"    def is_prime(n):\n        for j in range(2,n):\n            if n%j == 0:\n                return False\n        return True\n\n    for i in range(2,101):\n        if not is_prime(i): continue\n        for j in range(2,101):\n            if not is_prime(j): continue\n            for k in range(2,101):\n                if not is_prime(k): continue\n                if i*j*k == a: return True\n    return False\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-MULTIPLY-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-MULTIPLY-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-A\n\n       CALL \"IS-MULTIPLY-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-MULTIPLY-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-MULTIPLY-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 30 TO L-A\n\n       CALL \"IS-MULTIPLY-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-MULTIPLY-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-MULTIPLY-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-A\n\n       CALL \"IS-MULTIPLY-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-MULTIPLY-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-MULTIPLY-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-A\n\n       CALL \"IS-MULTIPLY-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-MULTIPLY-PRIME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-MULTIPLY-PRIME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 125 TO L-A\n\n       CALL \"IS-MULTIPLY-PRIME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}}]}
{"task_id":"HumanEval/76","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SIMPLE-POWER.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n      * Your task is to write a function that returns true if a number x is a simple\n      * power of n and false in other cases.\n      * x is a simple power of n if n**int=x\n      * For example:\n      * is_simple_power(1, 4) => true\n      * is_simple_power(2, 2) => true\n      * is_simple_power(8, 2) => true\n      * is_simple_power(3, 2) => false\n      * is_simple_power(3, 1) => false\n      * is_simple_power(5, 3) => false\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"is_simple_power","canonical_solution":"    if (n == 1): \n        return (x == 1) \n    power = 1\n    while (power < x): \n        power = power * n \n    return (power == x) \n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SIMPLE-POWER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SIMPLE-POWER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 16 TO L-X\n       MOVE 2 TO L-N\n\n       CALL \"IS-SIMPLE-POWER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SIMPLE-POWER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SIMPLE-POWER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 143214 TO L-X\n       MOVE 16 TO L-N\n\n       CALL \"IS-SIMPLE-POWER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SIMPLE-POWER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SIMPLE-POWER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-X\n       MOVE 2 TO L-N\n\n       CALL \"IS-SIMPLE-POWER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SIMPLE-POWER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SIMPLE-POWER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 9 TO L-X\n       MOVE 3 TO L-N\n\n       CALL \"IS-SIMPLE-POWER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SIMPLE-POWER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SIMPLE-POWER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 16 TO L-X\n       MOVE 4 TO L-N\n\n       CALL \"IS-SIMPLE-POWER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SIMPLE-POWER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SIMPLE-POWER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 24 TO L-X\n       MOVE 2 TO L-N\n\n       CALL \"IS-SIMPLE-POWER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SIMPLE-POWER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SIMPLE-POWER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 128 TO L-X\n       MOVE 4 TO L-N\n\n       CALL \"IS-SIMPLE-POWER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SIMPLE-POWER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SIMPLE-POWER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 12 TO L-X\n       MOVE 6 TO L-N\n\n       CALL \"IS-SIMPLE-POWER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SIMPLE-POWER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SIMPLE-POWER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-X\n       MOVE 1 TO L-N\n\n       CALL \"IS-SIMPLE-POWER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SIMPLE-POWER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SIMPLE-POWER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-X\n       MOVE 12 TO L-N\n\n       CALL \"IS-SIMPLE-POWER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}}]}
{"task_id":"HumanEval/77","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ISCUBE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n      * '''\n      * Write a function that takes an integer a and returns True\n      * if this ingeger is a cube of some integer number.\n      * Note: you may assume the input is always valid.\n      * Examples:\n      * iscube(1) ==> True\n      * iscube(2) ==> False\n      * iscube(-1) ==> True\n      * iscube(64) ==> True\n      * iscube(0) ==> True\n      * iscube(180) ==> False\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"iscube","canonical_solution":"    a = abs(a)\n    return int(round(a ** (1. / 3))) ** 3 == a\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ISCUBE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ISCUBE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-A\n\n       CALL \"ISCUBE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ISCUBE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ISCUBE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-A\n\n       CALL \"ISCUBE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ISCUBE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ISCUBE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE -1 TO L-A\n\n       CALL \"ISCUBE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ISCUBE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ISCUBE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 64 TO L-A\n\n       CALL \"ISCUBE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ISCUBE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ISCUBE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 180 TO L-A\n\n       CALL \"ISCUBE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ISCUBE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ISCUBE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1000 TO L-A\n\n       CALL \"ISCUBE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ISCUBE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ISCUBE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-A\n\n       CALL \"ISCUBE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ISCUBE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ISCUBE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1729 TO L-A\n\n       CALL \"ISCUBE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/78","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HEX-KEY.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC X(100).\n           05 RESULT PIC S9(10).\n\n      * You have been tasked to write a function that receives\n      * a hexadecimal number as a string and counts the number of hexadecimal\n      * digits that are primes (prime number, or a prime, is a natural number\n      * greater than 1 that is not a product of two smaller natural numbers).\n      * Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n      * Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n      * So you have to determine a number of the following digits: 2, 3, 5, 7,\n      * B (=decimal 11), D (=decimal 13).\n      * Note: you may assume the input is always correct or empty string,\n      * and symbols A,B,C,D,E,F are always uppercase.\n      * Examples:\n      * For num = \"AB\" the output should be 1.\n      * For num = \"1077E\" the output should be 2.\n      * For num = \"ABED1A33\" the output should be 4.\n      * For num = \"123456789ABCDEF0\" the output should be 6.\n      * For num = \"2020\" the output should be 2.\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"hex_key","canonical_solution":"    primes = ('2', '3', '5', '7', 'B', 'D')\n    total = 0\n    for i in range(0, len(num)):\n        if num[i] in primes:\n            total += 1\n    return total\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HEX-KEY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HEX-KEY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"AB\" TO L-NUM\n\n       CALL \"HEX-KEY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HEX-KEY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HEX-KEY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"1077E\" TO L-NUM\n\n       CALL \"HEX-KEY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HEX-KEY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HEX-KEY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"ABED1A33\" TO L-NUM\n\n       CALL \"HEX-KEY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HEX-KEY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HEX-KEY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"2020\" TO L-NUM\n\n       CALL \"HEX-KEY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HEX-KEY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HEX-KEY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"123456789ABCDEF0\" TO L-NUM\n\n       CALL \"HEX-KEY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"6","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. HEX-KEY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"HEX-KEY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"112233445566778899AABBCCDDEEFF00\" TO L-NUM\n\n       CALL \"HEX-KEY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"12","type_":"Int"}}]}
{"task_id":"HumanEval/79","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DECIMAL-TO-BINARY.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-DECIMAL PIC S9(10).\n           05 RESULT PIC X(100).\n\n      * You will be given a number in decimal form and your task is to convert it to\n      * binary format. The function should return a string, with each character representing a binary\n      * number. Each character in the string will be '0' or '1'.\n      * \n      * There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n      * The extra characters are there to help with the format.\n      * \n      * Examples:\n      * decimal_to_binary(15)   # returns \"db1111db\"\n      * decimal_to_binary(32)   # returns \"db100000db\"\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"decimal_to_binary","canonical_solution":"    return \"db\" + bin(decimal)[2:] + \"db\"\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DECIMAL-TO-BINARY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DECIMAL-TO-BINARY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DECIMAL PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-DECIMAL\n\n       CALL \"DECIMAL-TO-BINARY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"db0db\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DECIMAL-TO-BINARY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DECIMAL-TO-BINARY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DECIMAL PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 32 TO L-DECIMAL\n\n       CALL \"DECIMAL-TO-BINARY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"db100000db\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DECIMAL-TO-BINARY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DECIMAL-TO-BINARY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DECIMAL PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 103 TO L-DECIMAL\n\n       CALL \"DECIMAL-TO-BINARY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"db1100111db\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DECIMAL-TO-BINARY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DECIMAL-TO-BINARY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DECIMAL PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 15 TO L-DECIMAL\n\n       CALL \"DECIMAL-TO-BINARY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"db1111db\"","type_":"String"}}]}
{"task_id":"HumanEval/80","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-HAPPY.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC 9.\n\n      * You are given a string s.\n      * Your task is to check if the string is happy or not.\n      * A string is happy if its length is at least 3 and every 3 consecutive letters are distinct\n      * For example:\n      * is_happy(a) => False\n      * is_happy(aa) => False\n      * is_happy(abcd) => True\n      * is_happy(aabb) => False\n      * is_happy(adb) => True\n      * is_happy(xyy) => False\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"is_happy","canonical_solution":"    if len(s) < 3:\n      return False\n\n    for i in range(len(s) - 2):\n      \n      if s[i] == s[i+1] or s[i+1] == s[i+2] or s[i] == s[i+2]:\n        return False\n    return True\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-HAPPY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-HAPPY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"a\" TO L-S\n\n       CALL \"IS-HAPPY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-HAPPY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-HAPPY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"aa\" TO L-S\n\n       CALL \"IS-HAPPY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-HAPPY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-HAPPY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"abcd\" TO L-S\n\n       CALL \"IS-HAPPY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-HAPPY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-HAPPY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"aabb\" TO L-S\n\n       CALL \"IS-HAPPY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-HAPPY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-HAPPY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"adb\" TO L-S\n\n       CALL \"IS-HAPPY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-HAPPY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-HAPPY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"xyy\" TO L-S\n\n       CALL \"IS-HAPPY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-HAPPY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-HAPPY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"iopaxpoi\" TO L-S\n\n       CALL \"IS-HAPPY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-HAPPY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-HAPPY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"iopaxioi\" TO L-S\n\n       CALL \"IS-HAPPY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/81","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. NUMERICAL-LETTER-GRADE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-GRADES OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n      * It is the last week of the semester and the teacher has to give the grades\n      * to students. The teacher has been making her own algorithm for grading.\n      * The only problem is, she has lost the code she used for grading.\n      * She has given you a list of GPAs for some students and you have to write\n      * a function that can output a list of letter grades using the following table:\n      * GPA       |    Letter grade\n      * 4.0                A+\n      * > 3.7                A\n      * > 3.3                A-\n      * > 3.0                B+\n      * > 2.7                B\n      * > 2.3                B-\n      * > 2.0                C+\n      * > 1.7                C\n      * > 1.3                C-\n      * > 1.0                D+\n      * > 0.7                D\n      * > 0.0                D-\n      * 0.0                E\n      * \n      * \n      * Example:\n      * grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"numerical_letter_grade","canonical_solution":"\n   \n    letter_grade = []\n    for gpa in grades:\n        if gpa == 4.0:\n            letter_grade.append(\"A+\")\n        elif gpa > 3.7:\n            letter_grade.append(\"A\")\n        elif gpa > 3.3:\n            letter_grade.append(\"A-\")\n        elif gpa > 3.0:\n            letter_grade.append(\"B+\")\n        elif gpa > 2.7:\n            letter_grade.append(\"B\")\n        elif gpa > 2.3:\n            letter_grade.append(\"B-\")\n        elif gpa > 2.0:\n            letter_grade.append(\"C+\")\n        elif gpa > 1.7:\n            letter_grade.append(\"C\")\n        elif gpa > 1.3:\n            letter_grade.append(\"C-\")\n        elif gpa > 1.0:\n            letter_grade.append(\"D+\")\n        elif gpa > 0.7:\n            letter_grade.append(\"D\")\n        elif gpa > 0.0:\n            letter_grade.append(\"D-\")\n        else:\n            letter_grade.append(\"E\")\n    return letter_grade\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. NUMERICAL-LETTER-GRADE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"NUMERICAL-LETTER-GRADE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-GRADES OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4.0 TO L-GRADES(1)\n       MOVE 3 TO L-GRADES(2)\n       MOVE 1.7 TO L-GRADES(3)\n       MOVE 2 TO L-GRADES(4)\n       MOVE 3.5 TO L-GRADES(5)\n\n       CALL \"NUMERICAL-LETTER-GRADE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['A+', 'B', 'C-', 'C', 'A-']","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. NUMERICAL-LETTER-GRADE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"NUMERICAL-LETTER-GRADE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-GRADES OCCURS 5 TIMES INDEXED BY NI COMP-2.\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-GRADES(1)\n       MOVE 0.3 TO L-GRADES(2)\n       MOVE 1.5 TO L-GRADES(3)\n       MOVE 2.8 TO L-GRADES(4)\n       MOVE 3.3 TO L-GRADES(5)\n\n       CALL \"NUMERICAL-LETTER-GRADE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"['D', 'D-', 'C-', 'B', 'B+']","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/82","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n      * Write a function that takes a string and returns True if the string\n      * length is a prime number or False otherwise\n      * Examples\n      * prime_length('Hello') == True\n      * prime_length('abcdcba') == True\n      * prime_length('kittens') == True\n      * prime_length('orange') == False\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"prime_length","canonical_solution":"    l = len(string)\n    if l == 0 or l == 1:\n        return False\n    for i in range(2, l):\n        if l % i == 0:\n            return False\n    return True\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Hello' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'abcdcba' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'kittens' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'orange' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'wow' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'world' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'MadaM' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Wow' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'HI' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'go' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'gogo' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'aaaaaaaaaaaaaaa' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Madam' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 'M' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PRIME-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PRIME-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '0' TO L-STRING\n\n       CALL \"PRIME-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/83","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STARTS-ONE-ENDS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * Given a positive integer n, return the count of the numbers of n-digit\n      * positive integers that start or end with 1.\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"starts_one_ends","canonical_solution":"    if n == 1: return 1\n    return 18 * (10 ** (n - 2))\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STARTS-ONE-ENDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STARTS-ONE-ENDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"STARTS-ONE-ENDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STARTS-ONE-ENDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STARTS-ONE-ENDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-N\n\n       CALL \"STARTS-ONE-ENDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"18","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STARTS-ONE-ENDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STARTS-ONE-ENDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n\n       CALL \"STARTS-ONE-ENDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"180","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STARTS-ONE-ENDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STARTS-ONE-ENDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-N\n\n       CALL \"STARTS-ONE-ENDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1800","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STARTS-ONE-ENDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STARTS-ONE-ENDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"STARTS-ONE-ENDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"18000","type_":"Int"}}]}
{"task_id":"HumanEval/84","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC X(100).\n\n      * Given a positive integer N, return the total sum of its digits in binary.\n      * \n      * Example\n      * For N = 1000, the sum of digits will be 1 the output should be \"1\".\n      * For N = 150, the sum of digits will be 6 the output should be \"110\".\n      * For N = 147, the sum of digits will be 12 the output should be \"1100\".\n      * \n      * Variables:\n      * @N integer\n      * Constraints: 0 ≤ N ≤ 10000.\n      * Output:\n      * a string of binary number\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"solve","canonical_solution":"    return bin(sum(int(i) for i in str(N)))[2:]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1000 TO L-N\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"1\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 150 TO L-N\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"110\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 147 TO L-N\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"1100\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 333 TO L-N\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"1001\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 963 TO L-N\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"10010\"","type_":"String"}}]}
{"task_id":"HumanEval/85","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Given a non-empty list of integers lst. add the even elements that are at odd indices..\n      * \n      * \n      * Examples:\n      * add([4, 2, 6, 7]) ==> 2\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"add","canonical_solution":"    return sum([lst[i] for i in range(1, len(lst), 2) if lst[i]%2 == 0])\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ADD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-LST(1)\n       MOVE 0 TO L-LST(2)\n       MOVE 6 TO L-LST(3)\n       MOVE 7 TO L-LST(4)\n\n       CALL \"ADD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ADD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-LST(1)\n       MOVE 4 TO L-LST(2)\n       MOVE 6 TO L-LST(3)\n       MOVE 8 TO L-LST(4)\n\n       CALL \"ADD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"12","type_":"Int"}}]}
{"task_id":"HumanEval/86","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANTI-SHUFFLE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n      * \n      * Write a function that takes a string and returns an ordered version of it.\n      * Ordered version of string, is a string where all words (separated by space)\n      * are replaced by a new word where all the characters arranged in\n      * ascending order based on ascii value.\n      * Note: You should keep the order of words and blank spaces in the sentence.\n      * \n      * For example:\n      * anti_shuffle('Hi') returns 'Hi'\n      * anti_shuffle('hello') returns 'ehllo'\n      * anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"anti_shuffle","canonical_solution":"    return ' '.join([''.join(sorted(list(i))) for i in s.split(' ')])\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANTI-SHUFFLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANTI-SHUFFLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Hi' TO L-S\n\n       CALL \"ANTI-SHUFFLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Hi'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANTI-SHUFFLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANTI-SHUFFLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'hello' TO L-S\n\n       CALL \"ANTI-SHUFFLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'ehllo'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANTI-SHUFFLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANTI-SHUFFLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'number' TO L-S\n\n       CALL \"ANTI-SHUFFLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'bemnru'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANTI-SHUFFLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANTI-SHUFFLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'abcd' TO L-S\n\n       CALL \"ANTI-SHUFFLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'abcd'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANTI-SHUFFLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANTI-SHUFFLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Hello World!!!' TO L-S\n\n       CALL \"ANTI-SHUFFLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Hello !!!Wdlor'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANTI-SHUFFLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANTI-SHUFFLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-S\n\n       CALL \"ANTI-SHUFFLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"''","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANTI-SHUFFLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANTI-SHUFFLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Hi. My name is Mister Robot. How are you?' TO L-S\n\n       CALL \"ANTI-SHUFFLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'.Hi My aemn is Meirst .Rboot How aer ?ouy'","type_":"String"}}]}
{"task_id":"HumanEval/88","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-ARRAY.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-ARRAY OCCURS 7 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * \n      * Given an array of non-negative integers, return a copy of the given array after sorting,\n      * you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n      * or sort it in descending order if the sum( first index value, last index value) is even.\n      * \n      * Note:\n      * * don't change the given array.\n      * \n      * Examples:\n      * * sort_array([2, 4, 3, 0, 1, 5, 7]) => [0, 1, 2, 3, 4, 5, 7]\n      * * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"sort_array","canonical_solution":"    return [] if len(array) == 0 else sorted(array, reverse= (array[0]+array[-1]) % 2 == 0) \n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-ARRAY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORT-ARRAY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARRAY OCCURS 7 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-ARRAY(1)\n       MOVE 4 TO L-ARRAY(2)\n       MOVE 3 TO L-ARRAY(3)\n       MOVE 0 TO L-ARRAY(4)\n       MOVE 1 TO L-ARRAY(5)\n       MOVE 6 TO L-ARRAY(6)\n       MOVE 5 TO L-ARRAY(7)\n\n       CALL \"SORT-ARRAY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0, 1, 2, 3, 4, 5, 6]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-ARRAY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORT-ARRAY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARRAY OCCURS 7 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-ARRAY(1)\n       MOVE 4 TO L-ARRAY(2)\n       MOVE 3 TO L-ARRAY(3)\n       MOVE 0 TO L-ARRAY(4)\n       MOVE 1 TO L-ARRAY(5)\n       MOVE 5 TO L-ARRAY(6)\n       MOVE 6 TO L-ARRAY(7)\n\n       CALL \"SORT-ARRAY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[6, 5, 4, 3, 2, 1, 0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-ARRAY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORT-ARRAY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARRAY OCCURS 7 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 15 TO L-ARRAY(1)\n       MOVE 42 TO L-ARRAY(2)\n       MOVE 87 TO L-ARRAY(3)\n       MOVE 89 TO L-ARRAY(4)\n       MOVE 32  TO L-ARRAY(5)\n       MOVE 11 TO L-ARRAY(6)\n       MOVE 0 TO L-ARRAY(7)\n\n       CALL \"SORT-ARRAY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0, 11, 15, 32, 42, 87, 89]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/89","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCRYPT.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n      * Create a function encrypt that takes a string as an argument and\n      * returns a string encrypted with the alphabet being rotated.\n      * The alphabet should be rotated in a manner such that the letters\n      * shift down by two multiplied to two places.\n      * For example:\n      * encrypt('hi') returns 'lm'\n      * encrypt('asdfghjkl') returns 'ewhjklnop'\n      * encrypt('gf') returns 'kj'\n      * encrypt('et') returns 'ix'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"encrypt","canonical_solution":"    d = 'abcdefghijklmnopqrstuvwxyz'\n    out = ''\n    for c in s:\n        if c in d:\n            out += d[(d.index(c)+2*2) % 26]\n        else:\n            out += c\n    return out\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCRYPT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCRYPT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'hi' TO L-S\n\n       CALL \"ENCRYPT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'lm'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCRYPT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCRYPT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'asdfghjkl' TO L-S\n\n       CALL \"ENCRYPT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'ewhjklnop'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCRYPT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCRYPT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'gf' TO L-S\n\n       CALL \"ENCRYPT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'kj'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCRYPT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCRYPT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'et' TO L-S\n\n       CALL \"ENCRYPT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'ix'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCRYPT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCRYPT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'faewfawefaewg' TO L-S\n\n       CALL \"ENCRYPT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'jeiajeaijeiak'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCRYPT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCRYPT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'hellomyfriend' TO L-S\n\n       CALL \"ENCRYPT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'lippsqcjvmirh'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCRYPT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCRYPT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh' TO L-S\n\n       CALL \"ENCRYPT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCRYPT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCRYPT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'a' TO L-S\n\n       CALL \"ENCRYPT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'e'","type_":"String"}}]}
{"task_id":"HumanEval/90","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. NEXT-SMALLEST.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * You are given a list of integers.\n      * Write a function next_smallest() that returns the 2nd smallest element of the list.\n      * Return 0 if there is no such element.\n      * \n      * next_smallest([1, 2, 3, 4, 5]) == 2\n      * next_smallest([5, 1, 4, 3, 2]) == 2\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"next_smallest","canonical_solution":"    lst = sorted(set(lst))\n    return None if len(lst) < 2 else lst[1]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. NEXT-SMALLEST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"NEXT-SMALLEST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST(1)\n       MOVE 2 TO L-LST(2)\n       MOVE 3 TO L-LST(3)\n       MOVE 4 TO L-LST(4)\n       MOVE 5 TO L-LST(5)\n\n       CALL \"NEXT-SMALLEST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. NEXT-SMALLEST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"NEXT-SMALLEST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-LST(1)\n       MOVE 1 TO L-LST(2)\n       MOVE 4 TO L-LST(3)\n       MOVE 3 TO L-LST(4)\n       MOVE 2 TO L-LST(5)\n\n       CALL \"NEXT-SMALLEST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. NEXT-SMALLEST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"NEXT-SMALLEST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST(1)\n       MOVE 1 TO L-LST(2)\n       MOVE 1 TO L-LST(3)\n       MOVE 1 TO L-LST(4)\n       MOVE 0 TO L-LST(5)\n\n       CALL \"NEXT-SMALLEST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. NEXT-SMALLEST-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"NEXT-SMALLEST.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -35 TO L-LST(1)\n       MOVE 34 TO L-LST(2)\n       MOVE 12 TO L-LST(3)\n       MOVE -45 TO L-LST(4)\n\n       CALL \"NEXT-SMALLEST\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-35","type_":"Int"}}]}
{"task_id":"HumanEval/91","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-BORED.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n      * \n      * You'll be given a string of words, and your task is to count the number\n      * of boredoms. A boredom is a sentence that starts with the word \"I\".\n      * Sentences are delimited by '.', '?' or '!'.\n      * \n      * For example:\n      * >>> is_bored(\"Hello world\")\n      * 0\n      * >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n      * 1\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"is_bored","canonical_solution":"    import re\n    sentences = re.split(r'[.?!]\\s*', S)\n    return sum(sentence[0:2] == 'I ' for sentence in sentences)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-BORED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-BORED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Hello world\" TO L-S\n\n       CALL \"IS-BORED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-BORED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-BORED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Is the sky blue?\" TO L-S\n\n       CALL \"IS-BORED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-BORED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-BORED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"I love It !\" TO L-S\n\n       CALL \"IS-BORED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-BORED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-BORED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"bIt\" TO L-S\n\n       CALL \"IS-BORED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-BORED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-BORED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"I feel good today. I will be productive. will kill It\" TO L-S\n\n       CALL \"IS-BORED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-BORED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-BORED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"You and I are going for a walk\" TO L-S\n\n       CALL \"IS-BORED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}}]}
{"task_id":"HumanEval/92","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANY-INT.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-X COMP-2.\n           05 L-Y COMP-2.\n           05 L-Z COMP-2.\n           05 RESULT PIC 9.\n\n      * '''\n      * Create a function that takes 3 numbers.\n      * Returns true if one of the numbers is equal to the sum of the other two, and all numbers are integers.\n      * Returns false in any other cases.\n      * \n      * Examples\n      * any_int(5, 2, 7) ➞ True\n      * \n      * any_int(3, 2, 2) ➞ False\n      * \n      * any_int(3, -2, 1) ➞ True\n      * \n      * any_int(3.6, -2.2, 2) ➞ False\n      * \n      * \n      * \n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"any_int","canonical_solution":"    \n    if isinstance(x,int) and isinstance(y,int) and isinstance(z,int):\n        if (x+y==z) or (x+z==y) or (y+z==x):\n            return True\n        return False\n    return False\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANY-INT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANY-INT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X COMP-2.\n           05 L-Y COMP-2.\n           05 L-Z COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-X\n       MOVE 3 TO L-Y\n       MOVE 1 TO L-Z\n\n       CALL \"ANY-INT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANY-INT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANY-INT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X COMP-2.\n           05 L-Y COMP-2.\n           05 L-Z COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2.5 TO L-X\n       MOVE 2 TO L-Y\n       MOVE 3 TO L-Z\n\n       CALL \"ANY-INT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANY-INT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANY-INT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X COMP-2.\n           05 L-Y COMP-2.\n           05 L-Z COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.5 TO L-X\n       MOVE 5 TO L-Y\n       MOVE 3.5 TO L-Z\n\n       CALL \"ANY-INT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANY-INT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANY-INT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X COMP-2.\n           05 L-Y COMP-2.\n           05 L-Z COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-X\n       MOVE 6 TO L-Y\n       MOVE 2 TO L-Z\n\n       CALL \"ANY-INT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANY-INT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANY-INT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X COMP-2.\n           05 L-Y COMP-2.\n           05 L-Z COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-X\n       MOVE 2 TO L-Y\n       MOVE 2 TO L-Z\n\n       CALL \"ANY-INT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANY-INT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANY-INT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X COMP-2.\n           05 L-Y COMP-2.\n           05 L-Z COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2.2 TO L-X\n       MOVE 2.2 TO L-Y\n       MOVE 2.2 TO L-Z\n\n       CALL \"ANY-INT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANY-INT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANY-INT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X COMP-2.\n           05 L-Y COMP-2.\n           05 L-Z COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE -4 TO L-X\n       MOVE 6 TO L-Y\n       MOVE 2 TO L-Z\n\n       CALL \"ANY-INT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANY-INT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANY-INT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X COMP-2.\n           05 L-Y COMP-2.\n           05 L-Z COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-X\n       MOVE 1 TO L-Y\n       MOVE 1 TO L-Z\n\n       CALL \"ANY-INT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANY-INT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANY-INT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X COMP-2.\n           05 L-Y COMP-2.\n           05 L-Z COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-X\n       MOVE 4 TO L-Y\n       MOVE 7 TO L-Z\n\n       CALL \"ANY-INT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ANY-INT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ANY-INT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X COMP-2.\n           05 L-Y COMP-2.\n           05 L-Z COMP-2.\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 3.0 TO L-X\n       MOVE 4 TO L-Y\n       MOVE 7 TO L-Z\n\n       CALL \"ANY-INT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/93","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCODE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-MESSAGE PIC X(100).\n           05 RESULT PIC X(100).\n\n      * \n      * Write a function that takes a message, and encodes in such a\n      * way that it swaps case of all letters, replaces all vowels in\n      * the message with the letter that appears 2 places ahead of that\n      * vowel in the english alphabet.\n      * Assume only letters.\n      * \n      * Examples:\n      * >>> encode('test')\n      * 'TGST'\n      * >>> encode('This is a message')\n      * 'tHKS KS C MGSSCGG'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"encode","canonical_solution":"    vowels = \"aeiouAEIOU\"\n    vowels_replace = dict([(i, chr(ord(i) + 2)) for i in vowels])\n    message = message.swapcase()\n    return ''.join([vowels_replace[i] if i in vowels else i for i in message])\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCODE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCODE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-MESSAGE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'TEST' TO L-MESSAGE\n\n       CALL \"ENCODE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'tgst'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCODE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCODE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-MESSAGE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Mudasir' TO L-MESSAGE\n\n       CALL \"ENCODE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'mWDCSKR'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCODE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCODE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-MESSAGE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'YES' TO L-MESSAGE\n\n       CALL \"ENCODE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'ygs'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCODE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCODE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-MESSAGE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'This is a message' TO L-MESSAGE\n\n       CALL \"ENCODE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'tHKS KS C MGSSCGG'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ENCODE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ENCODE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-MESSAGE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"I DoNt KnOw WhAt tO WrItE\" TO L-MESSAGE\n\n       CALL \"ENCODE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'k dQnT kNqW wHcT Tq wRkTg'","type_":"String"}}]}
{"task_id":"HumanEval/94","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SKJKASDKD.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * You are given a list of integers.\n      * You need to find the largest prime value and return the sum of its digits.\n      * \n      * Examples:\n      * For lst = [0,81,12,3,1,21] the output should be 3\n      * For lst = [0,8,1,2,1,7] the output should be 7\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"skjkasdkd","canonical_solution":"    def isPrime(n):\n        for i in range(2,int(n**0.5)+1):\n            if n%i==0:\n                return False\n\n        return True\n    maxx = 0\n    i = 0\n    while i < len(lst):\n        if(lst[i] > maxx and isPrime(lst[i])):\n            maxx = lst[i]\n        i+=1\n    result = sum(int(digit) for digit in str(maxx))\n    return result\n\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SKJKASDKD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SKJKASDKD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-LST(1)\n       MOVE 81 TO L-LST(2)\n       MOVE 12 TO L-LST(3)\n       MOVE 3 TO L-LST(4)\n       MOVE 1 TO L-LST(5)\n       MOVE 21 TO L-LST(6)\n\n       CALL \"SKJKASDKD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SKJKASDKD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SKJKASDKD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-LST(1)\n       MOVE 8 TO L-LST(2)\n       MOVE 1 TO L-LST(3)\n       MOVE 2 TO L-LST(4)\n       MOVE 1 TO L-LST(5)\n       MOVE 7 TO L-LST(6)\n\n       CALL \"SKJKASDKD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"7","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SKJKASDKD-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SKJKASDKD.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8191 TO L-LST(1)\n       MOVE 123456 TO L-LST(2)\n       MOVE 127 TO L-LST(3)\n       MOVE 7 TO L-LST(4)\n       MOVE 1 TO L-LST(5)\n       MOVE 2 TO L-LST(6)\n\n       CALL \"SKJKASDKD\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"19","type_":"Int"}}]}
{"task_id":"HumanEval/96","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UP-TO.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * Implement a function that takes an non-negative integer and returns an array of the first n\n      * integers that are prime numbers and less than n.\n      * for example:\n      * count_up_to(5) => [2,3]\n      * count_up_to(11) => [2,3,5,7]\n      * count_up_to(0) => []\n      * count_up_to(20) => [2,3,5,7,11,13,17,19]\n      * count_up_to(1) => []\n      * count_up_to(18) => [2,3,5,7,11,13,17]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"count_up_to","canonical_solution":"    primes = []\n    for i in range(2, n):\n        is_prime = True\n        for j in range(2, i):\n            if i % j == 0:\n                is_prime = False\n                break\n        if is_prime:\n            primes.append(i)\n    return primes\n\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UP-TO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UP-TO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"COUNT-UP-TO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2,3]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UP-TO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UP-TO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 6 TO L-N\n\n       CALL \"COUNT-UP-TO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2,3,5]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UP-TO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UP-TO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-N\n\n       CALL \"COUNT-UP-TO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2,3,5]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UP-TO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UP-TO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-N\n\n       CALL \"COUNT-UP-TO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2,3,5,7]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UP-TO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UP-TO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-N\n\n       CALL \"COUNT-UP-TO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UP-TO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UP-TO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 22 TO L-N\n\n       CALL \"COUNT-UP-TO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2,3,5,7,11,13,17,19]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UP-TO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UP-TO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"COUNT-UP-TO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UP-TO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UP-TO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 18 TO L-N\n\n       CALL \"COUNT-UP-TO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2,3,5,7,11,13,17]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UP-TO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UP-TO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 47 TO L-N\n\n       CALL \"COUNT-UP-TO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UP-TO-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UP-TO.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 101 TO L-N\n\n       CALL \"COUNT-UP-TO\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/97","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MULTIPLY.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Complete the function that takes two integers and returns\n      * the product of their unit digits.\n      * Assume the input is always valid.\n      * Examples:\n      * multiply(148, 412) should return 16.\n      * multiply(19, 28) should return 72.\n      * multiply(2020, 1851) should return 0.\n      * multiply(14,-15) should return 20.\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"multiply","canonical_solution":"    return abs(a % 10) * abs(b % 10)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MULTIPLY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MULTIPLY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 148 TO L-A\n       MOVE 412 TO L-B\n\n       CALL \"MULTIPLY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"16","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MULTIPLY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MULTIPLY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 19 TO L-A\n       MOVE 28 TO L-B\n\n       CALL \"MULTIPLY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"72","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MULTIPLY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MULTIPLY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2020 TO L-A\n       MOVE 1851 TO L-B\n\n       CALL \"MULTIPLY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MULTIPLY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MULTIPLY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 14 TO L-A\n       MOVE -15 TO L-B\n\n       CALL \"MULTIPLY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"20","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MULTIPLY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MULTIPLY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 76 TO L-A\n       MOVE 67 TO L-B\n\n       CALL \"MULTIPLY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"42","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MULTIPLY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MULTIPLY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 17 TO L-A\n       MOVE 27 TO L-B\n\n       CALL \"MULTIPLY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"49","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MULTIPLY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MULTIPLY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-A\n       MOVE 1 TO L-B\n\n       CALL \"MULTIPLY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MULTIPLY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MULTIPLY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-A\n       MOVE 0 TO L-B\n\n       CALL \"MULTIPLY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}}]}
{"task_id":"HumanEval/98","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UPPER.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n      * \n      * Given a string s, count the number of uppercase vowels in even indices.\n      * \n      * For example:\n      * count_upper('aBCdEf') returns 1\n      * count_upper('abcdefg') returns 0\n      * count_upper('dBBE') returns 0\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"count_upper","canonical_solution":"    count = 0\n    for i in range(0,len(s),2):\n        if s[i] in \"AEIOU\":\n            count += 1\n    return count\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UPPER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UPPER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'aBCdEf' TO L-S\n\n       CALL \"COUNT-UPPER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UPPER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UPPER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'abcdefg' TO L-S\n\n       CALL \"COUNT-UPPER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UPPER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UPPER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'dBBE' TO L-S\n\n       CALL \"COUNT-UPPER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UPPER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UPPER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'B' TO L-S\n\n       CALL \"COUNT-UPPER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UPPER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UPPER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'U' TO L-S\n\n       CALL \"COUNT-UPPER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UPPER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UPPER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-S\n\n       CALL \"COUNT-UPPER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-UPPER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-UPPER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'EEEE' TO L-S\n\n       CALL \"COUNT-UPPER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}}]}
{"task_id":"HumanEval/99","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CLOSEST-INTEGER.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-VALUE COMP-2.\n           05 RESULT PIC S9(10).\n\n      * '''\n      * Create a function that takes a value (string) representing a number\n      * and returns the closest integer to it. If the number is equidistant\n      * from two integers, round it away from zero.\n      * \n      * Examples\n      * >>> closest_integer(\"10\")\n      * 10\n      * >>> closest_integer(\"15.3\")\n      * 15\n      * \n      * Note:\n      * Rounding away from zero means that if the given number is equidistant\n      * from two integers, the one you should return is the one that is the\n      * farthest from zero. For example closest_integer(\"14.5\") should\n      * return 15 and closest_integer(\"-14.5\") should return -15.\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"closest_integer","canonical_solution":"    from math import floor, ceil\n\n    if value.count('.') == 1:\n        # remove trailing zeros\n        while (value[-1] == '0'):\n            value = value[:-1]\n\n    num = float(value)\n    if value[-2:] == '.5':\n        if num > 0:\n            res = ceil(num)\n        else:\n            res = floor(num)\n    elif len(value) > 0:\n        res = int(round(num))\n    else:\n        res = 0\n\n    return res\n\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CLOSEST-INTEGER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CLOSEST-INTEGER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-VALUE COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"10\" TO L-VALUE\n\n       CALL \"CLOSEST-INTEGER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"10","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CLOSEST-INTEGER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CLOSEST-INTEGER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-VALUE COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"14.5\" TO L-VALUE\n\n       CALL \"CLOSEST-INTEGER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"15","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CLOSEST-INTEGER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CLOSEST-INTEGER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-VALUE COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"-15.5\" TO L-VALUE\n\n       CALL \"CLOSEST-INTEGER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-16","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CLOSEST-INTEGER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CLOSEST-INTEGER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-VALUE COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"15.3\" TO L-VALUE\n\n       CALL \"CLOSEST-INTEGER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"15","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CLOSEST-INTEGER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CLOSEST-INTEGER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-VALUE COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"0\" TO L-VALUE\n\n       CALL \"CLOSEST-INTEGER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}}]}
{"task_id":"HumanEval/100","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAKE-A-PILE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * \n      * Given a positive integer n, you have to make a pile of n levels of stones.\n      * The first level has n stones.\n      * The number of stones in the next level is:\n      * - the next odd number if n is odd.\n      * - the next even number if n is even.\n      * Return the number of stones in each level in a list, where element at index\n      * i represents the number of stones in the level (i+1).\n      * \n      * Examples:\n      * >>> make_a_pile(3)\n      * [3, 5, 7]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"make_a_pile","canonical_solution":"    return [n + 2*i for i in range(n)]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAKE-A-PILE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MAKE-A-PILE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n\n       CALL \"MAKE-A-PILE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[3, 5, 7]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAKE-A-PILE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MAKE-A-PILE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-N\n\n       CALL \"MAKE-A-PILE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4,6,8,10]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAKE-A-PILE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MAKE-A-PILE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"MAKE-A-PILE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[5, 7, 9, 11, 13]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAKE-A-PILE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MAKE-A-PILE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 6 TO L-N\n\n       CALL \"MAKE-A-PILE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[6, 8, 10, 12, 14, 16]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAKE-A-PILE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MAKE-A-PILE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-N\n\n       CALL \"MAKE-A-PILE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[8, 10, 12, 14, 16, 18, 20, 22]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/101","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-STRING.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n      * \n      * You will be given a string of words separated by commas or spaces. Your task is\n      * to split the string into words and return an array of the words.\n      * \n      * For example:\n      * words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n      * words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"words_string","canonical_solution":"    if not s:\n        return []\n\n    s_list = []\n\n    for letter in s:\n        if letter == ',':\n            s_list.append(' ')\n        else:\n            s_list.append(letter)\n\n    s_list = \"\".join(s_list)\n    return s_list.split()\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-STRING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-STRING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Hi, my name is John\" TO L-S\n\n       CALL \"WORDS-STRING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"Hi\", \"my\", \"name\", \"is\", \"John\"]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-STRING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-STRING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"One, two, three, four, five, six\" TO L-S\n\n       CALL \"WORDS-STRING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-STRING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-STRING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Hi, my name\" TO L-S\n\n       CALL \"WORDS-STRING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"Hi\", \"my\", \"name\"]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-STRING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-STRING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"One,, two, three, four, five, six,\" TO L-S\n\n       CALL \"WORDS-STRING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-STRING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-STRING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"\" TO L-S\n\n       CALL \"WORDS-STRING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-STRING-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-STRING.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"ahmed     , gamal\" TO L-S\n\n       CALL \"WORDS-STRING\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"ahmed\", \"gamal\"]","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/102","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHOOSE-NUM.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * This function takes two positive numbers x and y and returns the\n      * biggest even integer number that is in the range [x, y] inclusive. If\n      * there's no such number, then the function should return -1.\n      * \n      * For example:\n      * choose_num(12, 15) = 14\n      * choose_num(13, 12) = -1\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"choose_num","canonical_solution":"    if x > y:\n        return -1\n    if y % 2 == 0:\n        return y\n    if x == y:\n        return -1\n    return y - 1\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHOOSE-NUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHOOSE-NUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 12 TO L-X\n       MOVE 15 TO L-Y\n\n       CALL \"CHOOSE-NUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"14","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHOOSE-NUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHOOSE-NUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 13 TO L-X\n       MOVE 12 TO L-Y\n\n       CALL \"CHOOSE-NUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHOOSE-NUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHOOSE-NUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 33 TO L-X\n       MOVE 12354 TO L-Y\n\n       CALL \"CHOOSE-NUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"12354","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHOOSE-NUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHOOSE-NUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5234 TO L-X\n       MOVE 5233 TO L-Y\n\n       CALL \"CHOOSE-NUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHOOSE-NUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHOOSE-NUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 6 TO L-X\n       MOVE 29 TO L-Y\n\n       CALL \"CHOOSE-NUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"28","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHOOSE-NUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHOOSE-NUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 27 TO L-X\n       MOVE 10 TO L-Y\n\n       CALL \"CHOOSE-NUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHOOSE-NUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHOOSE-NUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-X\n       MOVE 7 TO L-Y\n\n       CALL \"CHOOSE-NUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CHOOSE-NUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CHOOSE-NUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 546 TO L-X\n       MOVE 546 TO L-Y\n\n       CALL \"CHOOSE-NUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"546","type_":"Int"}}]}
{"task_id":"HumanEval/103","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n      * You are given two positive integers n and m, and your task is to compute the\n      * average of the integers from n through m (including n and m).\n      * Round the answer to the nearest integer and convert that to binary.\n      * If n is greater than m, return -1.\n      * Example:\n      * rounded_avg(1, 5) => \"0b11\"\n      * rounded_avg(7, 5) => -1\n      * rounded_avg(10, 20) => \"0b1111\"\n      * rounded_avg(20, 33) => \"0b11010\"\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"rounded_avg","canonical_solution":"    if m < n:\n        return -1\n    summation = 0\n    for i in range(n, m+1):\n        summation += i\n    return bin(round(summation/(m - n + 1)))\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n       MOVE 5 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"0b11\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-N\n       MOVE 13 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"0b1010\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 964 TO L-N\n       MOVE 977 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"0b1111001010\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 996 TO L-N\n       MOVE 997 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"0b1111100100\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 560 TO L-N\n       MOVE 851 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"0b1011000010\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 185 TO L-N\n       MOVE 546 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"0b101101110\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 362 TO L-N\n       MOVE 496 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"0b110101101\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 350 TO L-N\n       MOVE 902 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"0b1001110010\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 197 TO L-N\n       MOVE 233 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"0b11010111\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-N\n       MOVE 5 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n       MOVE 1 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ROUNDED-AVG-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ROUNDED-AVG.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-M PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n       MOVE 5 TO L-M\n\n       CALL \"ROUNDED-AVG\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"0b101\"","type_":"String"}}]}
{"task_id":"HumanEval/104","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. UNIQUE-DIGITS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-X OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * Given a list of positive integers x. return a sorted list of all\n      * elements that hasn't any even digit.\n      * \n      * Note: Returned list should be sorted in increasing order.\n      * \n      * For example:\n      * >>> unique_digits([15, 33, 1422, 1])\n      * [1, 15, 33]\n      * >>> unique_digits([152, 323, 1422, 10])\n      * []\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"unique_digits","canonical_solution":"    odd_digit_elements = []\n    for i in x:\n        if all (int(c) % 2 == 1 for c in str(i)):\n            odd_digit_elements.append(i)\n    return sorted(odd_digit_elements)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. UNIQUE-DIGITS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"UNIQUE-DIGITS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 15 TO L-X(1)\n       MOVE 33 TO L-X(2)\n       MOVE 1422 TO L-X(3)\n       MOVE 1 TO L-X(4)\n\n       CALL \"UNIQUE-DIGITS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 15, 33]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. UNIQUE-DIGITS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"UNIQUE-DIGITS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 152 TO L-X(1)\n       MOVE 323 TO L-X(2)\n       MOVE 1422 TO L-X(3)\n       MOVE 10 TO L-X(4)\n\n       CALL \"UNIQUE-DIGITS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. UNIQUE-DIGITS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"UNIQUE-DIGITS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 12345 TO L-X(1)\n       MOVE 2033 TO L-X(2)\n       MOVE 111 TO L-X(3)\n       MOVE 151 TO L-X(4)\n\n       CALL \"UNIQUE-DIGITS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[111, 151]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/105","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BY-LENGTH.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 8 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n      * \n      * Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n      * reverse the resulting array, and then replace each digit by its corresponding name from\n      * \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n      * \n      * For example:\n      * arr = [2, 1, 1, 4, 5, 8, 2, 3]\n      * -> sort arr -> [1, 1, 2, 2, 3, 4, 5, 8]\n      * -> reverse arr -> [8, 5, 4, 3, 2, 2, 1, 1]\n      * return [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"]\n      * \n      * \n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"by_length","canonical_solution":"    dic = {\n        1: \"One\",\n        2: \"Two\",\n        3: \"Three\",\n        4: \"Four\",\n        5: \"Five\",\n        6: \"Six\",\n        7: \"Seven\",\n        8: \"Eight\",\n        9: \"Nine\",\n    }\n    sorted_arr = sorted(arr, reverse=True)\n    new_arr = []\n    for var in sorted_arr:\n        try:\n            new_arr.append(dic[var])\n        except:\n            pass\n    return new_arr\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BY-LENGTH-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BY-LENGTH.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 8 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-ARR(1)\n       MOVE 1 TO L-ARR(2)\n       MOVE 1 TO L-ARR(3)\n       MOVE 4 TO L-ARR(4)\n       MOVE 5 TO L-ARR(5)\n       MOVE 8 TO L-ARR(6)\n       MOVE 2 TO L-ARR(7)\n       MOVE 3 TO L-ARR(8)\n\n       CALL \"BY-LENGTH\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"]","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/106","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. F.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * Implement the function f that takes n as a parameter,\n      * and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n      * or the sum of numbers from 1 to i otherwise.\n      * i starts from 1.\n      * the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n      * Example:\n      * f(5) == [1, 2, 6, 24, 15]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"f","canonical_solution":"    ret = []\n    for i in range(1,n+1):\n        if i%2 == 0:\n            x = 1\n            for j in range(1,i+1): x *= j\n            ret += [x]\n        else:\n            x = 0\n            for j in range(1,i+1): x += j\n            ret += [x]\n    return ret\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. F-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"F.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"F\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 2, 6, 24, 15]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. F-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"F.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-N\n\n       CALL \"F\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 2, 6, 24, 15, 720, 28]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. F-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"F.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"F\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. F-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"F.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n\n       CALL \"F\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 2, 6]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/107","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-PALINDROME.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * \n      * Given a positive integer n, return a list that has the number of even and odd\n      * integer palindromes that fall within the range(1, n), inclusive.\n      * \n      * Example 1:\n      * \n      * Input: 3\n      * Output: [1, 2]\n      * Explanation:\n      * Integer palindrome are 1, 2, 3. one of them is even, and two of them are odd.\n      * \n      * Example 2:\n      * \n      * Input: 12\n      * Output: [4, 6]\n      * Explanation:\n      * Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9, 11. four of them are even, and 6 of them are odd.\n      * \n      * Note:\n      * 1. 1 <= n <= 10^3\n      * 2. returned tuple has the number of even and odd integer palindromes respectively.\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"even_odd_palindrome","canonical_solution":"    def is_palindrome(n):\n        return str(n) == str(n)[::-1]\n\n    even_palindrome_count = 0\n    odd_palindrome_count = 0\n\n    for i in range(1, n+1):\n        if i%2 == 1 and is_palindrome(i):\n                odd_palindrome_count += 1\n        elif i%2 == 0 and is_palindrome(i):\n            even_palindrome_count += 1\n    return (even_palindrome_count, odd_palindrome_count)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 123 TO L-N\n\n       CALL \"EVEN-ODD-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[8, 13]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 12 TO L-N\n\n       CALL \"EVEN-ODD-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4, 6]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n\n       CALL \"EVEN-ODD-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 2]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 63 TO L-N\n\n       CALL \"EVEN-ODD-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[6, 8]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 25 TO L-N\n\n       CALL \"EVEN-ODD-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[5, 6]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 19 TO L-N\n\n       CALL \"EVEN-ODD-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4, 6]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 9 TO L-N\n\n       CALL \"EVEN-ODD-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4, 5]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-PALINDROME-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-PALINDROME.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"EVEN-ODD-PALINDROME\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0, 1]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/108","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-NUMS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * Write a function count_nums which takes an array of integers and returns\n      * the number of elements which has a sum of digits > 0.\n      * If a number is negative, then its first signed digit will be negative:\n      * e.g. -123 has signed digits -1, 2, and 3.\n      * >>> count_nums([-1, 11, -11]) == 1\n      * >>> count_nums([1, 1, 2]) == 3\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"count_nums","canonical_solution":"    def digits_sum(n):\n        neg = 1\n        if n < 0: n, neg = -1 * n, -1 \n        n = [int(i) for i in str(n)]\n        n[0] = n[0] * neg\n        return sum(n)\n    return len(list(filter(lambda x: x > 0, [digits_sum(i) for i in arr])))\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-NUMS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-NUMS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -1 TO L-ARR(1)\n       MOVE -2 TO L-ARR(2)\n       MOVE 0 TO L-ARR(3)\n\n       CALL \"COUNT-NUMS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-NUMS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-NUMS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE 1 TO L-ARR(2)\n       MOVE 2 TO L-ARR(3)\n\n       CALL \"COUNT-NUMS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-NUMS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-NUMS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE 66 TO L-ARR(2)\n       MOVE -6 TO L-ARR(3)\n\n       CALL \"COUNT-NUMS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COUNT-NUMS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COUNT-NUMS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE 66 TO L-ARR(2)\n       MOVE -67 TO L-ARR(3)\n\n       CALL \"COUNT-NUMS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}}]}
{"task_id":"HumanEval/109","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MOVE-ONE-BALL.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n      * We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n      * numbers in the array will be randomly ordered. Your task is to determine if\n      * it is possible to get an array sorted in non-decreasing order by performing\n      * the following operation on the given array:\n      * You are allowed to perform right shift operation any number of times.\n      * \n      * One right shift operation means shifting all elements of the array by one\n      * position in the right direction. The last element of the array will be moved to\n      * the starting position in the array i.e. 0th index.\n      * \n      * If it is possible to obtain the sorted array by performing the above operation\n      * then return True else return False.\n      * If the given array is empty then return True.\n      * \n      * Note: The given list is guaranteed to have unique elements.\n      * \n      * For Example:\n      * \n      * move_one_ball([3, 4, 5, 1, 2])==>True\n      * Explanation: By performin 2 right shift operations, non-decreasing order can\n      * be achieved for the given array.\n      * move_one_ball([3, 5, 4, 1, 2])==>False\n      * Explanation:It is not possible to get non-decreasing order for the given\n      * array by performing any number of right shift operations.\n      * \n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"move_one_ball","canonical_solution":"    if len(arr)==0:\n      return True\n    sorted_array=sorted(arr)\n    my_arr=[]\n    \n    min_value=min(arr)\n    min_index=arr.index(min_value)\n    my_arr=arr[min_index:]+arr[0:min_index]\n    for i in range(len(arr)):\n      if my_arr[i]!=sorted_array[i]:\n        return False\n    return True\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MOVE-ONE-BALL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MOVE-ONE-BALL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-ARR(1)\n       MOVE 4 TO L-ARR(2)\n       MOVE 5 TO L-ARR(3)\n       MOVE 1 TO L-ARR(4)\n       MOVE 2 TO L-ARR(5)\n\n       CALL \"MOVE-ONE-BALL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MOVE-ONE-BALL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MOVE-ONE-BALL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-ARR(1)\n       MOVE 5 TO L-ARR(2)\n       MOVE 10 TO L-ARR(3)\n       MOVE 1 TO L-ARR(4)\n       MOVE 2 TO L-ARR(5)\n\n       CALL \"MOVE-ONE-BALL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MOVE-ONE-BALL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MOVE-ONE-BALL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-ARR(1)\n       MOVE 5 TO L-ARR(2)\n       MOVE 4 TO L-ARR(3)\n       MOVE 1 TO L-ARR(4)\n       MOVE 2 TO L-ARR(5)\n\n       CALL \"MOVE-ONE-BALL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/110","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EXCHANGE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST1 OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-LST2 OCCURS 4 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n      * In this problem, you will implement a function that takes two lists of numbers,\n      * and determines whether it is possible to perform an exchange of elements\n      * between them to make lst1 a list of only even numbers.\n      * There is no limit on the number of exchanged elements between lst1 and lst2.\n      * If it is possible to exchange elements between the lst1 and lst2 to make\n      * all the elements of lst1 to be even, return \"YES\".\n      * Otherwise, return \"NO\".\n      * For example:\n      * exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n      * exchange([1, 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n      * It is assumed that the input lists will be non-empty.\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"exchange","canonical_solution":"    odd = 0\n    even = 0\n    for i in lst1:\n        if i%2 == 1:\n            odd += 1\n    for i in lst2:\n        if i%2 == 0:\n            even += 1\n    if even >= odd:\n        return \"YES\"\n    return \"NO\"\n            \n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EXCHANGE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EXCHANGE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST1 OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-LST2 OCCURS 4 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST1(1)\n       MOVE 2 TO L-LST1(2)\n       MOVE 3 TO L-LST1(3)\n       MOVE 4 TO L-LST1(4)\n       MOVE 1 TO L-LST2(1)\n       MOVE 2 TO L-LST2(2)\n       MOVE 3 TO L-LST2(3)\n       MOVE 4 TO L-LST2(4)\n\n       CALL \"EXCHANGE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"YES\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EXCHANGE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EXCHANGE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST1 OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-LST2 OCCURS 4 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST1(1)\n       MOVE 2 TO L-LST1(2)\n       MOVE 3 TO L-LST1(3)\n       MOVE 4 TO L-LST1(4)\n       MOVE 1 TO L-LST2(1)\n       MOVE 5 TO L-LST2(2)\n       MOVE 3 TO L-LST2(3)\n       MOVE 4 TO L-LST2(4)\n\n       CALL \"EXCHANGE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"NO\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EXCHANGE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EXCHANGE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST1 OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 L-LST2 OCCURS 4 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST1(1)\n       MOVE 2 TO L-LST1(2)\n       MOVE 3 TO L-LST1(3)\n       MOVE 4 TO L-LST1(4)\n       MOVE 2 TO L-LST2(1)\n       MOVE 1 TO L-LST2(2)\n       MOVE 4 TO L-LST2(3)\n       MOVE 3 TO L-LST2(4)\n\n       CALL \"EXCHANGE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"YES\"","type_":"String"}}]}
{"task_id":"HumanEval/113","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ODD-COUNT.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n      * Given a list of strings, where each string consists of only digits, return a list.\n      * Each element i of the output should be \"the number of odd elements in the\n      * string i of the input.\" where all the i's should be replaced by the number\n      * of odd digits in the i'th string of the input.\n      * \n      * >>> odd_count(['3',\"11111111\"])\n      * [\"the number of odd elements 1n the str1ng 1 of the 1nput.\",\n      * \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"odd_count","canonical_solution":"    res = []\n    for arr in lst:\n        n = sum(int(d)%2==1 for d in arr)\n        res.append(\"the number of odd elements \" + str(n) + \"n the str\"+ str(n) +\"ng \"+ str(n) +\" of the \"+ str(n) +\"nput.\")\n    return res\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ODD-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ODD-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '3' TO L-LST(1)\n       MOVE \"1111111\" TO L-LST(2)\n\n       CALL \"ODD-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 7n the str7ng 7 of the 7nput.\"]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ODD-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ODD-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '271' TO L-LST(1)\n       MOVE '137' TO L-LST(2)\n\n       CALL \"ODD-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\n        'the number of odd elements 2n the str2ng 2 of the 2nput.',\n        'the number of odd elements 3n the str3ng 3 of the 3nput.'\n    ]","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/114","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MINSUBARRAYSUM.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * Given an array of integers nums, find the minimum sum of any non-empty sub-array\n      * of nums.\n      * Example\n      * minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"minSubArraySum","canonical_solution":"    max_sum = 0\n    s = 0\n    for num in nums:\n        s += -num\n        if (s < 0):\n            s = 0\n        max_sum = max(s, max_sum)\n    if max_sum == 0:\n        max_sum = max(-i for i in nums)\n    min_sum = -max_sum\n    return min_sum\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MINSUBARRAYSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MINSUBARRAYSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-NUMS(1)\n       MOVE 3 TO L-NUMS(2)\n       MOVE 4 TO L-NUMS(3)\n       MOVE 1 TO L-NUMS(4)\n       MOVE 2 TO L-NUMS(5)\n       MOVE 4 TO L-NUMS(6)\n\n       CALL \"MINSUBARRAYSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MINSUBARRAYSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MINSUBARRAYSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -1 TO L-NUMS(1)\n       MOVE -2 TO L-NUMS(2)\n       MOVE -3 TO L-NUMS(3)\n       MOVE 10 TO L-NUMS(4)\n       MOVE -5 TO L-NUMS(5)\n       MOVE 1 TO L-NUMS(6)\n\n       CALL \"MINSUBARRAYSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-6","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MINSUBARRAYSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MINSUBARRAYSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 100 TO L-NUMS(1)\n       MOVE -1 TO L-NUMS(2)\n       MOVE -2 TO L-NUMS(3)\n       MOVE -3 TO L-NUMS(4)\n       MOVE 10 TO L-NUMS(5)\n       MOVE -5 TO L-NUMS(6)\n\n       CALL \"MINSUBARRAYSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-6","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MINSUBARRAYSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MINSUBARRAYSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-NUMS(1)\n       MOVE 11 TO L-NUMS(2)\n       MOVE 13 TO L-NUMS(3)\n       MOVE 8 TO L-NUMS(4)\n       MOVE 3 TO L-NUMS(5)\n       MOVE 4 TO L-NUMS(6)\n\n       CALL \"MINSUBARRAYSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MINSUBARRAYSUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MINSUBARRAYSUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 100 TO L-NUMS(1)\n       MOVE -33 TO L-NUMS(2)\n       MOVE 32 TO L-NUMS(3)\n       MOVE -1 TO L-NUMS(4)\n       MOVE 0 TO L-NUMS(5)\n       MOVE -2 TO L-NUMS(6)\n\n       CALL \"MINSUBARRAYSUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-33","type_":"Int"}}]}
{"task_id":"HumanEval/116","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-ARRAY.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * \n      * In this Kata, you have to sort an array of non-negative integers according to\n      * number of ones in their binary representation in ascending order.\n      * For similar number of ones, sort based on decimal value.\n      * \n      * It must be implemented like this:\n      * >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n      * >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n      * >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"sort_array","canonical_solution":"    return sorted(sorted(arr), key=lambda x: bin(x)[2:].count('1'))\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-ARRAY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORT-ARRAY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE 5 TO L-ARR(2)\n       MOVE 2 TO L-ARR(3)\n       MOVE 3 TO L-ARR(4)\n       MOVE 4 TO L-ARR(5)\n\n       CALL \"SORT-ARRAY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 2, 4, 3, 5]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-ARRAY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORT-ARRAY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -2 TO L-ARR(1)\n       MOVE -3 TO L-ARR(2)\n       MOVE -4 TO L-ARR(3)\n       MOVE -5 TO L-ARR(4)\n       MOVE -6 TO L-ARR(5)\n\n       CALL \"SORT-ARRAY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[-4, -2, -6, -5, -3]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORT-ARRAY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORT-ARRAY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-ARR(1)\n       MOVE 4 TO L-ARR(2)\n       MOVE 8 TO L-ARR(3)\n       MOVE 16 TO L-ARR(4)\n       MOVE 32 TO L-ARR(5)\n\n       CALL \"SORT-ARRAY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 4, 8, 16, 32]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/117","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SELECT-WORDS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n      * Given a string s and a natural number n, you have been tasked to implement\n      * a function that returns a list of all words from string s that contain exactly\n      * n consonants, in order these words appear in the string s.\n      * If the string s is empty then the function should return an empty list.\n      * Note: you may assume the input string contains only letters and spaces.\n      * Examples:\n      * select_words(\"Mary had a little lamb\", 4) ==> [\"little\"]\n      * select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n      * select_words(\"simple white space\", 2) ==> []\n      * select_words(\"Hello world\", 4) ==> [\"world\"]\n      * select_words(\"Uncle sam\", 3) ==> [\"Uncle\"]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"select_words","canonical_solution":"    result = []\n    for word in s.split():\n        n_consonants = 0\n        for i in range(0, len(word)):\n            if word[i].lower() not in [\"a\",\"e\",\"i\",\"o\",\"u\"]:\n                n_consonants += 1 \n        if n_consonants == n:\n            result.append(word)\n    return result\n\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SELECT-WORDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SELECT-WORDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Mary had a little lamb\" TO L-S\n       MOVE 4 TO L-N\n\n       CALL \"SELECT-WORDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"little\"]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SELECT-WORDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SELECT-WORDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Mary had a little lamb\" TO L-S\n       MOVE 3 TO L-N\n\n       CALL \"SELECT-WORDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"Mary\", \"lamb\"]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SELECT-WORDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SELECT-WORDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"simple white space\" TO L-S\n       MOVE 2 TO L-N\n\n       CALL \"SELECT-WORDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SELECT-WORDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SELECT-WORDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Hello world\" TO L-S\n       MOVE 4 TO L-N\n\n       CALL \"SELECT-WORDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"world\"]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SELECT-WORDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SELECT-WORDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Uncle sam\" TO L-S\n       MOVE 3 TO L-N\n\n       CALL \"SELECT-WORDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"Uncle\"]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SELECT-WORDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SELECT-WORDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"\" TO L-S\n       MOVE 4 TO L-N\n\n       CALL \"SELECT-WORDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SELECT-WORDS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SELECT-WORDS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"a b c d e f\" TO L-S\n       MOVE 1 TO L-N\n\n       CALL \"SELECT-WORDS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"b\", \"c\", \"d\", \"f\"]","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/118","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n      * You are given a word. Your task is to find the closest vowel that stands between\n      * two consonants from the right side of the word (case sensitive).\n      * \n      * Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n      * find any vowel met the above condition.\n      * \n      * You may assume that the given string contains English letter only.\n      * \n      * Example:\n      * get_closest_vowel(\"yogurt\") ==> \"u\"\n      * get_closest_vowel(\"FULL\") ==> \"U\"\n      * get_closest_vowel(\"quick\") ==> \"\"\n      * get_closest_vowel(\"ab\") ==> \"\"\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"get_closest_vowel","canonical_solution":"    if len(word) < 3:\n        return \"\"\n\n    vowels = {\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", 'O', 'U', 'I'}\n    for i in range(len(word)-2, 0, -1):\n        if word[i] in vowels:\n            if (word[i+1] not in vowels) and (word[i-1] not in vowels):\n                return word[i]\n    return \"\"\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"yogurt\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"u\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"full\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"u\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"easy\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"eAsy\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"ali\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"bad\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"a\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"most\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"o\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"ab\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"ba\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"quick\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"anime\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"i\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Asia\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-CLOSEST-VOWEL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-CLOSEST-VOWEL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORD PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Above\" TO L-WORD\n\n       CALL \"GET-CLOSEST-VOWEL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"o\"","type_":"String"}}]}
{"task_id":"HumanEval/119","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n      * '''\n      * You are given a list of two strings, both strings consist of open\n      * parentheses '(' or close parentheses ')' only.\n      * Your job is to check if it is possible to concatenate the two strings in\n      * some order, that the resulting string will be good.\n      * A string S is considered to be good if and only if all parentheses in S\n      * are balanced. For example: the string '(())()' is good, while the string\n      * '())' is not.\n      * Return 'Yes' if there's a way to make a good string, and return 'No' otherwise.\n      * \n      * Examples:\n      * match_parens(['()(', ')']) == 'Yes'\n      * match_parens([')', ')']) == 'No'\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"match_parens","canonical_solution":"    def check(s):\n        val = 0\n        for i in s:\n            if i == '(':\n                val = val + 1\n            else:\n                val = val - 1\n            if val < 0:\n                return False\n        return True if val == 0 else False\n\n    S1 = lst[0] + lst[1]\n    S2 = lst[1] + lst[0]\n    return 'Yes' if check(S1) or check(S2) else 'No'\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '()(' TO L-LST(1)\n       MOVE ')' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE ')' TO L-LST(1)\n       MOVE ')' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '(()(())' TO L-LST(1)\n       MOVE '())())' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE ')())' TO L-LST(1)\n       MOVE '(()()(' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '(())))' TO L-LST(1)\n       MOVE '(()())((' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '()' TO L-LST(1)\n       MOVE '())' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '(()(' TO L-LST(1)\n       MOVE '()))()' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '((((' TO L-LST(1)\n       MOVE '((())' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE ')(()' TO L-LST(1)\n       MOVE '(()(' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE ')(' TO L-LST(1)\n       MOVE ')(' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '(' TO L-LST(1)\n       MOVE ')' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MATCH-PARENS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MATCH-PARENS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 2 TIMES INDEXED BY NI PIC X(2).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE ')' TO L-LST(1)\n       MOVE '(' TO L-LST(2)\n\n       CALL \"MATCH-PARENS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}}]}
{"task_id":"HumanEval/120","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAXIMUM.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-K PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * \n      * Given an array arr of integers and a positive integer k, return a sorted list\n      * of length k with the maximum k numbers in arr.\n      * \n      * Example 1:\n      * \n      * Input: arr = [-3, -4, 5], k = 3\n      * Output: [-4, -3, 5]\n      * \n      * Example 2:\n      * \n      * Input: arr = [4, -4, 4], k = 2\n      * Output: [4, 4]\n      * \n      * \n      * Note:\n      * 1. The length of the array will be 3\n      * 2. The elements in the array will be in the range of [-1000, 1000].\n      * 3. 0 <= k <= len(arr)\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"maximum","canonical_solution":"    if k == 0:\n        return []\n    arr.sort()\n    ans = arr[-k:]\n    return ans\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAXIMUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MAXIMUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-K PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -3 TO L-ARR(1)\n       MOVE -4 TO L-ARR(2)\n       MOVE 5 TO L-ARR(3)\n       MOVE 3 TO L-K\n\n       CALL \"MAXIMUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[-4, -3, 5]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAXIMUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MAXIMUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-K PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-ARR(1)\n       MOVE -4 TO L-ARR(2)\n       MOVE 4 TO L-ARR(3)\n       MOVE 2 TO L-K\n\n       CALL \"MAXIMUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[4, 4]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. MAXIMUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"MAXIMUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 L-K PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE 2 TO L-ARR(2)\n       MOVE 3 TO L-ARR(3)\n       MOVE 1 TO L-K\n\n       CALL \"MAXIMUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[3]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/121","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLUTION.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Given a non-empty list of integers, return the sum of all of the odd elements that are in even positions.\n      * \n      * \n      * Examples\n      * solution([5, 8, 7, 1]) ==> 12\n      * solution([3, 3, 3, 3, 3]) ==> 9\n      * solution([30, 13, 24, 321]) ==>0\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"solution","canonical_solution":"    return sum([x for idx, x in enumerate(lst) if idx%2==0 and x%2==1])\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLUTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLUTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-LST(1)\n       MOVE 8 TO L-LST(2)\n       MOVE 7 TO L-LST(3)\n       MOVE 1 TO L-LST(4)\n\n       CALL \"SOLUTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"12","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLUTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLUTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 30 TO L-LST(1)\n       MOVE 13 TO L-LST(2)\n       MOVE 24 TO L-LST(3)\n       MOVE 321 TO L-LST(4)\n\n       CALL \"SOLUTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLUTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLUTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 30 TO L-LST(1)\n       MOVE 13 TO L-LST(2)\n       MOVE 23 TO L-LST(3)\n       MOVE 32 TO L-LST(4)\n\n       CALL \"SOLUTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"23","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLUTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLUTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-LST(1)\n       MOVE 13 TO L-LST(2)\n       MOVE 2 TO L-LST(3)\n       MOVE 9 TO L-LST(4)\n\n       CALL \"SOLUTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}}]}
{"task_id":"HumanEval/122","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD-ELEMENTS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 9 TIMES INDEXED BY NI PIC S9(10).\n           05 L-K PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * Given a non-empty array of integers arr and an integer k, return\n      * the sum of the elements with at most two digits from the first k elements of arr.\n      * \n      * Example:\n      * \n      * Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n      * Output: 24 # sum of 21 + 3\n      * \n      * Constraints:\n      * 1. 1 <= len(arr) <= 100\n      * 2. 1 <= k <= len(arr)\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"add_elements","canonical_solution":"    return sum(elem for elem in arr[:k] if len(str(elem)) <= 2)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ADD-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 9 TIMES INDEXED BY NI PIC S9(10).\n           05 L-K PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE -2 TO L-ARR(2)\n       MOVE -3 TO L-ARR(3)\n       MOVE 41 TO L-ARR(4)\n       MOVE 57 TO L-ARR(5)\n       MOVE 76 TO L-ARR(6)\n       MOVE 87 TO L-ARR(7)\n       MOVE 88 TO L-ARR(8)\n       MOVE 99 TO L-ARR(9)\n       MOVE 3 TO L-K\n\n       CALL \"ADD-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ADD-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 9 TIMES INDEXED BY NI PIC S9(10).\n           05 L-K PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 11 TO L-ARR(1)\n       MOVE 21 TO L-ARR(2)\n       MOVE 3 TO L-ARR(3)\n       MOVE 90 TO L-ARR(4)\n       MOVE 5 TO L-ARR(5)\n       MOVE 6 TO L-ARR(6)\n       MOVE 7 TO L-ARR(7)\n       MOVE 8 TO L-ARR(8)\n       MOVE 9 TO L-ARR(9)\n       MOVE 4 TO L-K\n\n       CALL \"ADD-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"125","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ADD-ELEMENTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ADD-ELEMENTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 9 TIMES INDEXED BY NI PIC S9(10).\n           05 L-K PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 111 TO L-ARR(1)\n       MOVE 21 TO L-ARR(2)\n       MOVE 3 TO L-ARR(3)\n       MOVE 4000 TO L-ARR(4)\n       MOVE 5 TO L-ARR(5)\n       MOVE 6 TO L-ARR(6)\n       MOVE 7 TO L-ARR(7)\n       MOVE 8 TO L-ARR(8)\n       MOVE 9 TO L-ARR(9)\n       MOVE 4 TO L-K\n\n       CALL \"ADD-ELEMENTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"24","type_":"Int"}}]}
{"task_id":"HumanEval/123","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-ODD-COLLATZ.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * \n      * Given a positive integer n, return a sorted list that has the odd numbers in collatz sequence.\n      * \n      * The Collatz conjecture is a conjecture in mathematics that concerns a sequence defined\n      * as follows: start with any positive integer n. Then each term is obtained from the\n      * previous term as follows: if the previous term is even, the next term is one half of\n      * the previous term. If the previous term is odd, the next term is 3 times the previous\n      * term plus 1. The conjecture is that no matter what value of n, the sequence will always reach 1.\n      * \n      * Note:\n      * 1. Collatz(1) is [1].\n      * 2. returned list sorted in increasing order.\n      * \n      * For example:\n      * get_odd_collatz(5) returns [1, 5] # The collatz sequence for 5 is [5, 16, 8, 4, 2, 1], so the odd numbers are only 1, and 5.\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"get_odd_collatz","canonical_solution":"    if n%2==0:\n        odd_collatz = [] \n    else:\n        odd_collatz = [n]\n    while n > 1:\n        if n % 2 == 0:\n            n = n/2\n        else:\n            n = n*3 + 1\n            \n        if n%2 == 1:\n            odd_collatz.append(int(n))\n\n    return sorted(odd_collatz)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-ODD-COLLATZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-ODD-COLLATZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 14 TO L-N\n\n       CALL \"GET-ODD-COLLATZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 5, 7, 11, 13, 17]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-ODD-COLLATZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-ODD-COLLATZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"GET-ODD-COLLATZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 5]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-ODD-COLLATZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-ODD-COLLATZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 12 TO L-N\n\n       CALL \"GET-ODD-COLLATZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 3, 5]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-ODD-COLLATZ-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-ODD-COLLATZ.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"GET-ODD-COLLATZ\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/124","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n      * You have to write a function which validates a given date string and\n      * returns True if the date is valid otherwise False.\n      * The date is valid if all of the following rules are satisfied:\n      * 1. The date string is not empty.\n      * 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n      * 3. The months should not be less than 1 or higher than 12.\n      * 4. The date should be in the format: mm-dd-yyyy\n      * \n      * for example:\n      * valid_date('03-11-2000') => True\n      * \n      * valid_date('15-01-2012') => False\n      * \n      * valid_date('04-0-2040') => False\n      * \n      * valid_date('06-04-2020') => True\n      * \n      * valid_date('06/04/2020') => False\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"valid_date","canonical_solution":"    try:\n        date = date.strip()\n        month, day, year = date.split('-')\n        month, day, year = int(month), int(day), int(year)\n        if month < 1 or month > 12:\n            return False\n        if month in [1,3,5,7,8,10,12] and day < 1 or day > 31:\n            return False\n        if month in [4,6,9,11] and day < 1 or day > 30:\n            return False\n        if month == 2 and day < 1 or day > 29:\n            return False\n    except:\n        return False\n\n    return True\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '03-11-2000' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '15-01-2012' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '04-0-2040' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '06-04-2020' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '01-01-2007' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '03-32-2011' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '04-31-3000' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '06-06-2005' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '21-31-2000' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '04-12-2003' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '04122003' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '20030412' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '2003-04' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '2003-04-12' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. VALID-DATE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"VALID-DATE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-DATE PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '04-2003' TO L-DATE\n\n       CALL \"VALID-DATE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/126","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SORTED.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n      * '''\n      * Given a list of numbers, return whether or not they are sorted\n      * in ascending order. If list has more than 1 duplicate of the same\n      * number, return False. Assume no negative numbers and only integers.\n      * \n      * Examples\n      * is_sorted([1, 2, 3, 4, 5]) ➞ True\n      * is_sorted([1, 3, 2, 4, 5]) ➞ False\n      * is_sorted([1, 2, 2, 2, 3]) ➞ False\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"is_sorted","canonical_solution":"    count_digit = dict([(i, 0) for i in lst])\n    for i in lst:\n        count_digit[i]+=1 \n    if any(count_digit[i] > 2 for i in lst):\n        return False\n    if all(lst[i-1] <= lst[i] for i in range(1, len(lst))):\n        return True\n    else:\n        return False\n    \n    \n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SORTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SORTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST(1)\n       MOVE 2 TO L-LST(2)\n       MOVE 3 TO L-LST(3)\n       MOVE 4 TO L-LST(4)\n       MOVE 5 TO L-LST(5)\n\n       CALL \"IS-SORTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SORTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SORTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST(1)\n       MOVE 3 TO L-LST(2)\n       MOVE 2 TO L-LST(3)\n       MOVE 4 TO L-LST(4)\n       MOVE 5 TO L-LST(5)\n\n       CALL \"IS-SORTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SORTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SORTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST(1)\n       MOVE 3 TO L-LST(2)\n       MOVE 4 TO L-LST(3)\n       MOVE 5 TO L-LST(4)\n       MOVE 6 TO L-LST(5)\n\n       CALL \"IS-SORTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-SORTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-SORTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST(1)\n       MOVE 1 TO L-LST(2)\n       MOVE 3 TO L-LST(3)\n       MOVE 4 TO L-LST(4)\n       MOVE 5 TO L-LST(5)\n\n       CALL \"IS-SORTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/127","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSECTION.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-INTERVAL1 OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n           05 L-INTERVAL2 OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n      * You are given two intervals,\n      * where each interval is a pair of integers. For example, interval = (start, end) = (1, 2).\n      * The given intervals are closed which means that the interval (start, end)\n      * includes both start and end.\n      * For each given interval, it is assumed that its start is less or equal its end.\n      * Your task is to determine whether the length of intersection of these two\n      * intervals is a prime number.\n      * Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\n      * which its length is 1, which not a prime number.\n      * If the length of the intersection is a prime number, return \"YES\",\n      * otherwise, return \"NO\".\n      * If the two intervals don't intersect, return \"NO\".\n      * \n      * \n      * [input/output] samples:\n      * intersection((1, 2), (2, 3)) ==> \"NO\"\n      * intersection((-1, 1), (0, 4)) ==> \"NO\"\n      * intersection((-3, -1), (-5, 5)) ==> \"YES\"\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"intersection","canonical_solution":"    def is_prime(num):\n        if num == 1 or num == 0:\n            return False\n        if num == 2:\n            return True\n        for i in range(2, num):\n            if num%i == 0:\n                return False\n        return True\n\n    l = max(interval1[0], interval2[0])\n    r = min(interval1[1], interval2[1])\n    length = r - l\n    if length > 0 and is_prime(length):\n        return \"YES\"\n    return \"NO\"\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSECTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INTERSECTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-INTERVAL1 OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n           05 L-INTERVAL2 OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-INTERVAL1(1)\n       MOVE 2 TO L-INTERVAL1(2)\n       MOVE 2 TO L-INTERVAL2(1)\n       MOVE 3 TO L-INTERVAL2(2)\n\n       CALL \"INTERSECTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"NO\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSECTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INTERSECTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-INTERVAL1 OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n           05 L-INTERVAL2 OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE -1 TO L-INTERVAL1(1)\n       MOVE 1 TO L-INTERVAL1(2)\n       MOVE 0 TO L-INTERVAL2(1)\n       MOVE 4 TO L-INTERVAL2(2)\n\n       CALL \"INTERSECTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"NO\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSECTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INTERSECTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-INTERVAL1 OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n           05 L-INTERVAL2 OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE -3 TO L-INTERVAL1(1)\n       MOVE -1 TO L-INTERVAL1(2)\n       MOVE -5 TO L-INTERVAL2(1)\n       MOVE 5 TO L-INTERVAL2(2)\n\n       CALL \"INTERSECTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"YES\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSECTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INTERSECTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-INTERVAL1 OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n           05 L-INTERVAL2 OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE -2 TO L-INTERVAL1(1)\n       MOVE 2 TO L-INTERVAL1(2)\n       MOVE -4 TO L-INTERVAL2(1)\n       MOVE 0 TO L-INTERVAL2(2)\n\n       CALL \"INTERSECTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"YES\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSECTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INTERSECTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-INTERVAL1 OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n           05 L-INTERVAL2 OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE -11 TO L-INTERVAL1(1)\n       MOVE 2 TO L-INTERVAL1(2)\n       MOVE -1 TO L-INTERVAL2(1)\n       MOVE -1 TO L-INTERVAL2(2)\n\n       CALL \"INTERSECTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"NO\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSECTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INTERSECTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-INTERVAL1 OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n           05 L-INTERVAL2 OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-INTERVAL1(1)\n       MOVE 2 TO L-INTERVAL1(2)\n       MOVE 3 TO L-INTERVAL2(1)\n       MOVE 5 TO L-INTERVAL2(2)\n\n       CALL \"INTERSECTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"NO\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSECTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INTERSECTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-INTERVAL1 OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n           05 L-INTERVAL2 OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-INTERVAL1(1)\n       MOVE 2 TO L-INTERVAL1(2)\n       MOVE 1 TO L-INTERVAL2(1)\n       MOVE 2 TO L-INTERVAL2(2)\n\n       CALL \"INTERSECTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"NO\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INTERSECTION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INTERSECTION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-INTERVAL1 OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n           05 L-INTERVAL2 OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE -2 TO L-INTERVAL1(1)\n       MOVE -2 TO L-INTERVAL1(2)\n       MOVE -3 TO L-INTERVAL2(1)\n       MOVE -2 TO L-INTERVAL2(2)\n\n       CALL \"INTERSECTION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"NO\"","type_":"String"}}]}
{"task_id":"HumanEval/128","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PROD-SIGNS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * You are given an array arr of integers and you need to return\n      * sum of magnitudes of integers multiplied by product of all signs\n      * of each number in the array, represented by 1, -1 or 0.\n      * \n      * Example:\n      * >>> prod_signs([1, 2, 2, -4]) == -9\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"prod_signs","canonical_solution":"    if not arr: return None\n    prod = 0 if 0 in arr else (-1) ** len(list(filter(lambda x: x < 0, arr)))\n    return prod * sum([abs(i) for i in arr])\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PROD-SIGNS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PROD-SIGNS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE 2 TO L-ARR(2)\n       MOVE 2 TO L-ARR(3)\n       MOVE -4 TO L-ARR(4)\n\n       CALL \"PROD-SIGNS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-9","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PROD-SIGNS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PROD-SIGNS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -1 TO L-ARR(1)\n       MOVE 1 TO L-ARR(2)\n       MOVE -1 TO L-ARR(3)\n       MOVE 1 TO L-ARR(4)\n\n       CALL \"PROD-SIGNS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PROD-SIGNS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PROD-SIGNS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -1 TO L-ARR(1)\n       MOVE 1 TO L-ARR(2)\n       MOVE 1 TO L-ARR(3)\n       MOVE 1 TO L-ARR(4)\n\n       CALL \"PROD-SIGNS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. PROD-SIGNS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"PROD-SIGNS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 4 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -1 TO L-ARR(1)\n       MOVE 1 TO L-ARR(2)\n       MOVE 1 TO L-ARR(3)\n       MOVE 0 TO L-ARR(4)\n\n       CALL \"PROD-SIGNS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}}]}
{"task_id":"HumanEval/130","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRI.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in\n      * the last couple centuries. However, what people don't know is Tribonacci sequence.\n      * Tribonacci sequence is defined by the recurrence:\n      * tri(1) = 3\n      * tri(n) = 1 + n / 2, if n is even.\n      * tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n      * For example:\n      * tri(2) = 1 + (2 / 2) = 2\n      * tri(4) = 3\n      * tri(3) = tri(2) + tri(1) + tri(4)\n      * = 2 + 3 + 3 = 8\n      * You are given a non-negative integer number n, you have to a return a list of the\n      * first n + 1 numbers of the Tribonacci sequence.\n      * Examples:\n      * tri(3) = [1, 3, 2, 8]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"tri","canonical_solution":"    if n == 0:\n        return [1]\n    my_tri = [1, 3]\n    for i in range(2, n + 1):\n        if i % 2 == 0:\n            my_tri.append(i / 2 + 1)\n        else:\n            my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) / 2)\n    return my_tri\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRI-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRI.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n\n       CALL \"TRI\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 3, 2.0, 8.0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRI-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRI.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-N\n\n       CALL \"TRI\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 3, 2.0, 8.0, 3.0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRI-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRI.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"TRI\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 3, 2.0, 8.0, 3.0, 15.0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRI-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRI.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 6 TO L-N\n\n       CALL \"TRI\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 3, 2.0, 8.0, 3.0, 15.0, 4.0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRI-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRI.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-N\n\n       CALL \"TRI\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRI-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRI.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-N\n\n       CALL \"TRI\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRI-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRI.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 9 TO L-N\n\n       CALL \"TRI\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0, 35.0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRI-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRI.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 20 TO L-N\n\n       CALL \"TRI\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0, 35.0, 6.0, 48.0, 7.0, 63.0, 8.0, 80.0, 9.0, 99.0, 10.0, 120.0, 11.0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRI-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRI.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-N\n\n       CALL \"TRI\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. TRI-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"TRI.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"TRI\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 3]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/131","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Given a positive integer n, return the product of the odd digits.\n      * Return 0 if all digits are even.\n      * For example:\n      * digits(1)  == 1\n      * digits(4)  == 0\n      * digits(235) == 15\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"digits","canonical_solution":"    product = 1\n    odd_count = 0\n    for digit in str(n):\n        int_digit = int(digit)\n        if int_digit%2 == 1:\n            product= product*int_digit\n            odd_count+=1\n    if odd_count ==0:\n        return 0\n    else:\n        return product\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"DIGITS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 54 TO L-N\n\n       CALL \"DIGITS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 120 TO L-N\n\n       CALL \"DIGITS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5014 TO L-N\n\n       CALL \"DIGITS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 98765 TO L-N\n\n       CALL \"DIGITS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"315","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5576543 TO L-N\n\n       CALL \"DIGITS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2625","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DIGITS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DIGITS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2468 TO L-N\n\n       CALL \"DIGITS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}}]}
{"task_id":"HumanEval/132","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n      * '''\n      * Create a function that takes a string as input which contains only square brackets.\n      * The function should return True if and only if there is a valid subsequence of brackets\n      * where at least one bracket in the subsequence is nested.\n      * \n      * is_nested('[[]]') ➞ True\n      * is_nested('[]]]]]]][[[[[]') ➞ False\n      * is_nested('[][]') ➞ False\n      * is_nested('[]') ➞ False\n      * is_nested('[[][]]') ➞ True\n      * is_nested('[[]][[') ➞ True\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"is_nested","canonical_solution":"    opening_bracket_index = []\n    closing_bracket_index = []\n    for i in range(len(string)):\n        if string[i] == '[':\n            opening_bracket_index.append(i)\n        else:\n            closing_bracket_index.append(i)\n    closing_bracket_index.reverse()\n    cnt = 0\n    i = 0\n    l = len(closing_bracket_index)\n    for idx in opening_bracket_index:\n        if i < l and idx < closing_bracket_index[i]:\n            cnt += 1\n            i += 1\n    return cnt >= 2\n\n    \n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '[[]]' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '[]]]]]]][[[[[]' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '[][]' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '[[[[]]]]' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '[]]]]]]]]]]' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '[][][[]]' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '[[]' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '[]]' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '[[]][[' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '[[][]]' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE '[[[[[[[[' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-NESTED-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-NESTED.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-STRING PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE ']]]]]]]]' TO L-STRING\n\n       CALL \"IS-NESTED\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/133","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-SQUARES.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI COMP-2.\n           05 RESULT PIC S9(10).\n\n      * You are given a list of numbers.\n      * You need to return the sum of squared numbers in the given list,\n      * round each element in the list to the upper int(Ceiling) first.\n      * Examples:\n      * For lst = [1,3,5,7] the output should be 84\n      * For lst = [1.4,4.2,0] the output should be 29\n      * For lst = [-2.4,1,1] the output should be 6\n      * \n      * \n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"sum_squares","canonical_solution":"    import math\n    squared = 0\n    for i in lst:\n        squared += math.ceil(i)**2\n    return squared\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-SQUARES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-SQUARES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST(1)\n       MOVE 3 TO L-LST(2)\n       MOVE 5 TO L-LST(3)\n       MOVE 7 TO L-LST(4)\n\n       CALL \"SUM-SQUARES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"84","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-SQUARES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-SQUARES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1.4 TO L-LST(1)\n       MOVE 4.2 TO L-LST(2)\n       MOVE 0 TO L-LST(3)\n\n       CALL \"SUM-SQUARES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"29","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-SQUARES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-SQUARES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -2.4 TO L-LST(1)\n       MOVE 1 TO L-LST(2)\n       MOVE 1 TO L-LST(3)\n\n       CALL \"SUM-SQUARES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"6","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-SQUARES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-SQUARES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 100 TO L-LST(1)\n       MOVE 1 TO L-LST(2)\n       MOVE 15 TO L-LST(3)\n       MOVE 2 TO L-LST(4)\n\n       CALL \"SUM-SQUARES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"10230","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-SQUARES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-SQUARES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -1.4 TO L-LST(1)\n       MOVE 17.9 TO L-LST(2)\n       MOVE 18.9 TO L-LST(3)\n       MOVE 19.9 TO L-LST(4)\n\n       CALL \"SUM-SQUARES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1086","type_":"Int"}}]}
{"task_id":"HumanEval/134","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-LAST-CHAR-LETTER.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-TXT PIC X(100).\n           05 RESULT PIC 9.\n\n      * '''\n      * Create a function that returns True if the last character\n      * of a given string is an alphabetical character and is not\n      * a part of a word, and False otherwise.\n      * Note: \"word\" is a group of characters separated by space.\n      * \n      * Examples:\n      * is_last_char_letter(\"apple pie\") ➞ False\n      * is_last_char_letter(\"apple pi e\") ➞ True\n      * is_last_char_letter(\"apple pi e \") ➞ False\n      * is_last_char_letter(\"\") ➞ False\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"is_last_char_letter","canonical_solution":" \n    check = txt.split(' ')[-1]\n    return True if len(check) == 1 and (97 <= ord(check.lower()) <= 122) else False\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-LAST-CHAR-LETTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-LAST-CHAR-LETTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"apple\" TO L-TXT\n\n       CALL \"IS-LAST-CHAR-LETTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-LAST-CHAR-LETTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-LAST-CHAR-LETTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"apple pi e\" TO L-TXT\n\n       CALL \"IS-LAST-CHAR-LETTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-LAST-CHAR-LETTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-LAST-CHAR-LETTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"eeeee\" TO L-TXT\n\n       CALL \"IS-LAST-CHAR-LETTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-LAST-CHAR-LETTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-LAST-CHAR-LETTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"A\" TO L-TXT\n\n       CALL \"IS-LAST-CHAR-LETTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-LAST-CHAR-LETTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-LAST-CHAR-LETTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Pumpkin pie \" TO L-TXT\n\n       CALL \"IS-LAST-CHAR-LETTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-LAST-CHAR-LETTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-LAST-CHAR-LETTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Pumpkin pie 1\" TO L-TXT\n\n       CALL \"IS-LAST-CHAR-LETTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-LAST-CHAR-LETTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-LAST-CHAR-LETTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"\" TO L-TXT\n\n       CALL \"IS-LAST-CHAR-LETTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-LAST-CHAR-LETTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-LAST-CHAR-LETTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"eeeee e \" TO L-TXT\n\n       CALL \"IS-LAST-CHAR-LETTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-LAST-CHAR-LETTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-LAST-CHAR-LETTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"apple pie\" TO L-TXT\n\n       CALL \"IS-LAST-CHAR-LETTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-LAST-CHAR-LETTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-LAST-CHAR-LETTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TXT PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"apple pi e \" TO L-TXT\n\n       CALL \"IS-LAST-CHAR-LETTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/135","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CAN-ARRANGE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Create a function which returns the largest index of an element which\n      * is not greater than or equal to the element immediately preceding it. If\n      * no such element exists then return -1. The given array will not contain\n      * duplicate values.\n      * \n      * Examples:\n      * can_arrange([1,2,4,3,5]) = 3\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"can_arrange","canonical_solution":"    ind=-1\n    i=1\n    while i<len(arr):\n      if arr[i]<arr[i-1]:\n        ind=i\n      i+=1\n    return ind\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CAN-ARRANGE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CAN-ARRANGE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-ARR(1)\n       MOVE 2 TO L-ARR(2)\n       MOVE 4 TO L-ARR(3)\n       MOVE 3 TO L-ARR(4)\n       MOVE 5 TO L-ARR(5)\n\n       CALL \"CAN-ARRANGE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CAN-ARRANGE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CAN-ARRANGE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-ARR OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-ARR(1)\n       MOVE 8 TO L-ARR(2)\n       MOVE 5 TO L-ARR(3)\n       MOVE 7 TO L-ARR(4)\n       MOVE 3 TO L-ARR(5)\n\n       CALL \"CAN-ARRANGE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}}]}
{"task_id":"HumanEval/138","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-EQUAL-TO-SUM-EVEN.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n      * Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n      * Example\n      * is_equal_to_sum_even(4) == False\n      * is_equal_to_sum_even(6) == False\n      * is_equal_to_sum_even(8) == True\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"is_equal_to_sum_even","canonical_solution":"    return n%2 == 0 and n >= 8\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-EQUAL-TO-SUM-EVEN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-EQUAL-TO-SUM-EVEN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-N\n\n       CALL \"IS-EQUAL-TO-SUM-EVEN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-EQUAL-TO-SUM-EVEN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-EQUAL-TO-SUM-EVEN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 6 TO L-N\n\n       CALL \"IS-EQUAL-TO-SUM-EVEN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-EQUAL-TO-SUM-EVEN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-EQUAL-TO-SUM-EVEN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 8 TO L-N\n\n       CALL \"IS-EQUAL-TO-SUM-EVEN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-EQUAL-TO-SUM-EVEN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-EQUAL-TO-SUM-EVEN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-N\n\n       CALL \"IS-EQUAL-TO-SUM-EVEN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-EQUAL-TO-SUM-EVEN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-EQUAL-TO-SUM-EVEN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 11 TO L-N\n\n       CALL \"IS-EQUAL-TO-SUM-EVEN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-EQUAL-TO-SUM-EVEN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-EQUAL-TO-SUM-EVEN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 12 TO L-N\n\n       CALL \"IS-EQUAL-TO-SUM-EVEN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-EQUAL-TO-SUM-EVEN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-EQUAL-TO-SUM-EVEN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 13 TO L-N\n\n       CALL \"IS-EQUAL-TO-SUM-EVEN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. IS-EQUAL-TO-SUM-EVEN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"IS-EQUAL-TO-SUM-EVEN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 16 TO L-N\n\n       CALL \"IS-EQUAL-TO-SUM-EVEN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}}]}
{"task_id":"HumanEval/139","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SPECIAL-FACTORIAL.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * The Brazilian factorial is defined as:\n      * brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n      * where n > 0\n      * \n      * For example:\n      * >>> special_factorial(4)\n      * 288\n      * \n      * The function will receive an integer as input and should return the special\n      * factorial of this integer.\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"special_factorial","canonical_solution":"    fact_i = 1\n    special_fact = 1\n    for i in range(1, n+1):\n        fact_i *= i\n        special_fact *= fact_i\n    return special_fact\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SPECIAL-FACTORIAL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SPECIAL-FACTORIAL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-N\n\n       CALL \"SPECIAL-FACTORIAL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"288","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SPECIAL-FACTORIAL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SPECIAL-FACTORIAL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"SPECIAL-FACTORIAL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"34560","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SPECIAL-FACTORIAL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SPECIAL-FACTORIAL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-N\n\n       CALL \"SPECIAL-FACTORIAL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"125411328000","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SPECIAL-FACTORIAL-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SPECIAL-FACTORIAL.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n\n       CALL \"SPECIAL-FACTORIAL\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}}]}
{"task_id":"HumanEval/140","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIX-SPACES.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n      * \n      * Given a string text, replace all spaces in it with underscores,\n      * and if a string has more than 2 consecutive spaces,\n      * then replace all consecutive spaces with -\n      * \n      * fix_spaces(\"Example\") == \"Example\"\n      * fix_spaces(\"Example 1\") == \"Example_1\"\n      * fix_spaces(\" Example 2\") == \"_Example_2\"\n      * fix_spaces(\" Example   3\") == \"_Example-3\"\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"fix_spaces","canonical_solution":"    new_text = \"\"\n    i = 0\n    start, end = 0, 0\n    while i < len(text):\n        if text[i] == \" \":\n            end += 1\n        else:\n            if end - start > 2:\n                new_text += \"-\"+text[i]\n            elif end - start > 0:\n                new_text += \"_\"*(end - start)+text[i]\n            else:\n                new_text += text[i]\n            start, end = i+1, i+1\n        i+=1\n    if end - start > 2:\n        new_text += \"-\"\n    elif end - start > 0:\n        new_text += \"_\"\n    return new_text\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIX-SPACES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIX-SPACES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Example\" TO L-TEXT\n\n       CALL \"FIX-SPACES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"Example\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIX-SPACES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIX-SPACES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Mudasir Hanif \" TO L-TEXT\n\n       CALL \"FIX-SPACES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"Mudasir_Hanif_\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIX-SPACES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIX-SPACES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Yellow Yellow  Dirty  Fellow\" TO L-TEXT\n\n       CALL \"FIX-SPACES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"Yellow_Yellow__Dirty__Fellow\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIX-SPACES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIX-SPACES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Exa   mple\" TO L-TEXT\n\n       CALL \"FIX-SPACES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"Exa-mple\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIX-SPACES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIX-SPACES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"   Exa 1 2 2 mple\" TO L-TEXT\n\n       CALL \"FIX-SPACES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"-Exa_1_2_2_mple\"","type_":"String"}}]}
{"task_id":"HumanEval/141","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n      * Create a function which takes a string representing a file's name, and returns\n      * 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n      * A file's name is considered to be valid if and only if all the following conditions\n      * are met:\n      * - There should not be more than three digits ('0'-'9') in the file's name.\n      * - The file's name contains exactly one dot '.'\n      * - The substring before the dot should not be empty, and it starts with a letter from\n      * the latin alphapet ('a'-'z' and 'A'-'Z').\n      * - The substring after the dot should be one of these: ['txt', 'exe', 'dll']\n      * Examples:\n      * file_name_check(\"example.txt\") # => 'Yes'\n      * file_name_check(\"1example.dll\") # => 'No' (the name should start with a latin alphapet letter)\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"file_name_check","canonical_solution":"    suf = ['txt', 'exe', 'dll']\n    lst = file_name.split(sep='.')\n    if len(lst) != 2:\n        return 'No'\n    if not lst[1] in suf:\n        return 'No'\n    if len(lst[0]) == 0:\n        return 'No'\n    if not lst[0][0].isalpha():\n        return 'No'\n    t = len([x for x in lst[0] if x.isdigit()])\n    if t > 3:\n        return 'No'\n    return 'Yes'\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"example.txt\" TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"1example.dll\" TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 's1sdf3.asd' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'K.dll' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'MY16FILE3.exe' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'His12FILE94.exe' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '_Y.txt' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '?aREYA.exe' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '/this_is_valid.dll' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'this_is_valid.wow' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'this_is_valid.txt' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'this_is_valid.txtexe' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '#this2_i4s_5valid.ten' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '@this1_is6_valid.exe' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'this_is_12valid.6exe4.txt' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'all.exe.txt' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'I563_No.exe' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Is3youfault.txt' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'no_one#knows.dll' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Yes'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '1I563_Yes3.exe' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'I563_Yes3.txtt' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'final..txt' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'final132' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '_f4indsartal132.' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '.txt' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FILE-NAME-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FILE-NAME-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-FILE-NAME PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 's.' TO L-FILE-NAME\n\n       CALL \"FILE-NAME-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'No'","type_":"String"}}]}
{"task_id":"HumanEval/142","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-SQUARES.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * This function will take a list of integers. For all entries in the list, the function shall square the integer entry if its index is a\n      * multiple of 3 and will cube the integer entry if its index is a multiple of 4 and not a multiple of 3. The function will not\n      * change the entries in the list whose indexes are not a multiple of 3 or 4. The function shall then return the sum of all entries.\n      * \n      * Examples:\n      * For lst = [1,2,3] the output should be 6\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"sum_squares","canonical_solution":"    result =[]\n    for i in range(len(lst)):\n        if i %3 == 0:\n            result.append(lst[i]**2)\n        elif i % 4 == 0 and i%3 != 0:\n            result.append(lst[i]**3)\n        else:\n            result.append(lst[i])\n    return sum(result)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-SQUARES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-SQUARES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST(1)\n       MOVE 2 TO L-LST(2)\n       MOVE 3 TO L-LST(3)\n\n       CALL \"SUM-SQUARES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"6","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SUM-SQUARES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SUM-SQUARES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 3 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-LST(1)\n       MOVE 4 TO L-LST(2)\n       MOVE 9 TO L-LST(3)\n\n       CALL \"SUM-SQUARES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"14","type_":"Int"}}]}
{"task_id":"HumanEval/143","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-IN-SENTENCE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-SENTENCE PIC X(100).\n           05 RESULT PIC X(100).\n\n      * \n      * You are given a string representing a sentence,\n      * the sentence contains some words separated by a space,\n      * and you have to return a string that contains the words from the original sentence,\n      * whose lengths are prime numbers,\n      * the order of the words in the new string should be the same as the original one.\n      * \n      * Example 1:\n      * Input: sentence = \"This is a test\"\n      * Output: \"is\"\n      * \n      * Example 2:\n      * Input: sentence = \"lets go for swimming\"\n      * Output: \"go for\"\n      * \n      * Constraints:\n      * * 1 <= len(sentence) <= 100\n      * * sentence contains only letters\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"words_in_sentence","canonical_solution":"    new_lst = []\n    for word in sentence.split():\n        flg = 0\n        if len(word) == 1:\n            flg = 1\n        for i in range(2, len(word)):\n            if len(word)%i == 0:\n                flg = 1\n        if flg == 0 or len(word) == 2:\n            new_lst.append(word)\n    return \" \".join(new_lst)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-IN-SENTENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-IN-SENTENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-SENTENCE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"This is a test\" TO L-SENTENCE\n\n       CALL \"WORDS-IN-SENTENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"is\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-IN-SENTENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-IN-SENTENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-SENTENCE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"lets go for swimming\" TO L-SENTENCE\n\n       CALL \"WORDS-IN-SENTENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"go for\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-IN-SENTENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-IN-SENTENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-SENTENCE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"there is no place available here\" TO L-SENTENCE\n\n       CALL \"WORDS-IN-SENTENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"there is no place\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-IN-SENTENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-IN-SENTENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-SENTENCE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Hi I am Hussein\" TO L-SENTENCE\n\n       CALL \"WORDS-IN-SENTENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"Hi am Hussein\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-IN-SENTENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-IN-SENTENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-SENTENCE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"go for it\" TO L-SENTENCE\n\n       CALL \"WORDS-IN-SENTENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"go for it\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-IN-SENTENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-IN-SENTENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-SENTENCE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"here\" TO L-SENTENCE\n\n       CALL \"WORDS-IN-SENTENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. WORDS-IN-SENTENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"WORDS-IN-SENTENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-SENTENCE PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"here is\" TO L-SENTENCE\n\n       CALL \"WORDS-IN-SENTENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"is\"","type_":"String"}}]}
{"task_id":"HumanEval/144","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n      * Your task is to implement a function that will simplify the expression\n      * x * n. The function returns True if x * n evaluates to a whole number and False\n      * otherwise. Both x and n, are string representation of a fraction, and have the following format,\n      * <numerator>/<denominator> where both numerator and denominator are positive whole numbers.\n      * \n      * You can assume that x, and n are valid fractions, and do not have zero as denominator.\n      * \n      * simplify(\"1/5\", \"5/1\") = True\n      * simplify(\"1/6\", \"2/1\") = False\n      * simplify(\"7/10\", \"10/2\") = False\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"simplify","canonical_solution":"    a, b = x.split(\"/\")\n    c, d = n.split(\"/\")\n    numerator = int(a) * int(c)\n    denom = int(b) * int(d)\n    if (numerator/denom == int(numerator/denom)):\n        return True\n    return False\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"1/5\" TO L-X\n       MOVE \"5/1\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"1/6\" TO L-X\n       MOVE \"2/1\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"5/1\" TO L-X\n       MOVE \"3/1\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"7/10\" TO L-X\n       MOVE \"10/2\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"2/10\" TO L-X\n       MOVE \"50/10\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"7/2\" TO L-X\n       MOVE \"4/2\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"11/6\" TO L-X\n       MOVE \"6/1\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"2/3\" TO L-X\n       MOVE \"5/2\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"5/2\" TO L-X\n       MOVE \"3/5\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"2/4\" TO L-X\n       MOVE \"8/4\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"2/4\" TO L-X\n       MOVE \"4/2\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"1/5\" TO L-X\n       MOVE \"5/1\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SIMPLIFY-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SIMPLIFY.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-X PIC X(100).\n           05 L-N PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"1/5\" TO L-X\n       MOVE \"1/5\" TO L-N\n\n       CALL \"SIMPLIFY\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/145","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ORDER-BY-POINTS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n      * \n      * Write a function which sorts the given list of integers\n      * in ascending order according to the sum of their digits.\n      * Note: if there are several items with similar sum of their digits,\n      * order them based on their index in original list.\n      * \n      * For example:\n      * >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"order_by_points","canonical_solution":"    def digits_sum(n):\n        neg = 1\n        if n < 0: n, neg = -1 * n, -1 \n        n = [int(i) for i in str(n)]\n        n[0] = n[0] * neg\n        return sum(n)\n    return sorted(nums, key=digits_sum)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ORDER-BY-POINTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ORDER-BY-POINTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-NUMS(1)\n       MOVE 11 TO L-NUMS(2)\n       MOVE -1 TO L-NUMS(3)\n       MOVE -11 TO L-NUMS(4)\n       MOVE -12 TO L-NUMS(5)\n\n       CALL \"ORDER-BY-POINTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[-1, -11, 1, -12, 11]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ORDER-BY-POINTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ORDER-BY-POINTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-NUMS(1)\n       MOVE -11 TO L-NUMS(2)\n       MOVE -32 TO L-NUMS(3)\n       MOVE 43 TO L-NUMS(4)\n       MOVE 54 TO L-NUMS(5)\n\n       CALL \"ORDER-BY-POINTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[-32, -11, 1, 43, 54]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ORDER-BY-POINTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ORDER-BY-POINTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-NUMS(1)\n       MOVE 8 TO L-NUMS(2)\n       MOVE 9 TO L-NUMS(3)\n       MOVE 10 TO L-NUMS(4)\n       MOVE 11 TO L-NUMS(5)\n\n       CALL \"ORDER-BY-POINTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 10, 7, 8, 9]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. ORDER-BY-POINTS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"ORDER-BY-POINTS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 5 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 6 TO L-NUMS(1)\n       MOVE -76 TO L-NUMS(2)\n       MOVE -21 TO L-NUMS(3)\n       MOVE 23 TO L-NUMS(4)\n       MOVE 4 TO L-NUMS(5)\n\n       CALL \"ORDER-BY-POINTS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[-76, -21, 4, 23, 6]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/146","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SPECIALFILTER.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * Write a function that takes an array of numbers as input and returns\n      * the number of elements in the array that are greater than 10 and both\n      * first and last digits of a number are odd (1, 3, 5, 7, 9).\n      * For example:\n      * specialFilter([15, -73, 14, -15, 8, 9]) => 1\n      * specialFilter([33, -2, -3, 45, 21, 109]) => 2\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"specialFilter","canonical_solution":"    \n    count = 0\n    for num in nums:\n        if num > 10:\n            odd_digits = (1, 3, 5, 7, 9)\n            number_as_string = str(num)\n            if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n                count += 1\n        \n    return count \n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SPECIALFILTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SPECIALFILTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 33 TO L-NUMS(1)\n       MOVE -2 TO L-NUMS(2)\n       MOVE -3 TO L-NUMS(3)\n       MOVE 45 TO L-NUMS(4)\n       MOVE 21 TO L-NUMS(5)\n       MOVE 109 TO L-NUMS(6)\n\n       CALL \"SPECIALFILTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SPECIALFILTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SPECIALFILTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 43 TO L-NUMS(1)\n       MOVE -12 TO L-NUMS(2)\n       MOVE 93 TO L-NUMS(3)\n       MOVE 125 TO L-NUMS(4)\n       MOVE 121 TO L-NUMS(5)\n       MOVE 109 TO L-NUMS(6)\n\n       CALL \"SPECIALFILTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SPECIALFILTER-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SPECIALFILTER.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMS OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 71 TO L-NUMS(1)\n       MOVE -2 TO L-NUMS(2)\n       MOVE -33 TO L-NUMS(3)\n       MOVE 75 TO L-NUMS(4)\n       MOVE 21 TO L-NUMS(5)\n       MOVE 19 TO L-NUMS(6)\n\n       CALL \"SPECIALFILTER\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}}]}
{"task_id":"HumanEval/147","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-MAX-TRIPLES.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * You are given a positive integer n. You have to create an integer array a of length n.\n      * For each i (1 ≤ i ≤ n), the value of a[i] = i * i - i + 1.\n      * Return the number of triples (a[i], a[j], a[k]) of a where i < j < k,\n      * and a[i] + a[j] + a[k] is a multiple of 3.\n      * \n      * Example :\n      * Input: n = 5\n      * Output: 1\n      * Explanation:\n      * a = [1, 3, 7, 13, 21]\n      * The only valid triple is (1, 7, 13).\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"get_max_triples","canonical_solution":"    A = [i*i - i + 1 for i in range(1,n+1)]\n    ans = []\n    for i in range(n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if (A[i]+A[j]+A[k])%3 == 0:\n                    ans += [(A[i],A[j],A[k])]\n    return len(ans)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-MAX-TRIPLES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-MAX-TRIPLES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-N\n\n       CALL \"GET-MAX-TRIPLES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-MAX-TRIPLES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-MAX-TRIPLES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 6 TO L-N\n\n       CALL \"GET-MAX-TRIPLES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"4","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-MAX-TRIPLES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-MAX-TRIPLES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-N\n\n       CALL \"GET-MAX-TRIPLES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"36","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GET-MAX-TRIPLES-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GET-MAX-TRIPLES.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 100 TO L-N\n\n       CALL \"GET-MAX-TRIPLES\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"53361","type_":"Int"}}]}
{"task_id":"HumanEval/148","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BF.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-PLANET1 PIC X(100).\n           05 L-PLANET2 PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n      * '''\n      * There are eight planets in our solar system: the closerst to the Sun\n      * is Mercury, the next one is Venus, then Earth, Mars, Jupiter, Saturn,\n      * Uranus, Neptune.\n      * Write a function that takes two planet names as strings planet1 and planet2.\n      * The function should return a tuple containing all planets whose orbits are\n      * located between the orbit of planet1 and the orbit of planet2, sorted by\n      * the proximity to the sun.\n      * The function should return an empty tuple if planet1 or planet2\n      * are not correct planet names.\n      * Examples\n      * bf(\"Jupiter\", \"Neptune\") ==> (\"Saturn\", \"Uranus\")\n      * bf(\"Earth\", \"Mercury\") ==> (\"Venus\")\n      * bf(\"Mercury\", \"Uranus\") ==> (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"bf","canonical_solution":"    planet_names = (\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\")\n    if planet1 not in planet_names or planet2 not in planet_names or planet1 == planet2:\n        return ()\n    planet1_index = planet_names.index(planet1)\n    planet2_index = planet_names.index(planet2)\n    if planet1_index < planet2_index:\n        return (planet_names[planet1_index + 1: planet2_index])\n    else:\n        return (planet_names[planet2_index + 1 : planet1_index])\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BF-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BF.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PLANET1 PIC X(100).\n           05 L-PLANET2 PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Jupiter\" TO L-PLANET1\n       MOVE \"Neptune\" TO L-PLANET2\n\n       CALL \"BF\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"(\"Saturn\", \"Uranus\")","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BF-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BF.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PLANET1 PIC X(100).\n           05 L-PLANET2 PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Earth\" TO L-PLANET1\n       MOVE \"Mercury\" TO L-PLANET2\n\n       CALL \"BF\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"(\"Venus\",)","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BF-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BF.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PLANET1 PIC X(100).\n           05 L-PLANET2 PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Mercury\" TO L-PLANET1\n       MOVE \"Uranus\" TO L-PLANET2\n\n       CALL \"BF\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"(\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BF-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BF.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PLANET1 PIC X(100).\n           05 L-PLANET2 PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Neptune\" TO L-PLANET1\n       MOVE \"Venus\" TO L-PLANET2\n\n       CALL \"BF\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"(\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\")","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BF-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BF.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PLANET1 PIC X(100).\n           05 L-PLANET2 PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Earth\" TO L-PLANET1\n       MOVE \"Earth\" TO L-PLANET2\n\n       CALL \"BF\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"()","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BF-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BF.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PLANET1 PIC X(100).\n           05 L-PLANET2 PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Mars\" TO L-PLANET1\n       MOVE \"Earth\" TO L-PLANET2\n\n       CALL \"BF\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"()","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. BF-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"BF.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-PLANET1 PIC X(100).\n           05 L-PLANET2 PIC X(100).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"Jupiter\" TO L-PLANET1\n       MOVE \"Makemake\" TO L-PLANET2\n\n       CALL \"BF\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"()","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/149","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORTED-LIST-SUM.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n      * Write a function that accepts a list of strings as a parameter,\n      * deletes the strings that have odd lengths from it,\n      * and returns the resulted list with a sorted order,\n      * The list is always a list of strings and never an array of numbers,\n      * and it may contain duplicates.\n      * The order of the list should be ascending by length of each word, and you\n      * should return the list sorted by that rule.\n      * If two words have the same length, sort the list alphabetically.\n      * The function should return a list of strings in sorted order.\n      * You may assume that all words will have the same length.\n      * For example:\n      * assert list_sort([\"ab\", \"a\", \"aaa\", \"cd\"]) => [\"ab\", \"cd\"]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"sorted_list_sum","canonical_solution":"    lst.sort()\n    new_lst = []\n    for i in lst:\n        if len(i)%2 == 0:\n            new_lst.append(i)\n    return sorted(new_lst, key=len)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORTED-LIST-SUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORTED-LIST-SUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"school\" TO L-LST(1)\n       MOVE \"AI\" TO L-LST(2)\n       MOVE \"asdf\" TO L-LST(3)\n       MOVE \"b\" TO L-LST(4)\n\n       CALL \"SORTED-LIST-SUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"AI\", \"asdf\", \"school\"]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORTED-LIST-SUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORTED-LIST-SUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"d\" TO L-LST(1)\n       MOVE \"b\" TO L-LST(2)\n       MOVE \"c\" TO L-LST(3)\n       MOVE \"a\" TO L-LST(4)\n\n       CALL \"SORTED-LIST-SUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORTED-LIST-SUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORTED-LIST-SUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"d\" TO L-LST(1)\n       MOVE \"dcba\" TO L-LST(2)\n       MOVE \"abcd\" TO L-LST(3)\n       MOVE \"a\" TO L-LST(4)\n\n       CALL \"SORTED-LIST-SUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"abcd\", \"dcba\"]","type_":{"List":"String"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SORTED-LIST-SUM-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SORTED-LIST-SUM.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NJ PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'aaaa' TO L-LST(1)\n       MOVE 'bbbb' TO L-LST(2)\n       MOVE 'dd' TO L-LST(3)\n       MOVE 'cc' TO L-LST(4)\n\n       CALL \"SORTED-LIST-SUM\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NJ FROM 1 BY 1 UNTIL NJ > 100\n           MOVE RESULT (NJ) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[\"cc\", \"dd\", \"aaaa\", \"bbbb\"]","type_":{"List":"String"}}}]}
{"task_id":"HumanEval/150","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. X-OR-Y.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * A simple program which should return the value of x if n is\n      * a prime number and should return the value of y otherwise.\n      * \n      * Examples:\n      * for x_or_y(7, 34, 12) == 34\n      * for x_or_y(15, 8, 5) == 5\n      * \n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"x_or_y","canonical_solution":"    if n == 1:\n        return y\n    for i in range(2, n):\n        if n % i == 0:\n            return y\n            break\n    else:\n        return x\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. X-OR-Y-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"X-OR-Y.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-N\n       MOVE 34 TO L-X\n       MOVE 12 TO L-Y\n\n       CALL \"X-OR-Y\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"34","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. X-OR-Y-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"X-OR-Y.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 15 TO L-N\n       MOVE 8 TO L-X\n       MOVE 5 TO L-Y\n\n       CALL \"X-OR-Y\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"5","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. X-OR-Y-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"X-OR-Y.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-N\n       MOVE 33 TO L-X\n       MOVE 5212 TO L-Y\n\n       CALL \"X-OR-Y\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"33","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. X-OR-Y-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"X-OR-Y.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1259 TO L-N\n       MOVE 3 TO L-X\n       MOVE 52 TO L-Y\n\n       CALL \"X-OR-Y\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"3","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. X-OR-Y-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"X-OR-Y.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7919 TO L-N\n       MOVE -1 TO L-X\n       MOVE 12 TO L-Y\n\n       CALL \"X-OR-Y\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"-1","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. X-OR-Y-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"X-OR-Y.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3609 TO L-N\n       MOVE 1245 TO L-X\n       MOVE 583 TO L-Y\n\n       CALL \"X-OR-Y\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"583","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. X-OR-Y-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"X-OR-Y.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 91 TO L-N\n       MOVE 56 TO L-X\n       MOVE 129 TO L-Y\n\n       CALL \"X-OR-Y\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"129","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. X-OR-Y-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"X-OR-Y.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 6 TO L-N\n       MOVE 34 TO L-X\n       MOVE 1234 TO L-Y\n\n       CALL \"X-OR-Y\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"1234","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. X-OR-Y-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"X-OR-Y.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-N\n       MOVE 2 TO L-X\n       MOVE 0 TO L-Y\n\n       CALL \"X-OR-Y\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. X-OR-Y-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"X-OR-Y.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-N PIC S9(10).\n           05 L-X PIC S9(10).\n           05 L-Y PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-N\n       MOVE 2 TO L-X\n       MOVE 0 TO L-Y\n\n       CALL \"X-OR-Y\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"2","type_":"Int"}}]}
{"task_id":"HumanEval/151","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DOUBLE-THE-DIFFERENCE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 3 TIMES INDEXED BY NI COMP-2.\n           05 RESULT PIC S9(10).\n\n      * '''\n      * Given a list of numbers, return the sum of squares of the numbers\n      * in the list that are odd. Ignore numbers that are negative or not integers.\n      * \n      * double_the_difference([1, 3, 2]) == 1 + 9 + 0 = 10\n      * double_the_difference([-1, -2, 0]) == 0\n      * \n      * \n      * If the input list is empty, return 0.\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"double_the_difference","canonical_solution":"    return sum([i**2 for i in lst if i > 0 and i%2!=0 and \".\" not in str(i)])\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DOUBLE-THE-DIFFERENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DOUBLE-THE-DIFFERENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 3 TIMES INDEXED BY NI COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0.1 TO L-LST(1)\n       MOVE 0.2 TO L-LST(2)\n       MOVE 0.3 TO L-LST(3)\n\n       CALL \"DOUBLE-THE-DIFFERENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DOUBLE-THE-DIFFERENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DOUBLE-THE-DIFFERENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 3 TIMES INDEXED BY NI COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -10 TO L-LST(1)\n       MOVE -20 TO L-LST(2)\n       MOVE -30 TO L-LST(3)\n\n       CALL \"DOUBLE-THE-DIFFERENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DOUBLE-THE-DIFFERENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DOUBLE-THE-DIFFERENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 3 TIMES INDEXED BY NI COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -1 TO L-LST(1)\n       MOVE -2 TO L-LST(2)\n       MOVE 8 TO L-LST(3)\n\n       CALL \"DOUBLE-THE-DIFFERENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"0","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DOUBLE-THE-DIFFERENCE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DOUBLE-THE-DIFFERENCE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-LST OCCURS 3 TIMES INDEXED BY NI COMP-2.\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0.2 TO L-LST(1)\n       MOVE 3 TO L-LST(2)\n       MOVE 5 TO L-LST(3)\n\n       CALL \"DOUBLE-THE-DIFFERENCE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"34","type_":"Int"}}]}
{"task_id":"HumanEval/152","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COMPARE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-GAME OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 L-GUESS OCCURS 6 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NK PIC S9(10).\n\n      * I think we all remember that feeling when the result of some long-awaited\n      * event is finally known. The feelings and thoughts you have at that moment are\n      * definitely worth noting down and comparing.\n      * Your task is to determine if a person correctly guessed the results of a number of matches.\n      * You are given two arrays of scores and guesses of equal length, where each index shows a match.\n      * Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n      * the value is 0, and if not, the value is the absolute difference between the guess and the score.\n      * \n      * \n      * example:\n      * \n      * compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n      * compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"compare","canonical_solution":"    return [abs(x-y) for x,y in zip(game,guess)]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COMPARE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COMPARE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-GAME OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 L-GUESS OCCURS 6 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NK PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-GAME(1)\n       MOVE 2 TO L-GAME(2)\n       MOVE 3 TO L-GAME(3)\n       MOVE 4 TO L-GAME(4)\n       MOVE 5 TO L-GAME(5)\n       MOVE 1 TO L-GAME(6)\n       MOVE 1 TO L-GUESS(1)\n       MOVE 2 TO L-GUESS(2)\n       MOVE 3 TO L-GUESS(3)\n       MOVE 4 TO L-GUESS(4)\n       MOVE 2 TO L-GUESS(5)\n       MOVE -2 TO L-GUESS(6)\n\n       CALL \"COMPARE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NK FROM 1 BY 1 UNTIL NK > 100\n           MOVE RESULT (NK) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0,0,0,0,3,3]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. COMPARE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"COMPARE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-GAME OCCURS 6 TIMES INDEXED BY NI PIC S9(10).\n           05 L-GUESS OCCURS 6 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NK PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-GAME(1)\n       MOVE 0 TO L-GAME(2)\n       MOVE 0 TO L-GAME(3)\n       MOVE 0 TO L-GAME(4)\n       MOVE 0 TO L-GAME(5)\n       MOVE 0 TO L-GAME(6)\n       MOVE 0 TO L-GUESS(1)\n       MOVE 0 TO L-GUESS(2)\n       MOVE 0 TO L-GUESS(3)\n       MOVE 0 TO L-GUESS(4)\n       MOVE 0 TO L-GUESS(5)\n       MOVE 0 TO L-GUESS(6)\n\n       CALL \"COMPARE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NK FROM 1 BY 1 UNTIL NK > 100\n           MOVE RESULT (NK) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0,0,0,0,0,0]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/153","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRONGEST-EXTENSION.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-CLASS-NAME PIC X(100).\n           05 L-EXTENSIONS OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 RESULT PIC X(100).\n\n      * You will be given the name of a class (a string) and a list of extensions.\n      * The extensions are to be used to load additional classes to the class. The\n      * strength of the extension is as follows: Let CAP be the number of the uppercase\n      * letters in the extension's name, and let SM be the number of lowercase letters\n      * in the extension's name, the strength is given by the fraction CAP - SM.\n      * You should find the strongest extension and return a string in this\n      * format: ClassName.StrongestExtensionName.\n      * If there are two or more extensions with the same strength, you should\n      * choose the one that comes first in the list.\n      * For example, if you are given \"Slices\" as the class and a list of the\n      * extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed', 'Cehese'] then you should\n      * return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\n      * (its strength is -1).\n      * Example:\n      * for Strongest_Extension('my_class', ['AA', 'Be', 'CC', 'eB']) == 'my_class.AA'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"strongest_extension","canonical_solution":"    strong = extensions[0]\n    my_val = len([x for x in extensions[0] if x.isalpha() and x.isupper()]) - len([x for x in extensions[0] if x.isalpha() and x.islower()])\n    for s in extensions:\n        val = len([x for x in s if x.isalpha() and x.isupper()]) - len([x for x in s if x.isalpha() and x.islower()])\n        if val > my_val:\n            strong = s\n            my_val = val\n\n    ans = class_name + \".\" + strong\n    return ans\n\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRONGEST-EXTENSION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRONGEST-EXTENSION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-CLASS-NAME PIC X(100).\n           05 L-EXTENSIONS OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Boku123' TO L-CLASS-NAME\n       MOVE 'nani' TO L-EXTENSIONS(1)\n       MOVE 'NazeDa' TO L-EXTENSIONS(2)\n       MOVE 'YEs.WeCaNe' TO L-EXTENSIONS(3)\n       MOVE '32145tggg' TO L-EXTENSIONS(4)\n\n       CALL \"STRONGEST-EXTENSION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'Boku123.YEs.WeCaNe'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRONGEST-EXTENSION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRONGEST-EXTENSION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-CLASS-NAME PIC X(100).\n           05 L-EXTENSIONS OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'K' TO L-CLASS-NAME\n       MOVE 'Ta' TO L-EXTENSIONS(1)\n       MOVE 'TAR' TO L-EXTENSIONS(2)\n       MOVE 't234An' TO L-EXTENSIONS(3)\n       MOVE 'cosSo' TO L-EXTENSIONS(4)\n\n       CALL \"STRONGEST-EXTENSION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'K.TAR'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRONGEST-EXTENSION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRONGEST-EXTENSION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-CLASS-NAME PIC X(100).\n           05 L-EXTENSIONS OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '__HAHA' TO L-CLASS-NAME\n       MOVE 'Tab' TO L-EXTENSIONS(1)\n       MOVE '123' TO L-EXTENSIONS(2)\n       MOVE '781345' TO L-EXTENSIONS(3)\n       MOVE '-_-' TO L-EXTENSIONS(4)\n\n       CALL \"STRONGEST-EXTENSION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'__HAHA.123'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRONGEST-EXTENSION-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRONGEST-EXTENSION.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-CLASS-NAME PIC X(100).\n           05 L-EXTENSIONS OCCURS 4 TIMES INDEXED BY NI PIC X(4).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'finNNalLLly' TO L-CLASS-NAME\n       MOVE 'Die' TO L-EXTENSIONS(1)\n       MOVE 'NowW' TO L-EXTENSIONS(2)\n       MOVE 'Wow' TO L-EXTENSIONS(3)\n       MOVE 'WoW' TO L-EXTENSIONS(4)\n\n       CALL \"STRONGEST-EXTENSION\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'finNNalLLly.WoW'","type_":"String"}}]}
{"task_id":"HumanEval/154","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CYCPATTERN-CHECK.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC X(100).\n           05 L-B PIC X(100).\n           05 RESULT PIC 9.\n\n      * You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n      * cycpattern_check(\"abcd\",\"abd\") => False\n      * cycpattern_check(\"hello\",\"ell\") => True\n      * cycpattern_check(\"whassup\",\"psus\") => False\n      * cycpattern_check(\"abab\",\"baa\") => True\n      * cycpattern_check(\"efef\",\"eeff\") => False\n      * cycpattern_check(\"himenss\",\"simen\") => True\n      * \n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"cycpattern_check","canonical_solution":"    l = len(b)\n    pat = b + b\n    for i in range(len(a) - l + 1):\n        for j in range(l + 1):\n            if a[i:i+l] == pat[j:j+l]:\n                return True\n    return False\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CYCPATTERN-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CYCPATTERN-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC X(100).\n           05 L-B PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"xyzw\" TO L-A\n       MOVE \"xyw\" TO L-B\n\n       CALL \"CYCPATTERN-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CYCPATTERN-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CYCPATTERN-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC X(100).\n           05 L-B PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"yello\" TO L-A\n       MOVE \"ell\" TO L-B\n\n       CALL \"CYCPATTERN-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CYCPATTERN-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CYCPATTERN-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC X(100).\n           05 L-B PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"whattup\" TO L-A\n       MOVE \"ptut\" TO L-B\n\n       CALL \"CYCPATTERN-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CYCPATTERN-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CYCPATTERN-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC X(100).\n           05 L-B PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"efef\" TO L-A\n       MOVE \"fee\" TO L-B\n\n       CALL \"CYCPATTERN-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CYCPATTERN-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CYCPATTERN-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC X(100).\n           05 L-B PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"abab\" TO L-A\n       MOVE \"aabb\" TO L-B\n\n       CALL \"CYCPATTERN-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. CYCPATTERN-CHECK-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"CYCPATTERN-CHECK.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC X(100).\n           05 L-B PIC X(100).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE \"winemtt\" TO L-A\n       MOVE \"tinem\" TO L-B\n\n       CALL \"CYCPATTERN-CHECK\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}}]}
{"task_id":"HumanEval/155","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-COUNT.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * Given an integer. return a list that has the number of even and odd digits respectively.\n      * \n      * Example:\n      * even_odd_count(-12) ==> [1, 1]\n      * even_odd_count(123) ==> [1, 2]\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"even_odd_count","canonical_solution":"    even_count = 0\n    odd_count = 0\n    for i in str(abs(num)):\n        if int(i)%2==0:\n            even_count +=1\n        else:\n            odd_count +=1\n    return (even_count, odd_count)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-NUM\n\n       CALL \"EVEN-ODD-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[0, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -78 TO L-NUM\n\n       CALL \"EVEN-ODD-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 3452 TO L-NUM\n\n       CALL \"EVEN-ODD-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 2]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 346211 TO L-NUM\n\n       CALL \"EVEN-ODD-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[3, 3]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -345821 TO L-NUM\n\n       CALL \"EVEN-ODD-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[3, 3]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -2 TO L-NUM\n\n       CALL \"EVEN-ODD-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE -45347 TO L-NUM\n\n       CALL \"EVEN-ODD-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 3]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EVEN-ODD-COUNT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EVEN-ODD-COUNT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUM PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 0 TO L-NUM\n\n       CALL \"EVEN-ODD-COUNT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[1, 0]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/156","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n      * \n      * Given a positive integer, obtain its roman numeral equivalent as a string,\n      * and return it in lowercase.\n      * Restrictions: 1 <= num <= 1000\n      * \n      * Examples:\n      * >>> int_to_mini_roman(19) == 'xix'\n      * >>> int_to_mini_roman(152) == 'clii'\n      * >>> int_to_mini_roman(426) == 'cdxxvi'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"int_to_mini_roman","canonical_solution":"    num = [1, 4, 5, 9, 10, 40, 50, 90,  \n           100, 400, 500, 900, 1000] \n    sym = [\"I\", \"IV\", \"V\", \"IX\", \"X\", \"XL\",  \n           \"L\", \"XC\", \"C\", \"CD\", \"D\", \"CM\", \"M\"] \n    i = 12\n    res = ''\n    while number: \n        div = number // num[i] \n        number %= num[i] \n        while div: \n            res += sym[i] \n            div -= 1\n        i -= 1\n    return res.lower()\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 19 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'xix'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 152 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'clii'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 251 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'ccli'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 426 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'cdxxvi'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 500 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'d'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'i'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'iv'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 43 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'xliii'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 90 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'xc'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 94 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'xciv'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 532 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'dxxxii'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 900 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'cm'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 994 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'cmxciv'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. INT-TO-MINI-ROMAN-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"INT-TO-MINI-ROMAN.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1000 TO L-NUMBER\n\n       CALL \"INT-TO-MINI-ROMAN\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'m'","type_":"String"}}]}
{"task_id":"HumanEval/157","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n      * '''\n      * Given the lengths of the three sides of a triangle. Return True if the three\n      * sides form a right-angled triangle, False otherwise.\n      * A right-angled triangle is a triangle in which one angle is right angle or\n      * 90 degree.\n      * Example:\n      * right_angle_triangle(3, 4, 5) == True\n      * right_angle_triangle(1, 2, 3) == False\n      * '''\n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"right_angle_triangle","canonical_solution":"    return a*a == b*b + c*c or b*b == a*a + c*c or c*c == a*a + b*b\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RIGHT-ANGLE-TRIANGLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 3 TO L-A\n       MOVE 4 TO L-B\n       MOVE 5 TO L-C\n\n       CALL \"RIGHT-ANGLE-TRIANGLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RIGHT-ANGLE-TRIANGLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-A\n       MOVE 2 TO L-B\n       MOVE 3 TO L-C\n\n       CALL \"RIGHT-ANGLE-TRIANGLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RIGHT-ANGLE-TRIANGLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-A\n       MOVE 6 TO L-B\n       MOVE 8 TO L-C\n\n       CALL \"RIGHT-ANGLE-TRIANGLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RIGHT-ANGLE-TRIANGLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-A\n       MOVE 2 TO L-B\n       MOVE 2 TO L-C\n\n       CALL \"RIGHT-ANGLE-TRIANGLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RIGHT-ANGLE-TRIANGLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 7 TO L-A\n       MOVE 24 TO L-B\n       MOVE 25 TO L-C\n\n       CALL \"RIGHT-ANGLE-TRIANGLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RIGHT-ANGLE-TRIANGLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-A\n       MOVE 5 TO L-B\n       MOVE 7 TO L-C\n\n       CALL \"RIGHT-ANGLE-TRIANGLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RIGHT-ANGLE-TRIANGLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-A\n       MOVE 12 TO L-B\n       MOVE 13 TO L-C\n\n       CALL \"RIGHT-ANGLE-TRIANGLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RIGHT-ANGLE-TRIANGLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 15 TO L-A\n       MOVE 8 TO L-B\n       MOVE 17 TO L-C\n\n       CALL \"RIGHT-ANGLE-TRIANGLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RIGHT-ANGLE-TRIANGLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 48 TO L-A\n       MOVE 55 TO L-B\n       MOVE 73 TO L-C\n\n       CALL \"RIGHT-ANGLE-TRIANGLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"True","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RIGHT-ANGLE-TRIANGLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-A\n       MOVE 1 TO L-B\n       MOVE 1 TO L-C\n\n       CALL \"RIGHT-ANGLE-TRIANGLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. RIGHT-ANGLE-TRIANGLE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"RIGHT-ANGLE-TRIANGLE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC 9.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 L-C PIC S9(10).\n           05 RESULT PIC 9.\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-A\n       MOVE 2 TO L-B\n       MOVE 10 TO L-C\n\n       CALL \"RIGHT-ANGLE-TRIANGLE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"False","type_":"Bool"}}]}
{"task_id":"HumanEval/158","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIND-MAX.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-WORDS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 RESULT PIC X(100).\n\n      * Write a function that accepts a list of strings.\n      * The list contains different words. Return the word with maximum number\n      * of unique characters. If multiple strings have maximum number of unique\n      * characters, return the one which comes first in lexicographical order.\n      * \n      * find_max([\"name\", \"of\", \"string\"]) == \"string\"\n      * find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n      * find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"find_max","canonical_solution":"    return sorted(words, key = lambda x: (-len(set(x)), x))[0]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIND-MAX-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIND-MAX.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORDS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"name\" TO L-WORDS(1)\n       MOVE \"of\" TO L-WORDS(2)\n       MOVE \"string\" TO L-WORDS(3)\n\n       CALL \"FIND-MAX\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"string\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIND-MAX-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIND-MAX.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORDS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"name\" TO L-WORDS(1)\n       MOVE \"enam\" TO L-WORDS(2)\n       MOVE \"game\" TO L-WORDS(3)\n\n       CALL \"FIND-MAX\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"enam\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIND-MAX-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIND-MAX.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORDS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"aaaaaaa\" TO L-WORDS(1)\n       MOVE \"bb\" TO L-WORDS(2)\n       MOVE \"cc\" TO L-WORDS(3)\n\n       CALL \"FIND-MAX\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"aaaaaaa\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. FIND-MAX-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"FIND-MAX.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-WORDS OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"play\" TO L-WORDS(1)\n       MOVE \"play\" TO L-WORDS(2)\n       MOVE \"play\" TO L-WORDS(3)\n\n       CALL \"FIND-MAX\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"play\"","type_":"String"}}]}
{"task_id":"HumanEval/159","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EAT.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 L-NEED PIC S9(10).\n           05 L-REMAINING PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * \n      * You're a hungry rabbit, and you already have eaten a certain number of carrots,\n      * but now you need to eat more carrots to complete the day's meals.\n      * you should return an array of [ total number of eaten carrots after your meals,\n      * the number of carrots left after your meals ]\n      * if there are not enough remaining carrots, you will eat all remaining carrots, but will still be hungry.\n      * \n      * Example:\n      * * eat(5, 6, 10) -> [11, 4]\n      * * eat(4, 8, 9) -> [12, 1]\n      * * eat(1, 10, 10) -> [11, 0]\n      * * eat(2, 11, 5) -> [7, 0]\n      * \n      * Variables:\n      * @number : integer\n      * the number of carrots that you have eaten.\n      * @need : integer\n      * the number of carrots that you need to eat.\n      * @remaining : integer\n      * the number of remaining carrots thet exist in stock\n      * \n      * Constrain:\n      * * 0 <= number <= 1000\n      * * 0 <= need <= 1000\n      * * 0 <= remaining <= 1000\n      * \n      * Have fun :)\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"eat","canonical_solution":"    if(need <= remaining):\n        return [ number + need , remaining-need ]\n    else:\n        return [ number + remaining , 0]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EAT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EAT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 L-NEED PIC S9(10).\n           05 L-REMAINING PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 5 TO L-NUMBER\n       MOVE 6 TO L-NEED\n       MOVE 10 TO L-REMAINING\n\n       CALL \"EAT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[11, 4]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EAT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EAT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 L-NEED PIC S9(10).\n           05 L-REMAINING PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-NUMBER\n       MOVE 8 TO L-NEED\n       MOVE 9 TO L-REMAINING\n\n       CALL \"EAT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[12, 1]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EAT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EAT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 L-NEED PIC S9(10).\n           05 L-REMAINING PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 1 TO L-NUMBER\n       MOVE 10 TO L-NEED\n       MOVE 10 TO L-REMAINING\n\n       CALL \"EAT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[11, 0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EAT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EAT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 L-NEED PIC S9(10).\n           05 L-REMAINING PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-NUMBER\n       MOVE 11 TO L-NEED\n       MOVE 5 TO L-REMAINING\n\n       CALL \"EAT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[7, 0]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EAT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EAT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 L-NEED PIC S9(10).\n           05 L-REMAINING PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-NUMBER\n       MOVE 5 TO L-NEED\n       MOVE 7 TO L-REMAINING\n\n       CALL \"EAT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[9, 2]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. EAT-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"EAT.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-NUMBER PIC S9(10).\n           05 L-NEED PIC S9(10).\n           05 L-REMAINING PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 4 TO L-NUMBER\n       MOVE 5 TO L-NEED\n       MOVE 1 TO L-REMAINING\n\n       CALL \"EAT\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[5, 0]","type_":{"List":"Int"}}}]}
{"task_id":"HumanEval/160","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DO-ALGEBRA.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-OPERATOR OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 L-OPERAND OCCURS 3 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC S9(10).\n\n      * \n      * Given two lists operator, and operand. The first list has basic algebra operations, and\n      * the second list is a list of integers. Use the two given lists to build the algebric\n      * expression and return the evaluation of this expression.\n      * \n      * The basic algebra operations:\n      * Addition ( + )\n      * Subtraction ( - )\n      * Multiplication ( * )\n      * Floor division ( // )\n      * Exponentiation ( ** )\n      * \n      * Example:\n      * operator['+', '*', '-']\n      * array = [2, 3, 4, 5]\n      * result = 2 + 3 * 4 - 5\n      * => result = 9\n      * \n      * Note:\n      * The length of operator list is equal to the length of operand list minus one.\n      * Operand is a list of of non-negative integers.\n      * Operator list has at least one operator, and operand list has at least two operands.\n      * \n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"do_algebra","canonical_solution":"    expression = str(operand[0])\n    for oprt, oprn in zip(operator, operand[1:]):\n        expression+= oprt + str(oprn)\n    return eval(expression)\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DO-ALGEBRA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DO-ALGEBRA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-OPERATOR OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 L-OPERAND OCCURS 3 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE '**' TO L-OPERATOR(1)\n       MOVE '*' TO L-OPERATOR(2)\n       MOVE '+' TO L-OPERATOR(3)\n       MOVE 2 TO L-OPERAND(1)\n       MOVE 3 TO L-OPERAND(2)\n       MOVE 4 TO L-OPERAND(3)\n       MOVE 5 TO L-OPERAND(4)\n\n       CALL \"DO-ALGEBRA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"37","type_":"Int"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. DO-ALGEBRA-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"DO-ALGEBRA.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-OPERATOR OCCURS 3 TIMES INDEXED BY NI PIC X(3).\n           05 L-OPERAND OCCURS 3 TIMES INDEXED BY NJ PIC S9(10).\n           05 RESULT PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE '+' TO L-OPERATOR(1)\n       MOVE '*' TO L-OPERATOR(2)\n       MOVE '-' TO L-OPERATOR(3)\n       MOVE 2 TO L-OPERAND(1)\n       MOVE 3 TO L-OPERAND(2)\n       MOVE 4 TO L-OPERAND(3)\n       MOVE 5 TO L-OPERAND(4)\n\n       CALL \"DO-ALGEBRA\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"9","type_":"Int"}}]}
{"task_id":"HumanEval/161","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n      * You are given a string s.\n      * if s[i] is a letter, reverse its case from lower to upper or vise versa,\n      * otherwise keep it as it is.\n      * If the string contains no letters, reverse the string.\n      * The function should return the resulted string.\n      * Examples\n      * solve(\"1234\") = \"4321\"\n      * solve(\"ab\") = \"AB\"\n      * solve(\"#a@C\") = \"#A@c\"\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"solve","canonical_solution":"    flg = 0\n    idx = 0\n    new_str = list(s)\n    for i in s:\n        if i.isalpha():\n            new_str[idx] = i.swapcase()\n            flg = 1\n        idx += 1\n    s = \"\"\n    for i in new_str:\n        s += i\n    if flg == 0:\n        return s[len(s)::-1]\n    return s\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"AsDf\" TO L-S\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"aSdF\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"1234\" TO L-S\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"4321\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"ab\" TO L-S\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"AB\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"#a@C\" TO L-S\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"#A@c\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"#AsdfW^45\" TO L-S\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"#aSDFw^45\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"#6@2\" TO L-S\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"2@6#\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"#$a^D\" TO L-S\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"#$A^d\"","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. SOLVE-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"SOLVE.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-S PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE \"#ccc\" TO L-S\n\n       CALL \"SOLVE\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"\"#CCC\"","type_":"String"}}]}
{"task_id":"HumanEval/162","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-TO-MD5.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n      * \n      * Given a string 'text', return its md5 hash equivalent string.\n      * If 'text' is an empty string, return 'None'.\n      * \n      * >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"string_to_md5","canonical_solution":"    import hashlib\n    return hashlib.md5(text.encode('ascii')).hexdigest() if text else None\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-TO-MD5-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRING-TO-MD5.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'Hello world' TO L-TEXT\n\n       CALL \"STRING-TO-MD5\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'3e25960a79dbc69b674cd4ec67a72c62'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-TO-MD5-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRING-TO-MD5.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE '' TO L-TEXT\n\n       CALL \"STRING-TO-MD5\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"None","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-TO-MD5-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRING-TO-MD5.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'A B C' TO L-TEXT\n\n       CALL \"STRING-TO-MD5\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'0ef78513b0cb8cef12743f5aeb35f888'","type_":"String"}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. STRING-TO-MD5-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"STRING-TO-MD5.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC X(100).\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-TEXT PIC X(100).\n           05 RESULT PIC X(100).\n\n       PROCEDURE DIVISION.\n\n       MOVE 'password' TO L-TEXT\n\n       CALL \"STRING-TO-MD5\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       MOVE RESULT TO OUTPUT-RECORD\n       WRITE OUTPUT-RECORD\n\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"'5f4dcc3b5aa765d61d8327deb882cf99'","type_":"String"}}]}
{"task_id":"HumanEval/163","prompt":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GENERATE-INTEGERS.\n\n       ENVIRONMENT DIVISION.\n       \n       INPUT-OUTPUT SECTION.\n\n       DATA DIVISION.\n\n       LINKAGE SECTION.\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n      * \n      * Given two positive integers a and b, return the even digits between a\n      * and b, in ascending order.\n      * \n      * For example:\n      * generate_integers(2, 8) => [2, 4, 6, 8]\n      * generate_integers(8, 2) => [2, 4, 6, 8]\n      * generate_integers(10, 14) => []\n      * \n\n      * Complete the WORKING-STORAGE SECTION and the PROCEDURE DIVISION\n      * Store the result in the RESULT variable and mark the end of your program with END PROGRAM\n\n       WORKING-STORAGE SECTION.\n       \n       ","entry_point":"generate_integers","canonical_solution":"    lower = max(2, min(a, b))\n    upper = min(8, max(a, b))\n\n    return [i for i in range(lower, upper+1) if i % 2 == 0]\n","tests":[{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GENERATE-INTEGERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GENERATE-INTEGERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 2 TO L-A\n       MOVE 10 TO L-B\n\n       CALL \"GENERATE-INTEGERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 4, 6, 8]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GENERATE-INTEGERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GENERATE-INTEGERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 10 TO L-A\n       MOVE 2 TO L-B\n\n       CALL \"GENERATE-INTEGERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 4, 6, 8]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GENERATE-INTEGERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GENERATE-INTEGERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 132 TO L-A\n       MOVE 2 TO L-B\n\n       CALL \"GENERATE-INTEGERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[2, 4, 6, 8]","type_":{"List":"Int"}}},{"test":"       IDENTIFICATION DIVISION.\n       PROGRAM-ID. GENERATE-INTEGERS-CALL.\n\n       ENVIRONMENT DIVISION.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n\n       SELECT OUTPUT-FILE ASSIGN TO \"GENERATE-INTEGERS.TXT\"\n           ORGANIZATION IS LINE SEQUENTIAL\n           STATUS IS OUTPUT-FILE-STATUS.\n       \n       DATA DIVISION.\n\n       FILE SECTION.\n       FD OUTPUT-FILE.\n       01 OUTPUT-RECORD PIC S9(10) SIGN LEADING.\n\n       WORKING-STORAGE SECTION.\n\n       01 OUTPUT-FILE-STATUS PIC X(02).\n\n\n\n       01 LINKED-ITEMS.\n           05 L-A PIC S9(10).\n           05 L-B PIC S9(10).\n           05 RESULT OCCURS 100 TIMES INDEXED BY NI PIC S9(10).\n\n       PROCEDURE DIVISION.\n\n       MOVE 17 TO L-A\n       MOVE 89 TO L-B\n\n       CALL \"GENERATE-INTEGERS\" USING LINKED-ITEMS\n       \n       OPEN OUTPUT OUTPUT-FILE\n\n       IF OUTPUT-FILE-STATUS NOT = \"00\"\n           DISPLAY \"ERROR OPENING OUTPUT FILE\"\n           STOP RUN\n        END-IF\n\n       PERFORM VARYING NI FROM 1 BY 1 UNTIL NI > 100\n           MOVE RESULT (NI) TO OUTPUT-RECORD\n           WRITE OUTPUT-RECORD\n       END-PERFORM\n\n        IF OUTPUT-FILE-STATUS NOT = \"00\"\n            DISPLAY \"ERROR WRITING TO OUTPUT FILE\"\n            STOP RUN\n        END-IF\n\n        CLOSE OUTPUT-FILE\n        .\n       ","result":{"value":"[]","type_":{"List":"Int"}}}]}
